static const uint8_t OtSkyFS_dx11[11091] =
{
	0x46, 0x53, 0x48, 0x0b, 0x70, 0x94, 0x72, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x75, // FSH.p.r........u
	0x5f, 0x73, 0x6b, 0x79, 0x12, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x2b, // _sky..........-+
	0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, // ..#include <meta
	0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, // l_stdlib>.#inclu
	0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, // de <simd/simd.h>
	0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, // ..using namespac
	0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, // e metal;..struct
	0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, //  _Global.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x33, 0x5d, 0x3b, 0x0a, // loat4 u_sky[3];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // tlMain_out.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //  float4 bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, // gData0 [[color(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // )]];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, // xlatMtlMain_in.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, // .    float3 v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // sition [[user(lo
	0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn0)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _dx11_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, // er(0)]]).{.    x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, // latMtlMain_out o
	0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ut = {};.    flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at3 _602 = fast:
	0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // :normalize(in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, // position);.    i
	0x66, 0x20, 0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x2d, 0x30, 0x2e, // f (_602.y < (-0.
	0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, // 1000000014901161
	0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, // 19384765625)).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, //   {.        disc
	0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, // ard_fragment();.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //     }.    float3
	0x20, 0x5f, 0x36, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, //  _612 = float3(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x78, // mtl_u.u_sky[1].x
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x32, // );.    float _62
	0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x36, 0x30, 0x32, 0x2c, 0x20, 0x66, 0x61, // 5 = dot(_602, fa
	0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, // st::normalize(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // tl_u.u_sky[2].xy
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // z));.    float3 
	0x5f, 0x38, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x28, 0x28, 0x65, 0x78, 0x70, // _859 = mix(((exp
	0x28, 0x28, 0x28, 0x5f, 0x36, 0x31, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // (((_612 * float3
	0x28, 0x35, 0x2e, 0x36, 0x30, 0x32, 0x30, 0x34, 0x35, 0x35, 0x33, 0x36, 0x30, 0x34, 0x31, 0x32, // (5.6020455360412
	0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x39, 0x2e, 0x34, 0x37, 0x33, 0x32, // 59765625, 9.4732
	0x38, 0x34, 0x37, 0x32, 0x31, 0x33, 0x37, 0x34, 0x35, 0x31, 0x31, 0x37, 0x31, 0x38, 0x37, 0x35, // 8472137451171875
	0x2c, 0x20, 0x31, 0x39, 0x2e, 0x36, 0x34, 0x33, 0x38, 0x30, 0x32, 0x36, 0x34, 0x32, 0x38, 0x32, // , 19.64380264282
	0x32, 0x32, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x2d, 0x65, // 2265625)) * ((-e
	0x78, 0x70, 0x28, 0x28, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // xp(((fma(_dx11_u.
	0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x2c, 0x20, 0x34, 0x2e, 0x30, 0x2c, // u_sky[2].y, 4.0,
	0x20, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28, //  _602.y) * (exp(
	0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x31, 0x36, 0x2e, 0x30, 0x29, // _602.y * (-16.0)
	0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, // ) + 0.1000000014
	0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, // 9011611938476562
	0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x31, 0x32, 0x35, 0x30, 0x30, // 5)) * (-0.012500
	0x30, 0x30, 0x30, 0x31, 0x38, 0x36, 0x32, 0x36, 0x34, 0x35, 0x31, 0x34, 0x39, 0x32, 0x33, 0x30, // 0001862645149230
	0x39, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, // 95703125)) / _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, // l_u.u_sky[1].x))
	0x20, 0x2a, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x20, 0x2a, //  * (exp(_602.y *
	0x20, 0x28, 0x2d, 0x31, 0x36, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x31, 0x30, //  (-16.0)) + 0.10
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, // 0000001490116119
	0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, // 384765625))) / f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // loat3(_dx11_u.u_s
	0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, // ky[1].x)) * exp(
	0x28, 0x28, 0x2d, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, // ((-_602.y) * exp
	0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x38, 0x2e, 0x30, 0x29, // (_602.y * (-8.0)
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, // )) * 4.0)) * exp
	0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x32, 0x2e, 0x30, 0x29, // (_602.y * (-2.0)
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // )) * 4.0, float3
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x65, 0x78, 0x70, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // (1.0 - exp(_dx11_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, // u.u_sky[2].y)) *
	0x20, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, //  0.2000000029802
	0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x66, // 3223876953125, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // loat3(fma(_dx11_u
	0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // .u_sky[2].y, -0.
	0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, // 2000000029802322
	0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, // 3876953125, 0.5)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // ));.    float3 _
	0x37, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x36, 0x31, 0x32, // 743 = ((fma(_612
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x35, 0x2e, 0x36, 0x30, 0x32, 0x30, 0x34, // , float3(5.60204
	0x35, 0x35, 0x33, 0x36, 0x30, 0x34, 0x31, 0x32, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, // 5536041259765625
	0x2c, 0x20, 0x39, 0x2e, 0x34, 0x37, 0x33, 0x32, 0x38, 0x34, 0x37, 0x32, 0x31, 0x33, 0x37, 0x34, // , 9.473284721374
	0x35, 0x31, 0x31, 0x37, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x39, 0x2e, 0x36, 0x34, 0x33, // 51171875, 19.643
	0x38, 0x30, 0x32, 0x36, 0x34, 0x32, 0x38, 0x32, 0x32, 0x32, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, // 802642822265625)
	0x2c, 0x20, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // , (((float3(_dx11
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2a, // _u.u_sky[1].y) *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x34, 0x33, 0x35, 0x39, 0x39, 0x34, //  float3(1.435994
	0x36, 0x32, 0x35, 0x30, 0x39, 0x31, 0x35, 0x35, 0x32, 0x37, 0x33, 0x34, 0x33, 0x37, 0x35, 0x2c, // 625091552734375,
	0x20, 0x31, 0x2e, 0x36, 0x30, 0x33, 0x34, 0x38, 0x35, 0x38, 0x32, 0x32, 0x36, 0x37, 0x37, 0x36, //  1.6034858226776
	0x31, 0x32, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x38, 0x36, 0x38, // 123046875, 1.868
	0x38, 0x36, 0x32, 0x35, 0x30, 0x39, 0x37, 0x32, 0x37, 0x34, 0x37, 0x38, 0x30, 0x32, 0x37, 0x33, // 8625097274780273
	0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x6d, // 4375)) * fma(-_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, // tl_u.u_sky[1].z,
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, //  _dx11_u.u_sky[1]
	0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .z, 1.0)) / floa
	0x74, 0x33, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // t3(fma(_dx11_u.u_
	0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // sky[1].z, _dx11_u
	0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x32, 0x2e, 0x30, // .u_sky[1].z, 2.0
	0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x70, 0x6f, 0x77, // ))) / float3(pow
	0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, // (fma(_dx11_u.u_sk
	0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x32, 0x2e, 0x30, 0x29, 0x2c, // y[1].z * (-2.0),
	0x20, 0x5f, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, //  _625, fma(_dx11_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, // u.u_sky[1].z, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, // tl_u.u_sky[1].z,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2f, //  1.0)), 1.5))) /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float3(_dx11_u.u
	0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // _sky[1].x + _dx11
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, // _u.u_sky[1].y)) 
	0x2a, 0x20, 0x28, 0x30, 0x2e, 0x31, 0x31, 0x39, 0x34, 0x32, 0x36, 0x37, 0x34, 0x39, 0x36, 0x34, // * (0.11942674964
	0x36, 0x36, 0x36, 0x33, 0x36, 0x36, 0x35, 0x37, 0x37, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, // 6663665771484375
	0x20, 0x2a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x36, 0x32, //  * fma(_625, _62
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x35, 0x39, // 5, 1.0))) * _859
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, // ;.    float3 _28
	0x30, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // 08;.    if (_dx11
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x20, 0x3e, 0x20, // _u.u_sky[0].y > 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0).    {.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x36, 0x31, 0x20, 0x3d, //    float3 _761 =
	0x20, 0x28, 0x28, 0x5f, 0x36, 0x30, 0x32, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  ((_602 / float3
	0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, // (_602.y)) * 2.0)
	0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  + float3(_dx11_u
	0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, // .u_sky[0].x * 0.
	0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, // 0500000007450580
	0x35, 0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, // 596923828125);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, //        float3 _9
	0x34, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x37, 0x36, 0x31, 0x29, // 40 = fract(_761)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.        float 
	0x5f, 0x39, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, // _943 = dot(floor
	0x28, 0x5f, 0x37, 0x36, 0x31, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, // (_761), float3(1
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, // .0, 157.0, 113.0
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ));.        floa
	0x74, 0x33, 0x20, 0x5f, 0x38, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x37, 0x36, 0x31, 0x20, // t3 _875 = (_761 
	0x2a, 0x20, 0x31, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, // * 1.100000023841
	0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, // 85791015625) * f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // loat3x3(float3(0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, // .0, 1.6000000238
	0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, // 4185791015625, 1
	0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, // .200000047683715
	0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 8203125), float3
	0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, // (-1.600000023841
	0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, // 85791015625, 0.7
	0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, // 2000002861022949
	0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, // 21875, -0.959999
	0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, // 9785423278808593
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, // 75), float3(-1.2
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, // 0000004768371582
	0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, // 03125, -0.959999
	0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, // 9785423278808593
	0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, // 75, 1.2799999713
	0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, // 897705078125));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x31, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, 0x37, // 1113 = fract(_87
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 5);.        floa
	0x74, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, // t _1116 = dot(fl
	0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // oor(_875), float
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, // 3(1.0, 157.0, 11
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 3.0));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, // loat3 _883 = (_8
	0x37, 0x35, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, // 75 * 1.200000047
	0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, // 6837158203125) *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  float3x3(float3
	0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, // (0.0, 1.60000002
	0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, // 384185791015625,
	0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, //  1.2000000476837
	0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 158203125), floa
	0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, // t3(-1.6000000238
	0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, // 4185791015625, 0
	0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, // .720000028610229
	0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, // 4921875, -0.9599
	0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, // 9997854232788085
	0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, // 9375), float3(-1
	0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, // .200000047683715
	0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, // 8203125, -0.9599
	0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, // 9997854232788085
	0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, // 9375, 1.27999997
	0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, // 13897705078125))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ;.        float3
	0x20, 0x5f, 0x31, 0x32, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, //  _1286 = fract(_
	0x38, 0x38, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 883);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat _1289 = dot(
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, 0x38, 0x33, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // floor(_883), flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, // at3(1.0, 157.0, 
	0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 113.0));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6d, //  float _888 = fm
	0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // a(mix(mix(mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x38, 0x39, 0x29, 0x20, 0x2a, // act(sin(_1289) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x38, 0x39, 0x20, // fract(sin(_1289 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // + 1.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x36, 0x2e, 0x78, 0x29, // 46875), _1286.x)
	0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // , mix(fract(sin(
	0x5f, 0x31, 0x32, 0x38, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _1289 + 157.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x38, 0x39, 0x20, // fract(sin(_1289 
	0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 158.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x36, 0x2e, // .546875), _1286.
	0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x36, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, // x), _1286.y), mi
	0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // x(mix(fract(sin(
	0x5f, 0x31, 0x32, 0x38, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _1289 + 113.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x38, 0x39, 0x20, // fract(sin(_1289 
	0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 114.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x36, 0x2e, // .546875), _1286.
	0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // x), mix(fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x32, 0x38, 0x39, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, // n(_1289 + 270.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x38, // , fract(sin(_128
	0x39, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 9 + 271.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x38, // 58.546875), _128
	0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x36, 0x2e, 0x79, 0x29, 0x2c, 0x20, // 6.x), _1286.y), 
	0x5f, 0x31, 0x32, 0x38, 0x36, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x36, 0x36, // _1286.z), 0.1666
	0x36, 0x36, 0x36, 0x37, 0x31, 0x36, 0x33, 0x33, 0x37, 0x32, 0x30, 0x33, 0x39, 0x37, 0x39, 0x34, // 6667163372039794
	0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, // 921875, fma(mix(
	0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // mix(mix(fract(si
	0x6e, 0x28, 0x5f, 0x39, 0x34, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, // n(_943) * 43758.
	0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, // 546875), fract(s
	0x69, 0x6e, 0x28, 0x5f, 0x39, 0x34, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // in(_943 + 1.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x5f, 0x39, 0x34, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, // _940.x), mix(fra
	0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x34, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x35, // ct(sin(_943 + 15
	0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 7.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // 875), fract(sin(
	0x5f, 0x39, 0x34, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // _943 + 158.0) * 
	0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 43758.546875), _
	0x39, 0x34, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x30, 0x2e, 0x79, 0x29, 0x2c, // 940.x), _940.y),
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, //  mix(mix(fract(s
	0x69, 0x6e, 0x28, 0x5f, 0x39, 0x34, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, // in(_943 + 113.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x34, 0x33, // , fract(sin(_943
	0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, //  + 114.0) * 4375
	0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x30, 0x2e, // 8.546875), _940.
	0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // x), mix(fract(si
	0x6e, 0x28, 0x5f, 0x39, 0x34, 0x33, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, // n(_943 + 270.0) 
	0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, // * 43758.546875),
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x34, 0x33, 0x20, //  fract(sin(_943 
	0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 271.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x30, 0x2e, 0x78, // .546875), _940.x
	0x29, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x30, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x34, 0x30, // ), _940.y), _940
	0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, // .z), 0.5, mix(mi
	0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // x(mix(fract(sin(
	0x5f, 0x31, 0x31, 0x31, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // _1116) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // n(_1116 + 1.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x5f, 0x31, 0x31, 0x31, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // _1113.x), mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x2b, 0x20, // act(sin(_1116 + 
	0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 157.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, // n(_1116 + 158.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, // , _1113.x), _111
	0x33, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // 3.y), mix(mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x2b, 0x20, // act(sin(_1116 + 
	0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 113.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, // n(_1116 + 114.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // , _1113.x), mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, // fract(sin(_1116 
	0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 270.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, // sin(_1116 + 271.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, // 5), _1113.x), _1
	0x31, 0x31, 0x33, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x33, 0x2e, 0x7a, 0x29, // 113.y), _1113.z)
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  * 0.25));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x39, 0x31, 0x20, 0x3d, //    float3 _891 =
	0x20, 0x28, 0x5f, 0x38, 0x38, 0x33, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x32, 0x39, 0x39, 0x39, 0x39, //  (_883 * 1.29999
	0x39, 0x39, 0x35, 0x32, 0x33, 0x31, 0x36, 0x32, 0x38, 0x34, 0x31, 0x37, 0x39, 0x36, 0x38, 0x37, // 9952316284179687
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, // 5) * float3x3(fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, // oat3(0.0, 1.6000
	0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, // 0002384185791015
	0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, // 625, 1.200000047
	0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, // 6837158203125), 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, // float3(-1.600000
	0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 0238418579101562
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, // 5, 0.72000002861
	0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 02294921875, -0.
	0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, // 9599999785423278
	0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 80859375), float
	0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, // 3(-1.20000004768
	0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 37158203125, -0.
	0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, // 9599999785423278
	0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, // 80859375, 1.2799
	0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, // 9997138977050781
	0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 25));.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, // oat3 _1459 = fra
	0x63, 0x74, 0x28, 0x5f, 0x38, 0x39, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ct(_891);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x20, 0x3d, 0x20, //   float _1462 = 
	0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, 0x39, 0x31, 0x29, 0x2c, // dot(floor(_891),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, //  float3(1.0, 157
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .0, 113.0));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x39, 0x39, //      float3 _899
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x39, 0x31, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x33, 0x39, 0x39, //  = (_891 * 1.399
	0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, // 9999761581420898
	0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, // 4375) * float3x3
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, // (float3(0.0, 1.6
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, // 0000002384185791
	0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, // 015625, 1.200000
	0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, // 0476837158203125
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, // ), float3(-1.600
	0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, // 0000238418579101
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, // 5625, 0.72000002
	0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, // 86102294921875, 
	0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, // -0.9599999785423
	0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, // 27880859375), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, // oat3(-1.20000004
	0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, // 76837158203125, 
	0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, // -0.9599999785423
	0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, // 27880859375, 1.2
	0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, // 7999997138977050
	0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 78125));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x32, 0x20, 0x3d, 0x20, //  float3 _1632 = 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, 0x39, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // fract(_899);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x35, //      float _1635
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, 0x39, //  = dot(floor(_89
	0x39, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, // 9), float3(1.0, 
	0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // 157.0, 113.0));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, //         float _7
	0x36, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, // 63 = smoothstep(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // 1.0 - _dx11_u.u_s
	0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6d, // ky[0].y, 1.0, fm
	0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // a(mix(mix(mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x35, 0x29, 0x20, 0x2a, // act(sin(_1635) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x35, 0x20, // fract(sin(_1635 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // + 1.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x32, 0x2e, 0x78, 0x29, // 46875), _1632.x)
	0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // , mix(fract(sin(
	0x5f, 0x31, 0x36, 0x33, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _1635 + 157.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x35, 0x20, // fract(sin(_1635 
	0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 158.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x32, 0x2e, // .546875), _1632.
	0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x32, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, // x), _1632.y), mi
	0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // x(mix(fract(sin(
	0x5f, 0x31, 0x36, 0x33, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _1635 + 113.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x35, 0x20, // fract(sin(_1635 
	0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 114.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x32, 0x2e, // .546875), _1632.
	0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // x), mix(fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x35, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, // n(_1635 + 270.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x33, // , fract(sin(_163
	0x35, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 5 + 271.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, // 58.546875), _163
	0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x32, 0x2e, 0x79, 0x29, 0x2c, 0x20, // 2.x), _1632.y), 
	0x5f, 0x31, 0x36, 0x33, 0x32, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, 0x36, // _1632.z), 0.0416
	0x36, 0x36, 0x36, 0x36, 0x37, 0x39, 0x30, 0x38, 0x34, 0x33, 0x30, 0x30, 0x39, 0x39, 0x34, 0x38, // 6666790843009948
	0x37, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, // 73046875, fma(mi
	0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // x(mix(mix(fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // sin(_1462) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, // 58.546875), frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, // t(sin(_1462 + 1.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, // 5), _1459.x), mi
	0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x36, // x(fract(sin(_146
	0x32, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 2 + 157.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, // 58.546875), frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x35, // t(sin(_1462 + 15
	0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 8.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, // 875), _1459.x), 
	0x5f, 0x31, 0x34, 0x35, 0x39, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, // _1459.y), mix(mi
	0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x36, // x(fract(sin(_146
	0x32, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 2 + 113.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, // 58.546875), frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x31, // t(sin(_1462 + 11
	0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 4.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, // 875), _1459.x), 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, // mix(fract(sin(_1
	0x34, 0x36, 0x32, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 462 + 270.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, // 3758.546875), fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x20, 0x2b, 0x20, // act(sin(_1462 + 
	0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 271.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x39, 0x2e, 0x78, 0x29, // 46875), _1459.x)
	0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x39, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, // , _1459.y), _145
	0x39, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, // 9.z), 0.08333333
	0x35, 0x38, 0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x39, 0x38, 0x39, 0x37, 0x34, 0x36, 0x30, 0x39, // 5816860198974609
	0x33, 0x37, 0x35, 0x2c, 0x20, 0x5f, 0x38, 0x38, 0x38, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 375, _888)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x6d, 0x69, //       _2808 = mi
	0x78, 0x28, 0x5f, 0x37, 0x34, 0x33, 0x2c, 0x20, 0x5f, 0x38, 0x35, 0x39, 0x20, 0x2a, 0x20, 0x34, // x(_743, _859 * 4
	0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x37, 0x36, 0x33, // .0, float3((_763
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, //  * 0.30000001192
	0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, // 0928955078125) *
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, //  fast::max(_602.
	0x79, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // y, 0.0)));.    }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // .    else.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x38, 0x20, 0x3d, 0x20, //         _2808 = 
	0x5f, 0x37, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // _743;.    }.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x37, 0x3b, 0x0a, 0x20, 0x20, // float3 _2807;.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, //   if (_dx11_u.u_s
	0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // ky[0].z > 0.0). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    {.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _2809;.     
	0x20, 0x20, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x38, //    _2809 = _2808
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, // ;.        for (i
	0x6e, 0x74, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x32, // nt _2806 = 0; _2
	0x38, 0x30, 0x36, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 806 < 2; ).     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x28, //  float3 _802 = (
	0x28, 0x5f, 0x36, 0x30, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, // (_602 * fma(floa
	0x74, 0x28, 0x5f, 0x32, 0x38, 0x30, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x39, 0x39, // t(_2806), 0.0099
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x37, 0x36, 0x34, 0x38, 0x32, 0x35, 0x38, 0x32, 0x30, 0x39, // 9999977648258209
	0x32, 0x32, 0x38, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x39, 0x39, // 228515625, 0.699
	0x39, 0x39, 0x39, 0x39, 0x38, 0x38, 0x30, 0x37, 0x39, 0x30, 0x37, 0x31, 0x30, 0x34, 0x34, 0x39, // 9999880790710449
	0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 21875)) / float3
	0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (_602.y)) + floa
	0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, // t3(_dx11_u.u_sky[
	0x30, 0x5d, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // 0].x * 0.3000000
	0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, // 1192092895507812
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5);.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, // float3 _1857 = f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, 0x30, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ract(_802);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x38, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // 860 = dot(floor(
	0x5f, 0x38, 0x30, 0x32, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, // _802), float3(1.
	0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, // 0, 157.0, 113.0)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // );.            f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, // loat3 _1792 = (_
	0x38, 0x30, 0x32, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, // 802 * 1.10000002
	0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // 384185791015625)
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  * float3x3(floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, // t3(0.0, 1.600000
	0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 0238418579101562
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, // 5, 1.20000004768
	0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, // 37158203125), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, // oat3(-1.60000002
	0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, // 384185791015625,
	0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, //  0.7200000286102
	0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, // 294921875, -0.95
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, // 9999978542327880
	0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 859375), float3(
	0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, // -1.2000000476837
	0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, // 158203125, -0.95
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, // 9999978542327880
	0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, // 859375, 1.279999
	0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, // 9713897705078125
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x66, // float3 _2030 = f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ract(_1792);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x32, 0x30, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, // 2033 = dot(floor
	0x28, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // (_1792), float3(
	0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, // 1.0, 157.0, 113.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0));.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x30, 0x30, 0x20, 0x3d, 0x20, //  float3 _1800 = 
	0x28, 0x5f, 0x31, 0x37, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, // (_1792 * 1.20000
	0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, // 0047683715820312
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, // 5) * float3x3(fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, // oat3(0.0, 1.6000
	0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, // 0002384185791015
	0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, // 625, 1.200000047
	0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, // 6837158203125), 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, // float3(-1.600000
	0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 0238418579101562
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, // 5, 0.72000002861
	0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 02294921875, -0.
	0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, // 9599999785423278
	0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 80859375), float
	0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, // 3(-1.20000004768
	0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 37158203125, -0.
	0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, // 9599999785423278
	0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, // 80859375, 1.2799
	0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, // 9997138977050781
	0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25));.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x33, 0x20, 0x3d, //   float3 _2203 =
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x31, 0x38, 0x30, 0x30, 0x29, 0x3b, 0x0a, 0x20, //  fract(_1800);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x32, 0x32, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, //  _2206 = dot(flo
	0x6f, 0x72, 0x28, 0x5f, 0x31, 0x38, 0x30, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // or(_1800), float
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, // 3(1.0, 157.0, 11
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3.0));.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x30, 0x35, 0x20, 0x3d, //    float _1805 =
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, //  fma(mix(mix(mix
	0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x32, 0x30, 0x36, // (fract(sin(_2206
	0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, // ) * 43758.546875
	0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x32, // ), fract(sin(_22
	0x30, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, // 06 + 1.0) * 4375
	0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x33, // 8.546875), _2203
	0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, // .x), mix(fract(s
	0x69, 0x6e, 0x28, 0x5f, 0x32, 0x32, 0x30, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, // in(_2206 + 157.0
	0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, // ) * 43758.546875
	0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x32, // ), fract(sin(_22
	0x30, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, // 06 + 158.0) * 43
	0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x32, // 758.546875), _22
	0x30, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x33, 0x2e, 0x79, 0x29, 0x2c, // 03.x), _2203.y),
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, //  mix(mix(fract(s
	0x69, 0x6e, 0x28, 0x5f, 0x32, 0x32, 0x30, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, // in(_2206 + 113.0
	0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, // ) * 43758.546875
	0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x32, // ), fract(sin(_22
	0x30, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, // 06 + 114.0) * 43
	0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x32, // 758.546875), _22
	0x30, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, // 03.x), mix(fract
	0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x32, 0x30, 0x36, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, // (sin(_2206 + 270
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, // .0) * 43758.5468
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, // 75), fract(sin(_
	0x32, 0x32, 0x30, 0x36, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // 2206 + 271.0) * 
	0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 43758.546875), _
	0x32, 0x32, 0x30, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x33, 0x2e, 0x79, // 2203.x), _2203.y
	0x29, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x33, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x31, // ), _2203.z), 0.1
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x31, 0x36, 0x33, 0x33, 0x37, 0x32, 0x30, 0x33, 0x39, // 6666667163372039
	0x37, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, // 794921875, fma(m
	0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, // ix(mix(mix(fract
	0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, // (sin(_1860) * 43
	0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, // 758.546875), fra
	0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, // ct(sin(_1860 + 1
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, // .0) * 43758.5468
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x37, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, // 75), _1857.x), m
	0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, // ix(fract(sin(_18
	0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, // 60 + 157.0) * 43
	0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, // 758.546875), fra
	0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, // ct(sin(_1860 + 1
	0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, // 58.0) * 43758.54
	0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x37, 0x2e, 0x78, 0x29, 0x2c, // 6875), _1857.x),
	0x20, 0x5f, 0x31, 0x38, 0x35, 0x37, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, //  _1857.y), mix(m
	0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, // ix(fract(sin(_18
	0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, // 60 + 113.0) * 43
	0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, // 758.546875), fra
	0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, // ct(sin(_1860 + 1
	0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, // 14.0) * 43758.54
	0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x37, 0x2e, 0x78, 0x29, 0x2c, // 6875), _1857.x),
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, //  mix(fract(sin(_
	0x31, 0x38, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // 1860 + 270.0) * 
	0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, // 43758.546875), f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x30, 0x20, 0x2b, // ract(sin(_1860 +
	0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, //  271.0) * 43758.
	0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x37, 0x2e, 0x78, // 546875), _1857.x
	0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x35, 0x37, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, // ), _1857.y), _18
	0x35, 0x37, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // 57.z), 0.5, mix(
	0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // mix(mix(fract(si
	0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // n(_2033) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // sin(_2033 + 1.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // , _2030.x), mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x33, 0x20, // fract(sin(_2033 
	0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 157.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, // sin(_2033 + 158.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, // 5), _2030.x), _2
	0x30, 0x33, 0x30, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // 030.y), mix(mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x33, 0x20, // fract(sin(_2033 
	0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 113.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, // sin(_2033 + 114.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, // 5), _2030.x), mi
	0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, // x(fract(sin(_203
	0x33, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 3 + 270.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, // 58.546875), frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x32, 0x37, // t(sin(_2033 + 27
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 1.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, // 875), _2030.x), 
	0x5f, 0x32, 0x30, 0x33, 0x30, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x33, 0x30, 0x2e, // _2030.y), _2030.
	0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // z) * 0.25));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x38, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x30, 0x30, 0x20, 0x2a, // _1808 = (_1800 *
	0x20, 0x31, 0x2e, 0x32, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x35, 0x32, 0x33, 0x31, 0x36, 0x32, //  1.2999999523162
	0x38, 0x34, 0x31, 0x37, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // 841796875) * flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, // at3x3(float3(0.0
	0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, // , 1.600000023841
	0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, // 85791015625, 1.2
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, // 0000004768371582
	0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, // 03125), float3(-
	0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, // 1.60000002384185
	0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, // 791015625, 0.720
	0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, // 0000286102294921
	0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, // 875, -0.95999997
	0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, // 8542327880859375
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, // ), float3(-1.200
	0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, // 0000476837158203
	0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, // 125, -0.95999997
	0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, // 8542327880859375
	0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, // , 1.279999971389
	0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 7705078125));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, //  _2376 = fract(_
	0x31, 0x38, 0x30, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1808);.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x39, 0x20, 0x3d, //    float _2379 =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x31, 0x38, 0x30, 0x38, //  dot(floor(_1808
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, // ), float3(1.0, 1
	0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 57.0, 113.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x30, 0x38, // 3 _1816 = (_1808
	0x20, 0x2a, 0x20, 0x31, 0x2e, 0x33, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, //  * 1.39999997615
	0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, // 814208984375) * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // float3x3(float3(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, // 0.0, 1.600000023
	0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, // 84185791015625, 
	0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, // 1.20000004768371
	0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 58203125), float
	0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, // 3(-1.60000002384
	0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 185791015625, 0.
	0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, // 7200000286102294
	0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, // 921875, -0.95999
	0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, // 9978542327880859
	0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, // 375), float3(-1.
	0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, // 2000000476837158
	0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, // 203125, -0.95999
	0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, // 9978542327880859
	0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, // 375, 1.279999971
	0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, // 3897705078125));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x35, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, // at3 _2549 = frac
	0x74, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t(_1816);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x35, 0x35, //       float _255
	0x32, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x31, // 2 = dot(floor(_1
	0x38, 0x31, 0x36, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, // 816), float3(1.0
	0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, // , 157.0, 113.0))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, // oat _804 = smoot
	0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // hstep(1.0 - _dx11
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x31, // _u.u_sky[0].z, 1
	0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // .0, fma(mix(mix(
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, // mix(fract(sin(_2
	0x35, 0x35, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 552) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // 875), fract(sin(
	0x5f, 0x32, 0x35, 0x35, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // _2552 + 1.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, // 3758.546875), _2
	0x35, 0x34, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, // 549.x), mix(frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x35, // t(sin(_2552 + 15
	0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 7.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // 875), fract(sin(
	0x5f, 0x32, 0x35, 0x35, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _2552 + 158.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x5f, 0x32, 0x35, 0x34, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x34, 0x39, 0x2e, // _2549.x), _2549.
	0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, // y), mix(mix(frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x31, // t(sin(_2552 + 11
	0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 3.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // 875), fract(sin(
	0x5f, 0x32, 0x35, 0x35, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _2552 + 114.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x5f, 0x32, 0x35, 0x34, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // _2549.x), mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x32, 0x20, 0x2b, 0x20, // act(sin(_2552 + 
	0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 270.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x32, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, // n(_2552 + 271.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x32, 0x35, 0x34, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x34, // , _2549.x), _254
	0x39, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x34, 0x39, 0x2e, 0x7a, 0x29, 0x2c, 0x20, // 9.y), _2549.z), 
	0x30, 0x2e, 0x30, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x39, 0x30, 0x38, 0x34, 0x33, // 0.04166666790843
	0x30, 0x30, 0x39, 0x39, 0x34, 0x38, 0x37, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x2c, 0x20, // 00994873046875, 
	0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // fma(mix(mix(mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x37, 0x39, 0x29, // fract(sin(_2379)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x37, // , fract(sin(_237
	0x39, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // 9 + 1.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x2e, // .546875), _2376.
	0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // x), mix(fract(si
	0x6e, 0x28, 0x5f, 0x32, 0x33, 0x37, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, // n(_2379 + 157.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x37, // , fract(sin(_237
	0x39, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 9 + 158.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, // 58.546875), _237
	0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x2e, 0x79, 0x29, 0x2c, 0x20, // 6.x), _2376.y), 
	0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // mix(mix(fract(si
	0x6e, 0x28, 0x5f, 0x32, 0x33, 0x37, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, // n(_2379 + 113.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x37, // , fract(sin(_237
	0x39, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 9 + 114.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, // 58.546875), _237
	0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // 6.x), mix(fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x37, 0x39, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, // sin(_2379 + 270.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, // 5), fract(sin(_2
	0x33, 0x37, 0x39, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 379 + 271.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, // 3758.546875), _2
	0x33, 0x37, 0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x2e, 0x79, 0x29, // 376.x), _2376.y)
	0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x38, // , _2376.z), 0.08
	0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x35, 0x38, 0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x39, 0x38, // 3333335816860198
	0x39, 0x37, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x30, 0x35, // 974609375, _1805
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )));.           
	0x20, 0x5f, 0x32, 0x38, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x38, //  _2809 = mix(_28
	0x30, 0x39, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x35, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x30, 0x34, // 09, (_859 * _804
	0x29, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // ) * 5.0, float3(
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x38, 0x30, 0x34, 0x2c, 0x20, // fast::min(_804, 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 1.0) * fast::max
	0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, // (_602.y, 0.0)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x38, // .            _28
	0x30, 0x36, 0x2b, 0x2b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 06++;.          
	0x20, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //   continue;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, //     }.        _2
	0x38, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 807 = _2809;.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //  }.    else.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x37, 0x20, // {.        _2807 
	0x3d, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // = _2808;.    }. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, //    out.bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, // Data0 = float4(_
	0x32, 0x38, 0x30, 0x37, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 2807, 1.0);.    
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, // return out;.}...
	0x00, 0x30, 0x00,                                                                               // .0.
};
