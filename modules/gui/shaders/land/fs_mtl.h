static const uint8_t fs_land_mtl[6979] =
{
	0x46, 0x53, 0x48, 0x0b, 0xcc, 0x1f, 0x42, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x75, // FSH...B........u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x13, 0x50, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, // _light..P.......
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x05, 0x00, 0x00, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_1Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x54, 0x65, 0x78, 0x74, // ure_region_1Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_2Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_3Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x54, 0x65, 0x78, 0x74, // ure_region_3Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x34, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_4Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x12, 0x09, 0x80, 0x01, // ......u_land....
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _region_1.......
	0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // gion_2..........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x33, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, // n_3...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x19, 0x00, 0x00, 0x23, 0x69, // ..........a...#i
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, // nclude <metal_st
	0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, // dlib>.#include <
	0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, // simd/simd.h>..us
	0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, // ing namespace me
	0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, // tal;..struct _Gl
	0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // obal.{.    float
	0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x35, 0x5d, 0x3b, // 4 u_material[5];
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, // .    float4 u_li
	0x67, 0x68, 0x74, 0x5b, 0x31, 0x39, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ght[19];.    flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x39, 0x5d, 0x3b, 0x0a, 0x7d, // at4 u_land[9];.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // float4 bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, // Data0 [[color(0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ]];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, // latMtlMain_in.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, //     float3 v_nor
	0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, // mal [[user(locn0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // )]];.    float3 
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, // v_normal_world [
	0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // [user(locn1)]];.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, //     float3 v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, // ition_camera [[u
	0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // ser(locn2)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   float3 v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // ion_world [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, // (locn3)]];.};..f
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ragment xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ain_out xlatMtlM
	0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // ain(xlatMtlMain_
	0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, // in in [[stage_in
	0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, // ]], constant _Gl
	0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, // obal& _mtl_u [[b
	0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, // uffer(0)]], text
	0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, // ure2d<float> s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x20, // exture_region_1 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(0)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x32, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, // n_2 [[texture(1)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // oat> s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // egion_3 [[textur
	0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // e(2)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // d<float> s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x20, 0x5b, 0x5b, 0x74, 0x65, // re_region_4 [[te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, // xture(3)]], samp
	0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ler s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // gion_1Sampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // sampler(0)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // mpler s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // region_2Sampler 
	0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[sampler(1)]], 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // sampler s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // e_region_3Sample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, // r [[sampler(2)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // , sampler s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, // ure_region_4Samp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, // ler [[sampler(3)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // {};.    float3 _
	0x31, 0x34, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, // 1442;.    if ((i
	0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // sunordered(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x30, // u.u_land[1].z, 0
	0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // .0) || _mtl_u.u_
	0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // land[1].z != 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).    {.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x6e, //  float3 _602 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // ormalize(fast::m
	0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ax(abs(in.v_norm
	0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // al_world), float
	0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, // 3(9.999999747378
	0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, // 7516355514526367
	0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 188e-06)));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x31, 0x33, 0x20, //     float3 _613 
	0x3d, 0x20, 0x5f, 0x36, 0x30, 0x32, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // = _602 / float3(
	0x28, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x79, // (_602.x + _602.y
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x30, 0x32, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ) + _602.z);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, //      _1442 = ((s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 1.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_1Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // on_world.yz * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // tl_u.u_land[0].x
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x31, 0x33, 0x2e, 0x78, 0x29, // )).xyz * _613.x)
	0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, //  + (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // gion_1.sample(s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, // texture_region_1
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, // Sampler, (in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, // osition_world.xz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, //  * _mtl_u.u_land
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x36, // [0].x)).xyz * _6
	0x31, 0x33, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 13.y)) + (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, // ure_region_1.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ple(s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // gion_1Sampler, (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // rld.xy * _mtl_u.
	0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, // u_land[0].x)).xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x31, 0x33, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // z * _613.z);.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //  }.    else.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x32, 0x20, // {.        _1442 
	0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, // = _mtl_u.u_land[
	0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 2].xyz;.    }.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x5f, //   float _673 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x31, 0x5d, 0x2e, // mtl_u.u_land[1].
	0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, // y - _mtl_u.u_lan
	0x64, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // d[1].x;.    floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // t3 _1443;.    if
	0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, //  ((isunordered(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x33, 0x5d, 0x2e, // mtl_u.u_land[3].
	0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // z, 0.0) || _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x33, 0x5d, 0x2e, 0x7a, 0x20, 0x21, 0x3d, // u.u_land[3].z !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //  0.0)).    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x34, 0x36, //      float3 _746
	0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, //  = normalize(fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // t::max(abs(in.v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, // normal_world), f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, // loat3(9.99999974
	0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, // 7378751635551452
	0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, // 6367188e-06)));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x37, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x34, 0x36, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // 757 = _746 / flo
	0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x37, 0x34, 0x36, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x37, // at3((_746.x + _7
	0x34, 0x36, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x37, 0x34, 0x36, 0x2e, 0x7a, 0x29, 0x3b, // 46.y) + _746.z);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x33, 0x20, 0x3d, // .        _1443 =
	0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, //  ((s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_2.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, // exture_region_2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, // sition_world.yz 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, // * _mtl_u.u_land[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x35, // 0].x)).xyz * _75
	0x37, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // 7.x) + (s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // e_region_2.sampl
	0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // e(s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, // on_2Sampler, (in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // d.xz * _mtl_u.u_
	0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, // land[0].x)).xyz 
	0x2a, 0x20, 0x5f, 0x37, 0x35, 0x37, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, // * _757.y)) + (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // .sample(s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // e_region_2Sample
	0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // r, (in.v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // n_world.xy * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, // l_u.u_land[0].x)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x35, 0x37, 0x2e, 0x7a, 0x29, 0x3b, // ).xyz * _757.z);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, // .    }.    else.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, //     {.        _1
	0x34, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // 443 = _mtl_u.u_l
	0x61, 0x6e, 0x64, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // and[4].xyz;.    
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x31, 0x37, // }.    float _817
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, //  = _mtl_u.u_land
	0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // [3].y - _mtl_u.u
	0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _land[3].x;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, // float3 _1445;.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, //   if ((isunorder
	0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, // ed(_mtl_u.u_land
	0x5b, 0x35, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, // [5].z, 0.0) || _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x35, 0x5d, 0x2e, // mtl_u.u_land[5].
	0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // z != 0.0)).    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x38, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // _890 = normalize
	0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, // (fast::max(abs(i
	0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // n.v_normal_world
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, // ), float3(9.9999
	0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, // 9974737875163555
	0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, // 14526367188e-06)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ));.        floa
	0x74, 0x33, 0x20, 0x5f, 0x39, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x39, 0x30, 0x20, 0x2f, // t3 _901 = _890 /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x38, 0x39, 0x30, 0x2e, 0x78, 0x20, //  float3((_890.x 
	0x2b, 0x20, 0x5f, 0x38, 0x39, 0x30, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x39, 0x30, // + _890.y) + _890
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, // .z);.        _14
	0x34, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // 45 = ((s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_3.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_3Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .yz * _mtl_u.u_l
	0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // and[0].x)).xyz *
	0x20, 0x5f, 0x39, 0x30, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, //  _901.x) + (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, // xture_region_3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ample(s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // region_3Sampler,
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // world.xz * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, // u.u_land[0].x)).
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x30, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, // xyz * _901.y)) +
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, // ition_world.xy *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, //  _mtl_u.u_land[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x30, 0x31, // ].x)).xyz * _901
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, // .z);.    }.    e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.    {.      
	0x20, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //   _1445 = _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // .u_land[6].xyz;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //     }.    float 
	0x5f, 0x39, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // _961 = _mtl_u.u_
	0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x35, 0x5d, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // land[5].y - _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, // _u.u_land[5].x;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x37, //     float3 _1447
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, // ;.    if ((isuno
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // rdered(_mtl_u.u_
	0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x37, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // land[7].z, 0.0) 
	0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, // || _mtl_u.u_land
	0x5b, 0x37, 0x5d, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, // [7].z != 0.0)). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    {.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // at3 _1034 = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // alize(fast::max(
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // abs(in.v_normal_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, // world), float3(9
	0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, // .999999747378751
	0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, // 6355514526367188
	0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e-06)));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x35, 0x20, 0x3d, 0x20, //  float3 _1045 = 
	0x5f, 0x31, 0x30, 0x33, 0x34, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, // _1034 / float3((
	0x5f, 0x31, 0x30, 0x33, 0x34, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x34, 0x2e, // _1034.x + _1034.
	0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x34, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, // y) + _1034.z);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x28, //        _1447 = (
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // n_4.sample(s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, // ture_region_4Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // pler, (in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2a, 0x20, // tion_world.yz * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, // _mtl_u.u_land[0]
	0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x35, // .x)).xyz * _1045
	0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .x) + (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_4.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_4Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .xz * _mtl_u.u_l
	0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // and[0].x)).xyz *
	0x20, 0x5f, 0x31, 0x30, 0x34, 0x35, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, //  _1045.y)) + (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // .sample(s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // e_region_4Sample
	0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // r, (in.v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // n_world.xy * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, // l_u.u_land[0].x)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x35, 0x2e, 0x7a, 0x29, // ).xyz * _1045.z)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, // ;.    }.    else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // .    {.        _
	0x31, 0x34, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1447 = _mtl_u.u_
	0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x38, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // land[8].xyz;.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, //  }.    float _11
	0x30, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, // 05 = _mtl_u.u_la
	0x6e, 0x64, 0x5b, 0x37, 0x5d, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // nd[7].y - _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x37, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, // .u_land[7].x;.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x35, 0x36, 0x34, 0x20, 0x3d, 0x20, //   float4 _564 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x32, 0x20, // float4((((_1442 
	0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, // * fast::max(0.0,
	0x20, 0x28, 0x5f, 0x36, 0x37, 0x33, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, //  (_673 - abs(in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, // .y - _mtl_u.u_la
	0x6e, 0x64, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x36, 0x37, 0x33, // nd[1].y)) / _673
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x33, 0x20, 0x2a, 0x20, 0x66, 0x61, // )) + (_1443 * fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x28, 0x5f, 0x38, // st::max(0.0, (_8
	0x31, 0x37, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // 17 - abs(in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, // sition_world.y -
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x33, //  _mtl_u.u_land[3
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x38, 0x31, 0x37, 0x29, 0x29, 0x29, 0x20, // ].y)) / _817))) 
	0x2b, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // + (_1445 * fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x28, 0x5f, 0x39, 0x36, 0x31, 0x20, // :max(0.0, (_961 
	0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // - abs(in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // ion_world.y - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x35, 0x5d, 0x2e, 0x79, // tl_u.u_land[5].y
	0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x39, 0x36, 0x31, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, // )) / _961))) + (
	0x5f, 0x31, 0x34, 0x34, 0x37, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // _1447 * fast::ma
	0x78, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x35, 0x20, 0x2d, 0x20, // x(0.0, (_1105 - 
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // abs(in.v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // n_world.y - _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5b, 0x37, 0x5d, 0x2e, 0x79, 0x29, 0x29, // _u.u_land[7].y))
	0x20, 0x2f, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, //  / _1105)), 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, // ;.    float3 _11
	0x37, 0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, // 76 = normalize(-
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, // in.v_position_ca
	0x6d, 0x65, 0x72, 0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // mera);.    float
	0x34, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 4 _1450;.    flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, // at4 _1451;.    _
	0x31, 0x34, 0x35, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, // 1451 = float4(0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x20, 0x3d, 0x20, // 0);.    _1450 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float4(0.0);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x30, 0x3b, 0x0a, 0x20, //  float4 _1460;. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x3b, //    float4 _1462;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, // .    for (int _1
	0x34, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x39, 0x20, 0x3c, // 449 = 0; _1449 <
	0x20, 0x34, 0x3b, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x36, //  4; _1451 = _146
	0x32, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x30, // 2, _1450 = _1460
	0x2c, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x39, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // , _1449++).    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x31, // .        int _11
	0x38, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x39, 0x29, // 84 = (4 * _1449)
	0x20, 0x2b, 0x20, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //  + 3;.        if
	0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, //  ((isunordered(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, // mtl_u.u_light[_1
	0x31, 0x38, 0x34, 0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, // 184].x, 0.0) || 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, // _mtl_u.u_light[_
	0x31, 0x31, 0x38, 0x34, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // 1184].x != 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x34, 0x35, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 454;.           
	0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, //  if (_mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x39, 0x29, 0x20, // ght[(4 * _1449) 
	0x2b, 0x20, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // + 4].w == 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, //              _14
	0x35, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, // 54 = normalize(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, // mtl_u.u_light[(4
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, 0x2e, 0x78, //  * _1449) + 4].x
	0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // yz);.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //  }.            e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, //   _1454 = normal
	0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ize(_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x39, 0x29, 0x20, 0x2b, // ht[(4 * _1449) +
	0x20, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, //  4].xyz - in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x3b, // osition_camera);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // .            }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x32, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, //  _1217 = fast::m
	0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x34, 0x35, 0x34, 0x2c, 0x20, 0x69, 0x6e, // ax(dot(_1454, in
	0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // .v_normal), 0.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat4 _1463;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x31, //         if (_121
	0x37, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7 > 0.0).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, //        _1463 = _
	0x31, 0x34, 0x35, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 1451 + (((_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, // .u_light[(4 * _1
	0x34, 0x34, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x36, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 449) + 6] * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, // _u.u_material[3]
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x36, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, // ) * _564) * pow(
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x6e, 0x6f, // fast::max(dot(no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x31, 0x37, 0x36, 0x20, 0x2b, 0x20, // rmalize(_1176 + 
	0x5f, 0x31, 0x34, 0x35, 0x34, 0x29, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // _1454), in.v_nor
	0x6d, 0x61, 0x6c, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // mal), 0.0), _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, // _u.u_material[4]
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x));.          
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x31, //    _1463 = _1451
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // ;.            }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x36, //             _146
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 2 = _1463;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, //        _1460 = _
	0x31, 0x34, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 1450 + (((_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, // .u_light[(4 * _1
	0x34, 0x34, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x35, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 449) + 5] * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, // _u.u_material[2]
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x36, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, // ) * _564) * _121
	0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 7);.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x5f, 0x31, 0x34, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x31, 0x3b, 0x0a, //  _1462 = _1451;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x36, //             _146
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0 = _1450;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, //    }.    }.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, // loat4 _1270 = ((
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x30, 0x5d, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, // 0] * _mtl_u.u_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x36, // terial[1]) * _56
	0x34, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, // 4) + _1450) + _1
	0x34, 0x35, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // 451;.    float4 
	0x5f, 0x31, 0x34, 0x35, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, // _1452;.    if (_
	0x31, 0x32, 0x37, 0x30, 0x2e, 0x77, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, // 1270.w > 1.0).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   {.        floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x30, // t4 _1438 = _1270
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x38, 0x2e, // ;.        _1438.
	0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w = 1.0;.       
	0x20, 0x5f, 0x31, 0x34, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x38, 0x3b, 0x0a, //  _1452 = _1438;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //     }.    else. 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, //    {.        _14
	0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 52 = _1270;.    
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, // }.    float4 _14
	0x35, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, // 53;.    if ((isu
	0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // nordered(_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, // u_light[1].x, 0.
	0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // 0) || _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // ight[1].x != 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).    {.       
	0x20, 0x5f, 0x31, 0x34, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x6d, 0x74, //  _1453 = mix(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2c, 0x20, // l_u.u_light[2], 
	0x5f, 0x31, 0x34, 0x35, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x61, // _1452, float4(fa
	0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // st::clamp((_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, // u.u_light[1].z -
	0x20, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  abs(in.v_positi
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2f, 0x20, // on_camera.z)) / 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1].z - _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // light[1].y), 0.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // , 1.0)));.    }.
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //     else.    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x5f, //        _1453 = _
	0x31, 0x34, 0x35, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1452;.    }.    
	0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // out.bgfx_FragDat
	0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x35, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // a0 = _1453;.    
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, // return out;.}...
	0x00, 0x90, 0x02,                                                                               // ...
};
