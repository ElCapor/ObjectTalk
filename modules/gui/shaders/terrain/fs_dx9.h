static const uint8_t fs_terrain_dx9[14052] =
{
	0x46, 0x53, 0x48, 0x0b, 0x1d, 0xb8, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x75, // FSH............u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x13, 0x50, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, // _light..P.......
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x05, 0x00, 0x00, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_1Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x54, 0x65, 0x78, 0x74, // ure_region_1Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_2Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_3Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x54, 0x65, 0x78, 0x74, // ure_region_3Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x34, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_4Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x12, // ......u_terrain.
	0x06, 0x80, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x10, 0x00, 0x00, 0x00, // ure_region_1....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _region_2.......
	0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // gion_3..........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x34, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x34, 0x00, // n_4...........4.
	0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, // .#include <metal
	0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // _stdlib>.#includ
	0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, // e <simd/simd.h>.
	0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, // .using namespace
	0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, //  metal;..struct 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _Global.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // oat4 u_material[
	0x35, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // 5];.    float4 u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x39, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _light[19];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // float4 u_terrain
	0x5b, 0x36, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // [6];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, // xlatMtlMain_out.
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // {.    float4 bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, // x_FragData0 [[co
	0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // lor(0)]];.};..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ruct xlatMtlMain
	0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _in.{.    float3
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, //  v_normal_camera
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, // ;.    float3 v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, // ormal_world [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // er(locn1)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float3 v_positi
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // on_camera [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // (locn2)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // loat3 v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // _world [[user(lo
	0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn3)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _mtl_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // er(0)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 2d<float> s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x20, 0x5b, 0x5b, 0x74, // ure_region_1 [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(0)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(1)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // > s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, // on_3 [[texture(2
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // loat> s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // region_4 [[textu
	0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // re(3)]], sampler
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // n_1Sampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(0)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // er s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // ion_2Sampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ampler(1)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // pler s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // egion_3Sampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(2)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_4Sampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(3)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x30, 0x20, // .    float _770 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = 1.0 - normaliz
	0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // e(in.v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // rld).y;.    floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // t3 _2308;.    if
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // world.y < _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[1].x)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // .    {.        _
	0x32, 0x33, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, // 2308 = select(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // tl_u.u_terrain[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ].xyz, s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_1.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_1Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // .x))).xyz, bool3
	0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, // ((isunordered(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // tl_u.u_terrain[2
	0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].w, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, // l_u.u_terrain[2]
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .w != 0.0)));.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //   }.    else.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  {.        float
	0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _2309;.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  if (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, // on_world.y < (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // ].x + _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x0a, 0x20, 0x20, // errain[1].w)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, //     _2309 = mix(
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // terrain[2].xyz, 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _1.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, // ure_region_1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, // yz, bool3((isuno
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // rdered(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, // terrain[2].w, 0.
	0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // 0) || _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, // errain[2].w != 0
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, // .0))), select(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // tl_u.u_terrain[3
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ].xyz, s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_2.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_2Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // .x))).xyz, bool3
	0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, // ((isunordered(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // tl_u.u_terrain[3
	0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].w, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, // l_u.u_terrain[3]
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, // .w != 0.0))), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // oat3((in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // ion_world.y - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x78, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // ].x) / _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, // terrain[1].w));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _2310;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //        if (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  < _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ain[1].y).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x20, 0x3d, 0x20, //         _2310 = 
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // terrain[3].xyz, 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _2.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, // ure_region_2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, // yz, bool3((isuno
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // rdered(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, // terrain[3].w, 0.
	0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // 0) || _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, // errain[3].w != 0
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)));.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x31, //     float3 _2311
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   if (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, // ion_world.y < (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x31, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1].y + _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x0a, 0x20, // terrain[1].w)). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, //      float3 _230
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        do.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, //         if ((isu
	0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // nordered(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, // u_terrain[3].w, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 0.0) || _mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, // _terrain[3].w !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0)).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // at3 _1087 = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // alize(fast::max(
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // abs(in.v_normal_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, // world), float3(9
	0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, // .999999747378751
	0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, // 6355514526367188
	0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e-06)));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x39, //      float3 _109
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 8 = _1087 / floa
	0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, // t3((_1087.x + _1
	0x30, 0x38, 0x37, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x7a, // 087.y) + _1087.z
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 2306 = ((s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.yz / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0].x))).xyz * _1
	0x30, 0x39, 0x38, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 098.x) + (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, // ure_region_2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ple(s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // gion_2Sampler, (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // rld.xz / float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // [0].x))).xyz * _
	0x31, 0x30, 0x39, 0x38, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // 1098.y)) + (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, // xture_region_2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ample(s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // region_2Sampler,
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // world.xy / float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // 2(_mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // in[0].x))).xyz *
	0x20, 0x5f, 0x31, 0x30, 0x39, 0x38, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1098.z);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x36, //            _2306
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  = _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ain[3].xyz;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //              } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, 0x3b, 0x0a, 0x20, //  float3 _2307;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    do.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, //     if ((isunord
	0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ered(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // rrain[4].w, 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, //  || _mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // rain[4].w != 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // _1201 = normaliz
	0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, // e(fast::max(abs(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // in.v_normal_worl
	0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, // d), float3(9.999
	0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, // 9997473787516355
	0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, // 514526367188e-06
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )));.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, 0x20, 0x3d, 0x20, //  float3 _1212 = 
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, // _1201 / float3((
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, // _1201.x + _1201.
	0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, // y) + _1201.z);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, //            _2307
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, //  = ((s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // egion_3.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 3Sampler, (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // z / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // u.u_terrain[0].x
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, 0x2e, // ))).xyz * _1212.
	0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // x) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_3.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _3Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xz / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, // x))).xyz * _1212
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // .y)) + (s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // e_region_3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // e(s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, // on_3Sampler, (in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, // d.xy / float2(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // tl_u.u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, // ].x))).xyz * _12
	0x31, 0x32, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 12.z);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x5f, //        _2307 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4].xyz;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, //          } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (false);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, //              _23
	0x31, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, // 11 = mix(select(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // [3].xyz, s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.xz / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, // 0].x))).xyz, boo
	0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, // l3((isunordered(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, // [3].w, 0.0) || _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, // 3].w != 0.0))), 
	0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x36, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, // mix(_2306, _2307
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, 0x29, 0x29, 0x2c, // , float3(_770)),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, //  float3((in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, // sition_world.y -
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // n[1].y) / _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, // .u_terrain[1].w)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, // float3 _2312;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   if (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, // ion_world.y < _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].z).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x3b, //    float3 _2304;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, //          do.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, //   if ((isunorder
	0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // ed(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, // ain[3].w, 0.0) |
	0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // | _mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // in[3].w != 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // loat3 _1361 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // rmalize(fast::ma
	0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // x(abs(in.v_norma
	0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // l_world), float3
	0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, // (9.9999997473787
	0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, // 5163555145263671
	0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 88e-06)));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, // 3 _1372 = _1361 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x2e, // / float3((_1361.
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, // x + _1361.y) + _
	0x31, 0x33, 0x36, 0x31, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1361.z);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x20, 0x3d, //          _2304 =
	0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, //  ((s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_2.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, // exture_region_2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, // sition_world.yz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x2e, 0x78, 0x29, // ).xyz * _1372.x)
	0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, //  + (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // gion_2.sample(s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, // Sampler, (in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, // osition_world.xz
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  / float2(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[0].x)
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x2e, 0x79, // )).xyz * _1372.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // )) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xy / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, // x))).xyz * _1372
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x20, 0x3d, //          _2304 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[3].xyz;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, //        } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // alse);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _2305;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, //  ((isunordered(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, // 4].w, 0.0) || _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, // tl_u.u_terrain[4
	0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // ].w != 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 3 _1475 = normal
	0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, // ize(fast::max(ab
	0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // s(in.v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, // rld), float3(9.9
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, // 9999974737875163
	0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, // 55514526367188e-
	0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 06)));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x34, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x20, 0x2f, 0x20, 0x66, 0x6c, // 486 = _1475 / fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x2e, 0x78, 0x20, 0x2b, 0x20, // oat3((_1475.x + 
	0x5f, 0x31, 0x34, 0x37, 0x35, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, // _1475.y) + _1475
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, //      _2305 = ((s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 3.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.yz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, // z * _1486.x) + (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _3.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, // ure_region_3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, // yz * _1486.y)) +
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, // ition_world.xy /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x7a, 0x29, 0x3b, // .xyz * _1486.z);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, //      _2305 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, // l_u.u_terrain[4]
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xyz;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, //            _2312
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x2c, 0x20, 0x5f, 0x32, //  = mix(_2304, _2
	0x33, 0x30, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, // 305, float3(_770
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //               el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x3b, 0x0a, 0x20, //  float3 _2313;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //        if (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, //  < (_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // rain[1].z + _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, // _u.u_terrain[1].
	0x77, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x32, 0x33, 0x30, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2302;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     do.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, //      if ((isunor
	0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // dered(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, // errain[3].w, 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ) || _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // rrain[3].w != 0.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  _1595 = normali
	0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, // ze(fast::max(abs
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, // (in.v_normal_wor
	0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, // ld), float3(9.99
	0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, // 9999747378751635
	0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, // 5514526367188e-0
	0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6)));.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x20, 0x2f, //  _1606 = _1595 /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x2e, 0x78, //  float3((_1595.x
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, //  + _1595.y) + _1
	0x35, 0x39, 0x35, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 595.z);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, //             _230
	0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // 2 = ((s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // yz / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, // x))).xyz * _1606
	0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .x) + (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_2.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_2Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, // .x))).xyz * _160
	0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 6.y)) + (s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.xy / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0].x))).xyz * _1
	0x36, 0x30, 0x36, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 606.z);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x32, 0x33, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // _2302 = _mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // _terrain[3].xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, //           } whil
	0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e(false);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, //       float3 _23
	0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 03;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // do.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, //  if ((isunordere
	0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // d(_mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, // in[4].w, 0.0) ||
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, // n[4].w != 0.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x30, 0x39, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, // 09 = normalize(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, // ast::max(abs(in.
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, // v_normal_world),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, //  float3(9.999999
	0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, // 7473787516355514
	0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, // 526367188e-06)))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x32, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // 20 = _1709 / flo
	0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // at3((_1709.x + _
	0x31, 0x37, 0x30, 0x39, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x2e, // 1709.y) + _1709.
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x33, 0x20, 0x3d, 0x20, //         _2303 = 
	0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ((s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, // ition_world.yz /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, 0x78, 0x29, 0x20, // .xyz * _1720.x) 
	0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // + (s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_3.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, // exture_region_3S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, // sition_world.xz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, 0x79, 0x29, // ).xyz * _1720.y)
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // ) + (s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // egion_3.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 3Sampler, (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, // position_world.x
	0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // y / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // u.u_terrain[0].x
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, // ))).xyz * _1720.
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, //             _230
	0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // 3 = _mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rain[4].xyz;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, //       } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, //   _2313 = mix(mi
	0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x32, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x33, 0x2c, 0x20, // x(_2302, _2303, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x73, // float3(_770)), s
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // elect(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, // errain[5].xyz, s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 4.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_4Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.xz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, // z, bool3((isunor
	0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // dered(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, // errain[5].w, 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ) || _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // rrain[5].w != 0.
	0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, // 0))), float3((in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // d.y - _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, // errain[1].z) / _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1].w));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, //      _2313 = sel
	0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // ect(_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, // rain[5].xyz, s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2e, // exture_region_4.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sample(s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_4Sampler
	0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // , (in.v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _world.xz / floa
	0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // t2(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // ain[0].x))).xyz,
	0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, //  bool3((isunorde
	0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // red(_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // rain[5].w, 0.0) 
	0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // || _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // ain[5].w != 0.0)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2312 = _2
	0x33, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 313;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, // 2311 = _2312;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x32, 0x33, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x31, 0x3b, 0x0a, 0x20, // _2310 = _2311;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x20, 0x3d, //          _2309 =
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2310;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x38, 0x20, // }.        _2308 
	0x3d, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // = _2309;.    }. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x20, //    float3 _1903 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, // = normalize(-in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, // v_position_camer
	0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // a);.    float3 _
	0x32, 0x33, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 2315;.    float3
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, //  _2316;.    _231
	0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 6 = float3(0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // .    _2315 = flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // at3(0.0);.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _2324;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, // float3 _2326;.  
	0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, //   for (int _2314
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x20, 0x3c, 0x20, 0x34, 0x3b, //  = 0; _2314 < 4;
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x2c, 0x20, //  _2316 = _2326, 
	0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x2c, 0x20, 0x5f, // _2315 = _2324, _
	0x32, 0x33, 0x31, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 2314++).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x20, //       int _1911 
	0x3d, 0x20, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, // = (4 * _2314) + 
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // 3;.        if ((
	0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // isunordered(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x39, 0x31, 0x31, // _u.u_light[_1911
	0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].x, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x39, 0x31, // l_u.u_light[_191
	0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 1].x != 0.0)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, //     float3 _2318
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // ;.            if
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, //  (_mtl_u.u_light
	0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, // [(4 * _2314) + 4
	0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // ].w == 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x20, //           _2318 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // = normalize(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, // _u.u_light[(4 * 
	0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // _2314) + 4].xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // ;.            }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .            {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // 2318 = normalize
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, // (4 * _2314) + 4]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // .xyz - in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, // tion_camera);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x39, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 944 = fast::max(
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // dot(_2318, in.v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x37, 0x3b, 0x0a, //   float3 _2327;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x5f, 0x31, 0x39, 0x34, 0x34, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // _1944 > 0.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x37, //            _2327
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, //  = _2316 + ((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, // l_u.u_light[(4 *
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, //  _2314) + 6].xyz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, //  * _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, // rial[3].xyz) * p
	0x6f, 0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, // ow(fast::max(dot
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x33, // (normalize(_1903
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x29, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //  + _2318), in.v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, // 0.0), _mtl_u.u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // aterial[4].x));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, //              _23
	0x32, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 27 = _2316;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2326 = _2
	0x33, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 327;.           
	0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x2b, //  _2324 = _2315 +
	0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  ((_mtl_u.u_ligh
	0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, // t[(4 * _2314) + 
	0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 5].xyz * _mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // u_material[2].xy
	0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // z) * _1944);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x20, //           _2326 
	0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _2316;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, //      _2324 = _23
	0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 15;.        }.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //   }.    float3 _
	0x31, 0x39, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 1997 = ((_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // u_light[0].xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, //  _mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, // al[1].xyz) + _23
	0x31, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 15) + _2316;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x37, 0x3b, 0x0a, 0x20, //  float3 _2317;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, //    if ((isunorde
	0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // red(_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, // ht[1].x, 0.0) ||
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  _mtl_u.u_light[
	0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 1].x != 0.0)).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, //   {.        _231
	0x37, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 7 = mix(_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // _light[2].xyz, _
	0x31, 0x39, 0x39, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x61, 0x73, // 1997, float3(fas
	0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // t::clamp((_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .u_light[1].z - 
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // abs(in.v_positio
	0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, // n_camera.z)) / (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, // _mtl_u.u_light[1
	0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // ].z - _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // ight[1].y), 0.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //  1.0)));.    }. 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //    else.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _2317 = _1
	0x39, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // 997;.    }.    o
	0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ut.bgfx_FragData
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x33, 0x31, 0x37, // 0 = float4(_2317
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // , 1.0) * float4(
	0x5f, 0x32, 0x33, 0x30, 0x38, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _2308, 1.0);.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x60, 0x02,                                                                         // ..`.
};
