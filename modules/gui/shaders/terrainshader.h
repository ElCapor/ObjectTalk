static const uint8_t vs_terrain_glsl[923] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xb8, 0xa6, 0x04, 0x03, 0x00, 0x07, 0x75, // VSH............u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x04, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xfe, 0x7f, // _model. .. .....
	0x0b, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x04, 0x01, 0x00, 0x00, // .u_modelView....
	0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x0f, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // .......u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, // ewProj..........
	0x46, 0x03, 0x00, 0x00, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, // F...in vec3 a_no
	0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, // rmal;.in vec3 a_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, // position;.out ve
	0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, // c3 v_normal_came
	0x72, 0x61, 0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, // ra;.out vec3 v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x6f, 0x75, 0x74, // ormal_world;.out
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, //  vec3 v_position
	0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, // _camera;.out vec
	0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // 3 v_position_wor
	0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ld;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, //  u_model[32];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // iform mat4 u_mod
	0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // elView;.uniform 
	0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, // mat4 u_modelView
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, // Proj;.void main 
	0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, // ().{.  vec4 tmpv
	0x61, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // ar_1;.  tmpvar_1
	0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // .w = 1.0;.  tmpv
	0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, // ar_1.xyz = a_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ition;.  v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x6d, // ion_world = (u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // odel[0] * tmpvar
	0x5f, 0x31, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // _1).xyz;.  vec4 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // tmpvar_2;.  tmpv
	0x61, 0x72, 0x5f, 0x32, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, // ar_2.w = 1.0;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x61, // tmpvar_2.xyz = a
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x70, // _position;.  v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, // osition_camera =
	0x20, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, //  (u_modelView * 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // tmpvar_2).xyz;. 
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, //  vec4 tmpvar_3;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, //   tmpvar_3.w = 0
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x78, // .0;.  tmpvar_3.x
	0x79, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x20, // yz = a_normal;. 
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, //  v_normal_world 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6d, // = normalize((u_m
	0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // odel[0] * tmpvar
	0x5f, 0x33, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, // _3)).xyz;.  vec4
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, //  tmpvar_4;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, // var_4.w = 0.0;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, //  tmpvar_4.xyz = 
	0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x6e, 0x6f, // a_normal;.  v_no
	0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // rmal_camera = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, // rmalize((u_model
	0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, // View * tmpvar_4)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, // ).xyz;.  vec4 tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // pvar_5;.  tmpvar
	0x5f, 0x35, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, // _5.w = 1.0;.  tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x70, // pvar_5.xyz = a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, // osition;.  gl_Po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // sition = (u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, // lViewProj * tmpv
	0x61, 0x72, 0x5f, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,                               // ar_5);.}...
};
static const uint8_t vs_terrain_essl[1045] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xb8, 0xa6, 0x04, 0x03, 0x00, 0x07, 0x75, // VSH............u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x04, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xfe, 0x7f, // _model. .. .....
	0x0b, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x04, 0x01, 0x00, 0x00, // .u_modelView....
	0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x0f, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // .......u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, // ewProj..........
	0xc0, 0x03, 0x00, 0x00, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, // ....precision hi
	0x67, 0x68, 0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, // ghp int;.precisi
	0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, 0x0a, // on highp float;.
	0x69, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, // in highp vec3 a_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // normal;.in highp
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, //  vec3 a_position
	0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, // ;.out highp vec3
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, //  v_normal_camera
	0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, // ;.out highp vec3
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, //  v_normal_world;
	0x0a, 0x6f, 0x75, 0x74, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // .out highp vec3 
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, // v_position_camer
	0x61, 0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, // a;.out highp vec
	0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // 3 v_position_wor
	0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // ld;.uniform mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, //  u_model[32];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x34, // iform highp mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, //  u_modelView;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x6d, 0x61, 0x74, 0x34, // iform highp mat4
	0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, //  u_modelViewProj
	0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, // ;.void main ().{
	0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, // .  highp vec4 tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // pvar_1;.  tmpvar
	0x5f, 0x31, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, // _1.w = 1.0;.  tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x70, // pvar_1.xyz = a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, // osition;.  v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20, 0x28, 0x75, // ition_world = (u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, // _model[0] * tmpv
	0x61, 0x72, 0x5f, 0x31, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, // ar_1).xyz;.  hig
	0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // hp vec4 tmpvar_2
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x77, 0x20, 0x3d, // ;.  tmpvar_2.w =
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //  1.0;.  tmpvar_2
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // .xyz = a_positio
	0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // n;.  v_position_
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // camera = (u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // lView * tmpvar_2
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, // ).xyz;.  highp v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, // ec4 tmpvar_3;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, // tmpvar_3.w = 0.0
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x2e, 0x78, 0x79, 0x7a, // ;.  tmpvar_3.xyz
	0x20, 0x3d, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x20, 0x20, 0x76, //  = a_normal;.  v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x3d, 0x20, // _normal_world = 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, // normalize((u_mod
	0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, // el[0] * tmpvar_3
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, // )).xyz;.  highp 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, // vec4 tmpvar_4;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, //  tmpvar_4.w = 0.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x2e, 0x78, 0x79, // 0;.  tmpvar_4.xy
	0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x20, 0x20, // z = a_normal;.  
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, // v_normal_camera 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6d, // = normalize((u_m
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // odelView * tmpva
	0x72, 0x5f, 0x34, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, // r_4)).xyz;.  hig
	0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, // hp vec4 tmpvar_5
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x77, 0x20, 0x3d, // ;.  tmpvar_5.w =
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, //  1.0;.  tmpvar_5
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // .xyz = a_positio
	0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // n;.  gl_Position
	0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, //  = (u_modelViewP
	0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x29, 0x3b, // roj * tmpvar_5);
	0x0a, 0x7d, 0x0a, 0x0a, 0x00,                                                                   // .}...
};
static const uint8_t vs_terrain_spv[2420] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xb8, 0xa6, 0x04, 0x03, 0x00, 0x07, 0x75, // VSH............u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // _model..........
	0x0b, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x04, 0x00, 0x00, 0x08, // .u_modelView....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // .......u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x00, 0x40, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ewProj..@.......
	0x18, 0x09, 0x00, 0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x08, 0x00, // ......#.........
	0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, // ........GLSL.std
	0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // .450............
	0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, // main....a...d...
	0x6d, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, // m...q...t...w...
	0x7a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x00, 0x00, // z...............
	0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, // ........main....
	0x05, 0x00, 0x06, 0x00, 0x28, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x42, // ....(...UniformB
	0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x28, 0x00, 0x00, 0x00, // lock........(...
	0x00, 0x00, 0x00, 0x00, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x00, 0x06, 0x00, 0x06, 0x00, // ....u_model.....
	0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, // (.......u_modelV
	0x69, 0x65, 0x77, 0x00, 0x06, 0x00, 0x07, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // iew.....(.......
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x00, // u_modelViewProj.
	0x05, 0x00, 0x03, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, // ....*...........
	0x61, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x00, 0x00, 0x00, 0x00, // a...a_normal....
	0x05, 0x00, 0x05, 0x00, 0x64, 0x00, 0x00, 0x00, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // ....d...a_positi
	0x6f, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, // on......m...@ent
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x67, 0x6c, // ryPointOutput.gl
	0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0b, 0x00, // _Position.......
	0x71, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, // q...@entryPointO
	0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, // utput.v_normal_c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x74, 0x00, 0x00, 0x00, // amera.......t...
	0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, // @entryPointOutpu
	0x74, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // t.v_normal_world
	0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x77, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, // ........w...@ent
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, // ryPointOutput.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x00, // position_camera.
	0x05, 0x00, 0x0b, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x40, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, // ....z...@entryPo
	0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // intOutput.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, // tion_world..G...
	0x27, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, // '.......@...H...
	0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // (...........H...
	0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // (.......#.......
	0x48, 0x00, 0x05, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // H...(...........
	0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....H...(.......
	0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ....H...(.......
	0x23, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x28, 0x00, 0x00, 0x00, // #.......H...(...
	0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, // ............H...
	0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, // (...........H...
	0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x40, 0x08, 0x00, 0x00, // (.......#...@...
	0x48, 0x00, 0x05, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // H...(...........
	0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ....G...(.......
	0x47, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...*...".......
	0x47, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...*...!.......
	0x47, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...a...........
	0x47, 0x00, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // G...d...........
	0x47, 0x00, 0x04, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...m...........
	0x47, 0x00, 0x04, 0x00, 0x71, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // G...q...........
	0x47, 0x00, 0x04, 0x00, 0x74, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // G...t...........
	0x47, 0x00, 0x04, 0x00, 0x77, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // G...w...........
	0x47, 0x00, 0x04, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // G...z...........
	0x13, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, // ........!.......
	0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // ............ ...
	0x17, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // ................
	0x17, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ................
	0x15, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........ .......
	0x2b, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // +...............
	0x2b, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, // +..............?
	0x2b, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // +...............
	0x18, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....$...........
	0x15, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ....%... .......
	0x2b, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // +...%...&... ...
	0x1c, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, // ....'...$...&...
	0x1e, 0x00, 0x05, 0x00, 0x28, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, // ....(...'...$...
	0x24, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // $... ...).......
	0x28, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, // (...;...)...*...
	0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // ....+.......+...
	0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // .... ...,.......
	0x24, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // $... ...`.......
	0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, // ....;...`...a...
	0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, // ....;...`...d...
	0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // .... ...l.......
	0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, // ....;...l...m...
	0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x70, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // .... ...p.......
	0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x70, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, // ....;...p...q...
	0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x70, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, // ....;...p...t...
	0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x70, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, // ....;...p...w...
	0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x70, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, // ....;...p...z...
	0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ....6...........
	0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, // ................
	0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, // =.......b...a...
	0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, // =.......e...d...
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, // Q...........e...
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, // ....Q...........
	0x65, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // e.......Q.......
	0x99, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // ....e.......P...
	0x09, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, // ................
	0x99, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x2c, 0x00, 0x00, 0x00, // ........A...,...
	0x9b, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // ....*...+...+...
	0x3d, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, // =...$...........
	0x90, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, // ................
	0x9c, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, // ....O...........
	0x9d, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, // ....Q...........
	0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // e.......Q.......
	0xa2, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....e.......Q...
	0x06, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ........e.......
	0x50, 0x00, 0x07, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, // P...............
	0xa2, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, // ............A...
	0x2c, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, // ,.......*.......
	0x3d, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, // =...$...........
	0x90, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, // ................
	0xa6, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, // ....O...........
	0xa7, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, // ....Q...........
	0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // b.......Q.......
	0xac, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....b.......Q...
	0x06, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ........b.......
	0x50, 0x00, 0x07, 0x00, 0x09, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00, // P...............
	0xac, 0x00, 0x00, 0x00, 0xad, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, // ............A...
	0x2c, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, // ,.......*...+...
	0x2b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, // +...=...$.......
	0xaf, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, // ................
	0xae, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x09, 0x00, 0x00, 0x00, // ................
	0xb2, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, // ........E.......
	0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, // O...............
	0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // ................
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, // Q...........b...
	0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, // ....Q...........
	0x62, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // b.......Q.......
	0xb8, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, // ....b.......P...
	0x09, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x00, 0x00, // ................
	0xb8, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x00, 0x00, // ........A...,...
	0xba, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, // ....*.......=...
	0x24, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, // $...............
	0x09, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, // ................
	0x0c, 0x00, 0x06, 0x00, 0x09, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ................
	0x45, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, // E.......O.......
	0xbe, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, // ........Q.......
	0xc1, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, // ....e.......Q...
	0x06, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // ........e.......
	0x51, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, // Q...........e...
	0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x09, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, // ....P...........
	0xc1, 0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, // ................
	0x41, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, // A...,.......*...
	0x18, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, // ....=...$.......
	0xc5, 0x00, 0x00, 0x00, 0x90, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, // ................
	0xc4, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x6d, 0x00, 0x00, 0x00, // ........>...m...
	0xc7, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x71, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, // ....>...q.......
	0x3e, 0x00, 0x03, 0x00, 0x74, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, // >...t.......>...
	0x77, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x7a, 0x00, 0x00, 0x00, // w.......>...z...
	0x9e, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x02, 0x02, 0x00, // ........8.......
	0x01, 0x00, 0x80, 0x08,                                                                         // ....
};
static const uint8_t vs_terrain_dx9[1332] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xb8, 0xa6, 0x04, 0x03, 0x00, 0x07, 0x75, // VSH............u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // _model..........
	0x0b, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x04, 0x01, 0x00, 0x08, // .u_modelView....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // .......u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0x40, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ewProj..@.......
	0xd8, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, // ....#include <me
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, // tal_stdlib>.#inc
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, // lude <simd/simd.
	0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, // h>..using namesp
	0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ace metal;..stru
	0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ct _Global.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, //  float4x4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l[32];.    float
	0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // 4x4 u_modelView;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // .    float4x4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x7d, // modelViewProj;.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, // float3 _entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ntOutput_v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // l_camera [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // oat3 _entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // Output_v_normal_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // world [[user(loc
	0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n1)]];.    float
	0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // 3 _entryPointOut
	0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, // put_v_position_c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // amera [[user(loc
	0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n2)]];.    float
	0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // 3 _entryPointOut
	0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // put_v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // orld [[user(locn
	0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 3)]];.    float4
	0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, //  gl_Position [[p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, // osition]];.};..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // truct xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n_in.{.    float
	0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, // 3 a_normal [[att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ribute(0)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float3 a_positi
	0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, // on [[attribute(1
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, // )]];.};..vertex 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, // xlatMtlMain(xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, // MtlMain_in in [[
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // stage_in]], cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, // tant _Global& _m
	0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, // tl_u [[buffer(0)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, // {};.    out.gl_P
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // osition = _mtl_u
	0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // .u_modelViewProj
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, //  * float4(in.a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // osition, 1.0);. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, //    out._entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ntOutput_v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // l_camera = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, // lize(_mtl_u.u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // delView * float4
	0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, // (in.a_normal, 0.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, // 0)).xyz;.    out
	0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, // ._entryPointOutp
	0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // ut_v_normal_worl
	0x64, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, // d = normalize(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, // tl_u.u_model[0] 
	0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, // * float4(in.a_no
	0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // rmal, 0.0)).xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, // .    out._entryP
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, // ointOutput_v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x28, // ition_camera = (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // _mtl_u.u_modelVi
	0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, // ew * float4(in.a
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // _position, 1.0))
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, // .xyz;.    out._e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, // ntryPointOutput_
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, //  = (_mtl_u.u_mod
	0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, // el[0] * float4(i
	0x6e, 0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, // n.a_position, 1.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, // 0)).xyz;.    ret
	0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x02, 0x02, 0x00, // urn out;.}......
	0x01, 0x00, 0xc0, 0x00,                                                                         // ....
};
static const uint8_t vs_terrain_dx11[1332] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xb8, 0xa6, 0x04, 0x03, 0x00, 0x07, 0x75, // VSH............u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // _model..........
	0x0b, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x04, 0x01, 0x00, 0x08, // .u_modelView....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // .......u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0x40, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ewProj..@.......
	0xd8, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, // ....#include <me
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, // tal_stdlib>.#inc
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, // lude <simd/simd.
	0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, // h>..using namesp
	0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ace metal;..stru
	0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ct _Global.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, //  float4x4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l[32];.    float
	0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // 4x4 u_modelView;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // .    float4x4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x7d, // modelViewProj;.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, // float3 _entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ntOutput_v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // l_camera [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // oat3 _entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // Output_v_normal_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // world [[user(loc
	0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n1)]];.    float
	0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // 3 _entryPointOut
	0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, // put_v_position_c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // amera [[user(loc
	0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n2)]];.    float
	0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // 3 _entryPointOut
	0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // put_v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // orld [[user(locn
	0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 3)]];.    float4
	0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, //  gl_Position [[p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, // osition]];.};..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // truct xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n_in.{.    float
	0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, // 3 a_normal [[att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ribute(0)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float3 a_positi
	0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, // on [[attribute(1
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, // )]];.};..vertex 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, // xlatMtlMain(xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, // MtlMain_in in [[
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // stage_in]], cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, // tant _Global& _m
	0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, // tl_u [[buffer(0)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, // {};.    out.gl_P
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // osition = _mtl_u
	0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // .u_modelViewProj
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, //  * float4(in.a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // osition, 1.0);. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, //    out._entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ntOutput_v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // l_camera = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, // lize(_mtl_u.u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // delView * float4
	0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, // (in.a_normal, 0.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, // 0)).xyz;.    out
	0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, // ._entryPointOutp
	0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // ut_v_normal_worl
	0x64, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, // d = normalize(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, // tl_u.u_model[0] 
	0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, // * float4(in.a_no
	0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // rmal, 0.0)).xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, // .    out._entryP
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, // ointOutput_v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x28, // ition_camera = (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // _mtl_u.u_modelVi
	0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, // ew * float4(in.a
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // _position, 1.0))
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, // .xyz;.    out._e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, // ntryPointOutput_
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, //  = (_mtl_u.u_mod
	0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, // el[0] * float4(i
	0x6e, 0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, // n.a_position, 1.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, // 0)).xyz;.    ret
	0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x02, 0x02, 0x00, // urn out;.}......
	0x01, 0x00, 0xc0, 0x00,                                                                         // ....
};
static const uint8_t vs_terrain_mtl[1332] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xb8, 0xa6, 0x04, 0x03, 0x00, 0x07, 0x75, // VSH............u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // _model..........
	0x0b, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x04, 0x01, 0x00, 0x08, // .u_modelView....
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // .......u_modelVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0x40, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ewProj..@.......
	0xd8, 0x04, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, // ....#include <me
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, // tal_stdlib>.#inc
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, // lude <simd/simd.
	0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, // h>..using namesp
	0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ace metal;..stru
	0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ct _Global.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, //  float4x4 u_mode
	0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // l[32];.    float
	0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, // 4x4 u_modelView;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // .    float4x4 u_
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x7d, // modelViewProj;.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, // float3 _entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ntOutput_v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // l_camera [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, // oat3 _entryPoint
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // Output_v_normal_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // world [[user(loc
	0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n1)]];.    float
	0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // 3 _entryPointOut
	0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, // put_v_position_c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // amera [[user(loc
	0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n2)]];.    float
	0x33, 0x20, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, // 3 _entryPointOut
	0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // put_v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // orld [[user(locn
	0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // 3)]];.    float4
	0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, //  gl_Position [[p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, // osition]];.};..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // truct xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n_in.{.    float
	0x33, 0x20, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, // 3 a_normal [[att
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ribute(0)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float3 a_positi
	0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, // on [[attribute(1
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20, // )]];.};..vertex 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, // xlatMtlMain(xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, // MtlMain_in in [[
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // stage_in]], cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, // tant _Global& _m
	0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, // tl_u [[buffer(0)
	0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ]]).{.    xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, // lMain_out out = 
	0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, // {};.    out.gl_P
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // osition = _mtl_u
	0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // .u_modelViewProj
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x70, //  * float4(in.a_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // osition, 1.0);. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, //    out._entryPoi
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ntOutput_v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // l_camera = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, // lize(_mtl_u.u_mo
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // delView * float4
	0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, // (in.a_normal, 0.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, // 0)).xyz;.    out
	0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, // ._entryPointOutp
	0x75, 0x74, 0x5f, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // ut_v_normal_worl
	0x64, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, // d = normalize(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, // tl_u.u_model[0] 
	0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, 0x5f, 0x6e, 0x6f, // * float4(in.a_no
	0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // rmal, 0.0)).xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, // .    out._entryP
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x5f, 0x70, 0x6f, 0x73, // ointOutput_v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x3d, 0x20, 0x28, // ition_camera = (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, // _mtl_u.u_modelVi
	0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x61, // ew * float4(in.a
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // _position, 1.0))
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x5f, 0x65, // .xyz;.    out._e
	0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, // ntryPointOutput_
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x6f, 0x64, //  = (_mtl_u.u_mod
	0x65, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, // el[0] * float4(i
	0x6e, 0x2e, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, // n.a_position, 1.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, // 0)).xyz;.    ret
	0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x02, 0x02, 0x00, // urn out;.}......
	0x01, 0x00, 0xc0, 0x00,                                                                         // ....
};
extern const uint8_t* vs_terrain_pssl;
extern const uint32_t vs_terrain_pssl_size;
static const uint8_t fs_terrain_glsl[11459] =
{
	0x46, 0x53, 0x48, 0x0b, 0x1d, 0xb8, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x0a, 0x75, // FSH............u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x02, 0x05, 0x00, 0x00, 0x05, 0x00, 0x00, // _material.......
	0x00, 0xfe, 0x7f, 0x07, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x02, 0x13, 0x00, 0x00, 0x13, // ....u_light.....
	0x00, 0x00, 0x00, 0xfe, 0x7f, 0x09, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x02, // ......u_terrain.
	0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x00, 0x01, 0x00, 0x00, // ure_region_1....
	0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // _region_2.......
	0x00, 0xfe, 0x7f, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, // gion_3..........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x34, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x01, 0x2c, 0x00, // n_4...........,.
	0x00, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // .in vec3 v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, // l_camera;.in vec
	0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // 3 v_normal_world
	0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // ;.in vec3 v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x3b, 0x0a, 0x69, 0x6e, 0x20, // tion_camera;.in 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // vec3 v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // world;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x35, // ec4 u_material[5
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // ];.uniform vec4 
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x39, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_light[19];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // form vec4 u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x37, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // ain[7];.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // sampler2D s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x3b, 0x0a, 0x75, 0x6e, // ure_region_1;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // iform sampler2D 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // _2;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ler2D s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // region_3;.unifor
	0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, // m sampler2D s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x3b, 0x0a, // xture_region_4;.
	0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, // void main ().{. 
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, //  vec3 terrainCol
	0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x6c, // or_1;.  float sl
	0x6f, 0x70, 0x65, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x62, 0x6f, // ope_2;.  if ((bo
	0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // ol(u_terrain[0].
	0x79, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // y) && (v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, // n_world.y <= 0.0
	0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, // ))) {.    discar
	0x64, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x62, // d;.  };.  if ((b
	0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // ool(u_terrain[0]
	0x2e, 0x7a, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // .z) && (v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // on_world.y >= 0.
	0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, // 0))) {.    disca
	0x72, 0x64, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, // rd;.  };.  slope
	0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // _2 = (1.0 - norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, // alize(v_normal_w
	0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // orld).y);.  if (
	0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // (v_position_worl
	0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // d.y < u_terrain[
	0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, // 1].x)) {.    vec
	0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3 tmpvar_3;.    
	0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // if (bool(u_terra
	0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // in[3].w)) {.    
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, //   tmpvar_3 = tex
	0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ture (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, // region_1, (v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, // ition_world.xz /
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, //  u_terrain[0].x)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // ).xyz;.    } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // e {.      tmpvar
	0x5f, 0x33, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // _3 = u_terrain[3
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // ].xyz;.    };.  
	0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, //   terrainColor_1
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x7d, //  = tmpvar_3;.  }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //  else {.    if (
	0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // (v_position_worl
	0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // d.y < (u_terrain
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // [1].x + u_terrai
	0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // n[2].x))) {.    
	0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, //   vec3 tmpvar_4;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, // .      if (bool(
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, // u_terrain[3].w))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //  {.        tmpva
	0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, // r_4 = texture (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x31, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // 1, (v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // orld.xz / u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // ain[0].x)).xyz;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, //       } else {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, //        tmpvar_4 
	0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, // = u_terrain[3].x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // yz;.      };.   
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, //    vec3 tmpvar_5
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, // ;.      if (bool
	0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, // (u_terrain[4].w)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // ) {.        tmpv
	0x61, 0x72, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, // ar_5 = texture (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // _2, (v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // world.xz / u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // rain[0].x)).xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, // .      } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, //         tmpvar_5
	0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, //  = u_terrain[4].
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // xyz;.      };.  
	0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, //     terrainColor
	0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // _1 = mix (tmpvar
	0x5f, 0x34, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2c, 0x20, 0x28, 0x28, // _4, tmpvar_5, ((
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x79, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // .y - u_terrain[1
	0x5d, 0x2e, 0x78, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // ].x) / u_terrain
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // [2].x));.    } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // lse {.      if (
	0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // (v_position_worl
	0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // d.y < u_terrain[
	0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1].y)) {.       
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, //  vec3 tmpvar_6;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, //         if (bool
	0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, // (u_terrain[4].w)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, // ) {.          tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // pvar_6 = texture
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // on_2, (v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, // n_world.xz / u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, // errain[0].x)).xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // z;.        } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, // e {.          tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // pvar_6 = u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // in[4].xyz;.     
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, //    };.        te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x74, // rrainColor_1 = t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // mpvar_6;.      }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // if ((v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, // world.y < (u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, // rain[1].y + u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, // rrain[2].y))) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //           vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_7;.       
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, //    if (bool(u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // rrain[4].w)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //            vec3 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // blending_8;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, //         vec3 tmp
	0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_9;.         
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x6e, 0x6f, //    tmpvar_9 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, // rmalize(max (abs
	0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, // (v_normal_world)
	0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1e-05));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, //        blending_
	0x38, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x2f, 0x20, // 8 = (tmpvar_9 / 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, // vec3(((tmpvar_9.
	0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x79, 0x29, 0x20, // x + tmpvar_9.y) 
	0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, // + tmpvar_9.z)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // .            tmp
	0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // var_7 = (((textu
	0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // re (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // gion_2, .       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //        (v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, // on_world.yz / u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, // terrain[0].x).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, //           ).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x38, 0x2e, 0x78, 0x29, 0x20, // * blending_8.x) 
	0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // + (texture (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, // xture_region_2, 
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, // .              (
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // .xz / u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0].x).          
	0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, //   ).xyz * blendi
	0x6e, 0x67, 0x5f, 0x38, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, // ng_8.y)) + (text
	0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // ure (s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // egion_2, (v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, // tion_world.xy / 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, // .xyz * blending_
	0x38, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 8.z));.         
	0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  } else {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, //       tmpvar_7 =
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, //  u_terrain[4].xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, // z;.          };.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //           vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_10;.      
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, //     if (bool(u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, // errain[5].w)) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, //  blending_11;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //           vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_12;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, //       tmpvar_12 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, // = normalize(max 
	0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // (abs(v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // rld), 1e-05));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, //            blend
	0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ing_11 = (tmpvar
	0x5f, 0x31, 0x32, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, // _12 / vec3(((tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // var_12.x + tmpva
	0x72, 0x5f, 0x31, 0x32, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // r_12.y) + tmpvar
	0x5f, 0x31, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _12.z)));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, //       tmpvar_10 
	0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, // = (((texture (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, // texture_region_3
	0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , .             
	0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, //  (v_position_wor
	0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // ld.yz / u_terrai
	0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[0].x).        
	0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, //     ).xyz * blen
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, // ding_11.x) + (te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // xture (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, // _region_3, .    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, //           (v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, // ition_world.xz /
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, //  u_terrain[0].x)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, // .            ).x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, // yz * blending_11
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, // .y)) + (texture 
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // n_3, (v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, // _world.xy / u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, // rrain[0].x)).xyz
	0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, 0x2e, 0x7a, //  * blending_11.z
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // ));.          } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else {.         
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x75, //    tmpvar_10 = u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // _terrain[5].xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // .          };.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, //         vec3 tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_13;.        
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, //   tmpvar_13 = mi
	0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2c, 0x20, 0x74, 0x6d, 0x70, // x (tmpvar_7, tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2c, 0x20, 0x28, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x5f, 0x32, // var_10, (slope_2
	0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * 1.5));.      
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //     vec3 tmpvar_
	0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 14;.          if
	0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, //  (bool(u_terrain
	0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].w)) {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, //       tmpvar_14 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // = texture (s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, // ture_region_2, (
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // .xz / u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0].x)).xyz;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, //       } else {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //            tmpva
	0x72, 0x5f, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // r_14 = u_terrain
	0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].xyz;.       
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    };.          
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, // terrainColor_1 =
	0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2c, //  mix (tmpvar_14,
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2c, 0x20, 0x28, 0x28, 0x76, 0x5f, //  tmpvar_13, ((v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, //  - u_terrain[1].
	0x79, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // y) / u_terrain[2
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // ].y));.        }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, //   if ((v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, // n_world.y < u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // rrain[1].z)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //            vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_15;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, //        if (bool(
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, // u_terrain[4].w))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, //  vec3 blending_1
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6;.             
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x3b, //  vec3 tmpvar_17;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // .              t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mpvar_17 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, // lize(max (abs(v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, // normal_world), 1
	0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e-05));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, //       blending_1
	0x36, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x2f, // 6 = (tmpvar_17 /
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //  vec3(((tmpvar_1
	0x37, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2e, // 7.x + tmpvar_17.
	0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2e, 0x7a, // y) + tmpvar_17.z
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )));.           
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x28, //    tmpvar_15 = (
	0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // ((texture (s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, // ture_region_2, .
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // (v_position_worl
	0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // d.yz / u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [0].x).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, //      ).xyz * ble
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x36, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, // nding_16.x) + (t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // exture (s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, // e_region_2, .   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, //              (v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, // position_world.x
	0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // z / u_terrain[0]
	0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x).            
	0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, //   ).xyz * blendi
	0x6e, 0x67, 0x5f, 0x31, 0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, // ng_16.y)) + (tex
	0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ture (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, // region_2, (v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, // ition_world.xy /
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, //  u_terrain[0].x)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, // ).xyz * blending
	0x5f, 0x31, 0x36, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _16.z));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, //      } else {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, //             tmpv
	0x61, 0x72, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // ar_15 = u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[4].xyz;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       };.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //      vec3 tmpvar
	0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _18;.           
	0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  if (bool(u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ain[5].w)) {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //            vec3 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // blending_19;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //            vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_20;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //          tmpvar_
	0x32, 0x30, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, // 20 = normalize(m
	0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ax (abs(v_normal
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, // _world), 1e-05))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x74, // blending_19 = (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // mpvar_20 / vec3(
	0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x78, 0x20, 0x2b, 0x20, // ((tmpvar_20.x + 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, // tmpvar_20.y) + t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // mpvar_20.z)));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, //              tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, // var_18 = (((text
	0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // ure (s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // egion_3, .      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, //           (v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, // ition_world.yz /
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, //  u_terrain[0].x)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, // .              )
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, // .xyz * blending_
	0x31, 0x39, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // 19.x) + (texture
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // on_3, .         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //        (v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, // on_world.xz / u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, // terrain[0].x).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, //             ).xy
	0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x2e, // z * blending_19.
	0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, // y)) + (texture (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // _3, (v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // world.xy / u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rain[0].x)).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x2e, 0x7a, 0x29, // * blending_19.z)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // );.            }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x20, //       tmpvar_18 
	0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, // = u_terrain[5].x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // yz;.            
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // };.            t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, // errainColor_1 = 
	0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2c, 0x20, // mix (tmpvar_15, 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x2c, 0x20, 0x28, 0x73, 0x6c, 0x6f, 0x70, // tmpvar_18, (slop
	0x65, 0x5f, 0x32, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // e_2 * 1.5));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, //        } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // (v_position_worl
	0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // d.y < (u_terrain
	0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // [1].z + u_terrai
	0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // n[2].z))) {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //           vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_21;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, //         if (bool
	0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, // (u_terrain[4].w)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ) {.            
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, //     vec3 blendin
	0x67, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // g_22;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //       vec3 tmpva
	0x72, 0x5f, 0x32, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // r_23;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x20, //       tmpvar_23 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, // = normalize(max 
	0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // (abs(v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // rld), 1e-05));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, // lending_22 = (tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, // pvar_23 / vec3((
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, // (tmpvar_23.x + t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, // mpvar_23.y) + tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // pvar_23.z)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, //               tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, // pvar_21 = (((tex
	0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ture (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // region_2, .     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, //              (v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // z / u_terrain[0]
	0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x).            
	0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, //     ).xyz * blen
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, // ding_22.x) + (te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // xture (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, // _region_2, .    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, //               (v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // xz / u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].x).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, //      ).xyz * ble
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, // nding_22.y)) + (
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // texture (s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, // re_region_2, (v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, // position_world.x
	0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // y / u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, // .x)).xyz * blend
	0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ing_22.z));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, //           } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x75, //    tmpvar_21 = u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // _terrain[4].xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // .              }
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x3b, 0x0a, // vec3 tmpvar_24;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, //  (bool(u_terrain
	0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [5].w)) {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, //           vec3 b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lending_25;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_26;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, //             tmpv
	0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // ar_26 = normaliz
	0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // e(max (abs(v_nor
	0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, // mal_world), 1e-0
	0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5));.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, //      blending_25
	0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2f, 0x20, //  = (tmpvar_26 / 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, // vec3(((tmpvar_26
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x2e, 0x79, // .x + tmpvar_26.y
	0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x2e, 0x7a, 0x29, // ) + tmpvar_26.z)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x20, 0x3d, 0x20, //     tmpvar_24 = 
	0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // (((texture (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, // xture_region_3, 
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, //    (v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // orld.yz / u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ain[0].x).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, //           ).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x2e, 0x78, 0x29, // * blending_25.x)
	0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, //  + (texture (s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, // exture_region_3,
	0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  .              
	0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //     (v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // world.xz / u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // rain[0].x).     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, //            ).xyz
	0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x2e, 0x79, //  * blending_25.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, // )) + (texture (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // 3, (v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // orld.xy / u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // ain[0].x)).xyz *
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x2e, 0x7a, 0x29, 0x29, //  blending_25.z))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // } else {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //          tmpvar_
	0x32, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, // 24 = u_terrain[5
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].xyz;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      };.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //       vec3 tmpva
	0x72, 0x5f, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // r_27;.          
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x3d, 0x20, //     tmpvar_27 = 
	0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x2c, 0x20, // mix (tmpvar_21, 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x2c, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, // tmpvar_24, slope
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _2);.           
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //    vec3 tmpvar_2
	0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 8;.             
	0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  if (bool(u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ain[6].w)) {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, //              tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // var_28 = texture
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x34, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // on_4, (v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, // n_world.xz / u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, // errain[0].x)).xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z;.             
	0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  } else {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // _28 = u_terrain[
	0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6].xyz;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       };.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, //        terrainCo
	0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, // lor_1 = mix (tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // var_27, tmpvar_2
	0x38, 0x2c, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // 8, ((v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // world.y - u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, // ain[1].z) / u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // rrain[2].z));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, //           } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x3b, //  vec3 tmpvar_29;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // .              i
	0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // f (bool(u_terrai
	0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // n[6].w)) {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //            tmpva
	0x72, 0x5f, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, // r_29 = texture (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x34, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // _4, (v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // world.xz / u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // rain[0].x)).xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // .              }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //         tmpvar_2
	0x39, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, // 9 = u_terrain[6]
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xyz;.          
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     };.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, //      terrainColo
	0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x3b, // r_1 = tmpvar_29;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, // .            };.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, //           };.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, //      };.      };
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, // .    };.  };.  v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x3b, 0x0a, 0x20, // ec4 tmpvar_30;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, //  tmpvar_30.w = 1
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x2e, // .0;.  tmpvar_30.
	0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, // xyz = terrainCol
	0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x65, 0x73, // or_1;.  vec4 res
	0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // ult_31;.  vec3 v
	0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, // iew_direction_32
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, // ;.  vec3 specula
	0x72, 0x5f, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x69, 0x66, // r_33;.  vec3 dif
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // fuse_34;.  vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // tmpvar_35;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // var_35 = (u_ligh
	0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, // t[0].xyz * u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, // erial[1].xyz);. 
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x76, 0x65, //  diffuse_34 = ve
	0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // c3(0.0, 0.0, 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, // );.  specular_33
	0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  = vec3(0.0, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, // , 0.0);.  view_d
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // irection_32 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // rmalize(-(v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, 0x0a, 0x20, // tion_camera));. 
	0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  if (bool(u_ligh
	0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, // t[3].x)) {.    v
	0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // ec3 light_direct
	0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // ion_36;.    if (
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, // (u_light[4].w ==
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, //  0.0)) {.      l
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, // ight_direction_3
	0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x75, 0x5f, // 6 = normalize(u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, // light[4].xyz);. 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //    } else {.    
	0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, //   light_directio
	0x6e, 0x5f, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // n_36 = normalize
	0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // ((u_light[4].xyz
	0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, //  - v_position_ca
	0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, // mera));.    };. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //    float tmpvar_
	0x33, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, // 37;.    tmpvar_3
	0x37, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6c, 0x69, // 7 = max (dot (li
	0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x36, // ght_direction_36
	0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, // , v_normal_camer
	0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, // a), 0.0);.    di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, // ffuse_34 = ((u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, // ight[5].xyz * u_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // material[2].xyz)
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x37, 0x29, 0x3b, 0x0a, 0x20, //  * tmpvar_37);. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, //    if ((tmpvar_3
	0x37, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 7 > 0.0)) {.    
	0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, //   specular_33 = 
	0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // ((u_light[6].xyz
	0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, //  * u_material[3]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x6d, 0x61, 0x78, // .xyz) * pow (max
	0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, //  (.        dot (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x76, 0x69, 0x65, 0x77, 0x5f, // normalize((view_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, 0x20, 0x2b, 0x20, 0x6c, // direction_32 + l
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, // ight_direction_3
	0x36, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, // 6)), v_normal_ca
	0x6d, 0x65, 0x72, 0x61, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2c, 0x20, 0x30, 0x2e, // mera).      , 0.
	0x30, 0x29, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, // 0), u_material[4
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // ].x));.    };.  
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, // };.  if (bool(u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x37, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // light[7].x)) {. 
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, //    vec3 light_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // rection_38;.    
	0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x38, 0x5d, 0x2e, // if ((u_light[8].
	0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // w == 0.0)) {.   
	0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, //    light_directi
	0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // on_38 = normaliz
	0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x38, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // e(u_light[8].xyz
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, // );.    } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, //       light_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ction_38 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x38, 0x5d, // lize((u_light[8]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // .xyz - v_positio
	0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // n_camera));.    
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, // };.    float tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // var_39;.    tmpv
	0x61, 0x72, 0x5f, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, // ar_39 = max (dot
	0x20, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, //  (light_directio
	0x6e, 0x5f, 0x33, 0x38, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, // n_38, v_normal_c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // amera), 0.0);.  
	0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x28, //   diffuse_34 = (
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, // diffuse_34 + ((u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x39, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // _light[9].xyz * 
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // u_material[2].xy
	0x7a, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x29, 0x29, // z) * tmpvar_39))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, // ;.    if ((tmpva
	0x72, 0x5f, 0x33, 0x39, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // r_39 > 0.0)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, //      specular_33
	0x20, 0x3d, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, //  = (specular_33 
	0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x30, 0x5d, 0x2e, // + ((u_light[10].
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // xyz * u_material
	0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, // [3].xyz) * pow (
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, // .        max (do
	0x74, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x76, 0x69, // t (normalize((vi
	0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, 0x20, // ew_direction_32 
	0x2b, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // + light_directio
	0x6e, 0x5f, 0x33, 0x38, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // n_38)), v_normal
	0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // _camera), 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, //      , u_materia
	0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // l[4].x)));.    }
	0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, // ;.  };.  if (boo
	0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x31, 0x5d, 0x2e, 0x78, 0x29, // l(u_light[11].x)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, // ) {.    vec3 lig
	0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x30, 0x3b, // ht_direction_40;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // .    if ((u_ligh
	0x74, 0x5b, 0x31, 0x32, 0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // t[12].w == 0.0))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, //  {.      light_d
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // irection_40 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // rmalize(u_light[
	0x31, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // 12].xyz);.    } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, // else {.      lig
	0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x30, 0x20, // ht_direction_40 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6c, // = normalize((u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x76, // ight[12].xyz - v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, // _position_camera
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // ));.    };.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x3b, 0x0a, // loat tmpvar_41;.
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x20, 0x3d, 0x20, //     tmpvar_41 = 
	0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, // max (dot (light_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x30, 0x2c, 0x20, 0x76, 0x5f, // direction_40, v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // 0.0);.    diffus
	0x65, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, // e_34 = (diffuse_
	0x33, 0x34, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, // 34 + ((u_light[1
	0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, // 3].xyz * u_mater
	0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, // ial[2].xyz) * tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, // pvar_41));.    i
	0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x20, 0x3e, 0x20, // f ((tmpvar_41 > 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x70, // 0.0)) {.      sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x70, 0x65, // ecular_33 = (spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, // cular_33 + ((u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, // ight[14].xyz * u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // _material[3].xyz
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ) * pow (.      
	0x20, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, //   max (dot (norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, // alize((view_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, 0x20, 0x2b, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, // ction_32 + light
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x30, 0x29, 0x29, 0x2c, // _direction_40)),
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, //  v_normal_camera
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2c, 0x20, // ), 0.0).      , 
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, // u_material[4].x)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, // ));.    };.  };.
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, //   if (bool(u_lig
	0x68, 0x74, 0x5b, 0x31, 0x35, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ht[15].x)) {.   
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, //  vec3 light_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // ction_42;.    if
	0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x36, 0x5d, 0x2e, 0x77, //  ((u_light[16].w
	0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  == 0.0)) {.    
	0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, //   light_directio
	0x6e, 0x5f, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // n_42 = normalize
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // (u_light[16].xyz
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, // );.    } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, //       light_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ction_42 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x36, // lize((u_light[16
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // ].xyz - v_positi
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // on_camera));.   
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, //  };.    float tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // pvar_43;.    tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, // var_43 = max (do
	0x74, 0x20, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // t (light_directi
	0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // on_42, v_normal_
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // camera), 0.0);. 
	0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, //    diffuse_34 = 
	0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x2b, 0x20, 0x28, 0x28, // (diffuse_34 + ((
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x37, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // u_light[17].xyz 
	0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, // * u_material[2].
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, // xyz) * tmpvar_43
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, // ));.    if ((tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, // var_43 > 0.0)) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, // .      specular_
	0x33, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, // 33 = (specular_3
	0x33, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x38, // 3 + ((u_light[18
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // ].xyz * u_materi
	0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // al[3].xyz) * pow
	0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, //  (.        max (
	0x64, 0x6f, 0x74, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, // dot (normalize((
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, // view_direction_3
	0x32, 0x20, 0x2b, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // 2 + light_direct
	0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ion_42)), v_norm
	0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // al_camera), 0.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, // .      , u_mater
	0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ial[4].x)));.   
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  };.  };.  vec4 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // tmpvar_44;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, // var_44.w = 1.0;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, //   tmpvar_44.xyz 
	0x3d, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x20, 0x2b, 0x20, // = ((tmpvar_35 + 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x70, // diffuse_34) + sp
	0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, // ecular_33);.  ve
	0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, // c4 tmpvar_45;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, // tmpvar_45 = (tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // var_44 * tmpvar_
	0x33, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, // 30);.  result_31
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, //  = tmpvar_45;.  
	0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // if (bool(u_light
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, // [1].x)) {.    re
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x75, // sult_31 = mix (u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // _light[2], tmpva
	0x72, 0x5f, 0x34, 0x35, 0x2c, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x28, 0x0a, 0x20, // r_45, clamp ((. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, //      (u_light[1]
	0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // .z - abs(v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x7a, 0x29, 0x29, 0x0a, 0x20, // ion_camera.z)). 
	0x20, 0x20, 0x20, 0x20, 0x2f, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, 0x5f, //     / .      (u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x6c, // light[1].z - u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, // ight[1].y).    )
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // , 0.0, 1.0));.  
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, // };.  gl_FragColo
	0x72, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, 0x3b, 0x0a, 0x7d, // r = result_31;.}
	0x0a, 0x0a, 0x00,                                                                               // ...
};
static const uint8_t fs_terrain_essl[11630] =
{
	0x46, 0x53, 0x48, 0x0b, 0x1d, 0xb8, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x0a, 0x75, // FSH............u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x02, 0x05, 0x00, 0x00, 0x05, 0x00, 0x00, // _material.......
	0x00, 0xfe, 0x7f, 0x07, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x02, 0x13, 0x00, 0x00, 0x13, // ....u_light.....
	0x00, 0x00, 0x00, 0xfe, 0x7f, 0x09, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x02, // ......u_terrain.
	0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x00, 0x01, 0x00, 0x00, // ure_region_1....
	0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // _region_2.......
	0x00, 0xfe, 0x7f, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, // gion_3..........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x34, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0xac, 0x2c, 0x00, // n_4...........,.
	0x00, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // .precision highp
	0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, //  int;.precision 
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3b, 0x0a, 0x6f, 0x75, 0x74, // highp float;.out
	0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, //  lowp vec4 bgfx_
	0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, // FragData0;.in ve
	0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, // c3 v_normal_came
	0x72, 0x61, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, // ra;.in vec3 v_no
	0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, // rmal_world;.in v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, // ec3 v_position_c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, // amera;.in vec3 v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x3b, // _position_world;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x35, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // material[5];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // form vec4 u_ligh
	0x74, 0x5b, 0x31, 0x39, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // t[19];.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x37, 0x5d, // ec4 u_terrain[7]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ;.uniform sample
	0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // r2D s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // gion_1;.uniform 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // sampler2D s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x3b, 0x0a, 0x75, 0x6e, // ure_region_2;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // iform sampler2D 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // _3;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ler2D s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, // region_4;.void m
	0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, // ain ().{.  lowp 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, // vec3 terrainColo
	0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x6c, 0x6f, // r_1;.  float slo
	0x70, 0x65, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x62, 0x6f, 0x6f, // pe_2;.  if ((boo
	0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // l(u_terrain[0].y
	0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // ) && (v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // _world.y <= 0.0)
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, // )) {.    discard
	0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x62, 0x6f, // ;.  };.  if ((bo
	0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // ol(u_terrain[0].
	0x7a, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // z) && (v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, // n_world.y >= 0.0
	0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, // ))) {.    discar
	0x64, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x5f, // d;.  };.  slope_
	0x32, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 2 = (1.0 - norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // lize(v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // rld).y);.  if ((
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // .y < u_terrain[1
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, // ].x)) {.    lowp
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, //  vec3 tmpvar_3;.
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, //     if (bool(u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, // errain[3].w)) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x3d, //       tmpvar_3 =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, //  texture (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2c, 0x20, 0x28, 0x76, // ure_region_1, (v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // xz / u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // ].x)).xyz;.    }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, //  else {.      tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // pvar_3 = u_terra
	0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // in[3].xyz;.    }
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, // ;.    terrainCol
	0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, // or_1 = tmpvar_3;
	0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // .  } else {.    
	0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // if ((v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, // world.y < (u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, // rain[1].x + u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, // rrain[2].x))) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //       lowp vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_4;.      
	0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // if (bool(u_terra
	0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // in[3].w)) {.    
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x74, //     tmpvar_4 = t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // exture (s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, // e_region_1, (v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, // osition_world.xz
	0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, //  / u_terrain[0].
	0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // x)).xyz;.      }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // tmpvar_4 = u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rain[3].xyz;.   
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, //    };.      lowp
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, //  vec3 tmpvar_5;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, //       if (bool(u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, // _terrain[4].w)) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // {.        tmpvar
	0x5f, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, // _5 = texture (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // , (v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // rld.xz / u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // in[0].x)).xyz;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, //      } else {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x3d, //       tmpvar_5 =
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, //  u_terrain[4].xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // z;.      };.    
	0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, //   terrainColor_1
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, //  = mix (tmpvar_4
	0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2c, 0x20, 0x28, 0x28, 0x76, 0x5f, // , tmpvar_5, ((v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, //  - u_terrain[1].
	0x78, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // x) / u_terrain[2
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // ].x));.    } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, // e {.      if ((v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, // y < u_terrain[1]
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, // .y)) {.        l
	0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // owp vec3 tmpvar_
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, // 6;.        if (b
	0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, // ool(u_terrain[4]
	0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .w)) {.         
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, //  tmpvar_6 = text
	0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // ure (s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // egion_2, (v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, // tion_world.xz / 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // .xyz;.        } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else {.         
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, //  tmpvar_6 = u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // rrain[4].xyz;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       };.       
	0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, //  terrainColor_1 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // = tmpvar_6;.    
	0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //   } else {.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //    if ((v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, // on_world.y < (u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x75, // terrain[1].y + u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // _terrain[2].y)))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, //  {.          low
	0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, // p vec3 tmpvar_7;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, // .          if (b
	0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, // ool(u_terrain[4]
	0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .w)) {.         
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, //    vec3 blending
	0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _8;.            
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, // vec3 tmpvar_9;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //            tmpva
	0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // r_9 = normalize(
	0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // max (abs(v_norma
	0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, // l_world), 1e-05)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // );.            b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, // lending_8 = (tmp
	0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, // var_9 / vec3(((t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, // mpvar_9.x + tmpv
	0x61, 0x72, 0x5f, 0x39, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ar_9.y) + tmpvar
	0x5f, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _9.z)));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, //      tmpvar_7 = 
	0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // (((texture (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, // xture_region_2, 
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, // .              (
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // .yz / u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0].x).          
	0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, //   ).xyz * blendi
	0x6e, 0x67, 0x5f, 0x38, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // ng_8.x) + (textu
	0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // re (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // gion_2, .       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //        (v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, // on_world.xz / u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, // terrain[0].x).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, //           ).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x38, 0x2e, 0x79, 0x29, 0x29, // * blending_8.y))
	0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, //  + (texture (s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, // exture_region_2,
	0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, //  (v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // ld.xy / u_terrai
	0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, // n[0].x)).xyz * b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x38, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, // lending_8.z));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, //          } else 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, // {.            tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // pvar_7 = u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // in[4].xyz;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      };.        
	0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //   lowp vec3 tmpv
	0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_10;.         
	0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  if (bool(u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ain[5].w)) {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, //          vec3 bl
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ending_11;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //        vec3 tmpv
	0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_12;.         
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x6e, //    tmpvar_12 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, // ormalize(max (ab
	0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // s(v_normal_world
	0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ), 1e-05));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, //         blending
	0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, // _11 = (tmpvar_12
	0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //  / vec3(((tmpvar
	0x5f, 0x31, 0x32, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // _12.x + tmpvar_1
	0x32, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, // 2.y) + tmpvar_12
	0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z)));.         
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x28, //    tmpvar_10 = (
	0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // ((texture (s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, // ture_region_3, .
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, //               (v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // yz / u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].x).           
	0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, //  ).xyz * blendin
	0x67, 0x5f, 0x31, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // g_11.x) + (textu
	0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // re (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // gion_3, .       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //        (v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, // on_world.xz / u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, // terrain[0].x).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, //           ).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, 0x2e, 0x79, 0x29, // * blending_11.y)
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, // ) + (texture (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, // texture_region_3
	0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // , (v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // rld.xy / u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // in[0].x)).xyz * 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // blending_11.z));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // .          } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e {.            
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, // tmpvar_10 = u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // rrain[5].xyz;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //         };.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //      lowp vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_13;.      
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, //     tmpvar_13 = 
	0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2c, 0x20, 0x74, // mix (tmpvar_7, t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2c, 0x20, 0x28, 0x73, 0x6c, 0x6f, 0x70, 0x65, // mpvar_10, (slope
	0x5f, 0x32, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _2 * 1.5));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //       lowp vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_14;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, //      if (bool(u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, // terrain[4].w)) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // .            tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // var_14 = texture
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // on_2, (v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, // n_world.xz / u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, // errain[0].x)).xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // z;.          } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse {.          
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x5f, //   tmpvar_14 = u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // terrain[4].xyz;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, //           };.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, //        terrainCo
	0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, // lor_1 = mix (tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // var_14, tmpvar_1
	0x33, 0x2c, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // 3, ((v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // world.y - u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, // ain[1].y) / u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // rrain[2].y));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, //       } else {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, //          if ((v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, //  < u_terrain[1].
	0x7a, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z)) {.          
	0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //   lowp vec3 tmpv
	0x61, 0x72, 0x5f, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_15;.         
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, //    if (bool(u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // rrain[4].w)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, //              vec
	0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x36, 0x3b, 0x0a, 0x20, // 3 blending_16;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, //              vec
	0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 3 tmpvar_17;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //            tmpva
	0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // r_17 = normalize
	0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // (max (abs(v_norm
	0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, // al_world), 1e-05
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x36, 0x20, 0x3d, 0x20, //   blending_16 = 
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, // (tmpvar_17 / vec
	0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2e, 0x78, 0x20, // 3(((tmpvar_17.x 
	0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2e, 0x79, 0x29, 0x20, 0x2b, // + tmpvar_17.y) +
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, //  tmpvar_17.z)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // .              t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, // mpvar_15 = (((te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // xture (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, // _region_2, .    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, //             (v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, // osition_world.yz
	0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, //  / u_terrain[0].
	0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // x).             
	0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, //  ).xyz * blendin
	0x67, 0x5f, 0x31, 0x36, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // g_16.x) + (textu
	0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // re (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // gion_2, .       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, //          (v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, // tion_world.xz / 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, // u_terrain[0].x).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, //               ).
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, // xyz * blending_1
	0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // 6.y)) + (texture
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // on_2, (v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, // n_world.xy / u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, // errain[0].x)).xy
	0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x36, 0x2e, // z * blending_16.
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z));.           
	0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  } else {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //         tmpvar_1
	0x35, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, // 5 = u_terrain[4]
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xyz;.          
	0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   };.           
	0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //  lowp vec3 tmpva
	0x72, 0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // r_18;.          
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, //   if (bool(u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // rain[5].w)) {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x3b, 0x0a, 0x20, 0x20, //  blending_19;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_20;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // _20 = normalize(
	0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // max (abs(v_norma
	0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, // l_world), 1e-05)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x28, //  blending_19 = (
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, // tmpvar_20 / vec3
	0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x78, 0x20, 0x2b, // (((tmpvar_20.x +
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, //  tmpvar_20.y) + 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, // tmpvar_20.z)));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, //               tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, // pvar_18 = (((tex
	0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ture (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // region_3, .     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, //            (v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, // sition_world.yz 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // / u_terrain[0].x
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).              
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, // ).xyz * blending
	0x5f, 0x31, 0x39, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // _19.x) + (textur
	0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // e (s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ion_3, .        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //         (v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, // ion_world.xz / u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, // _terrain[0].x). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, //              ).x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, // yz * blending_19
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, // .y)) + (texture 
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // n_3, (v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, // _world.xy / u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, // rrain[0].x)).xyz
	0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x2e, 0x7a, //  * blending_19.z
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // } else {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, //        tmpvar_18
	0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, //  = u_terrain[5].
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xyz;.           
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  };.            
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, // terrainColor_1 =
	0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2c, //  mix (tmpvar_15,
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x2c, 0x20, 0x28, 0x73, 0x6c, 0x6f, //  tmpvar_18, (slo
	0x70, 0x65, 0x5f, 0x32, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // pe_2 * 1.5));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, //         } else {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // .            if 
	0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // ((v_position_wor
	0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // ld.y < (u_terrai
	0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // n[1].z + u_terra
	0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // in[2].z))) {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, //            lowp 
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x3b, 0x0a, // vec3 tmpvar_21;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, //  (bool(u_terrain
	0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].w)) {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, //           vec3 b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lending_22;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_23;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, //             tmpv
	0x61, 0x72, 0x5f, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // ar_23 = normaliz
	0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // e(max (abs(v_nor
	0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, // mal_world), 1e-0
	0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5));.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, //      blending_22
	0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x20, 0x2f, 0x20, //  = (tmpvar_23 / 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, // vec3(((tmpvar_23
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x2e, 0x79, // .x + tmpvar_23.y
	0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x2e, 0x7a, 0x29, // ) + tmpvar_23.z)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x3d, 0x20, //     tmpvar_21 = 
	0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // (((texture (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, // xture_region_2, 
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, //    (v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // orld.yz / u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ain[0].x).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, //           ).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x2e, 0x78, 0x29, // * blending_22.x)
	0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, //  + (texture (s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, // exture_region_2,
	0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  .              
	0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //     (v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // world.xz / u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // rain[0].x).     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, //            ).xyz
	0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x2e, 0x79, //  * blending_22.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, // )) + (texture (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // 2, (v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // orld.xy / u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // ain[0].x)).xyz *
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x32, 0x2e, 0x7a, 0x29, 0x29, //  blending_22.z))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // } else {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //          tmpvar_
	0x32, 0x31, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, // 21 = u_terrain[4
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].xyz;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      };.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //       lowp vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_24;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, //          if (boo
	0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, // l(u_terrain[5].w
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )) {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, //      vec3 blendi
	0x6e, 0x67, 0x5f, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ng_25;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //        vec3 tmpv
	0x61, 0x72, 0x5f, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_26;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, //        tmpvar_26
	0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, //  = normalize(max
	0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, //  (abs(v_normal_w
	0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, // orld), 1e-05));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x74, // blending_25 = (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, // mpvar_26 / vec3(
	0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x2e, 0x78, 0x20, 0x2b, 0x20, // ((tmpvar_26.x + 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, // tmpvar_26.y) + t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // mpvar_26.z)));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, //                t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, // mpvar_24 = (((te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // xture (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, // _region_3, .    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, //               (v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // yz / u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].x).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, //      ).xyz * ble
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, // nding_25.x) + (t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // exture (s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, // e_region_3, .   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, //                (
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // .xz / u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0].x).          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, //       ).xyz * bl
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, // ending_25.y)) + 
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // (texture (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x28, 0x76, // ure_region_3, (v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // xy / u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, // ].x)).xyz * blen
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x35, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ding_25.z));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, //            } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e {.            
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x20, 0x3d, 0x20, //     tmpvar_24 = 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // u_terrain[5].xyz
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // };.             
	0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //  lowp vec3 tmpva
	0x72, 0x5f, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // r_27;.          
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x3d, 0x20, //     tmpvar_27 = 
	0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x2c, 0x20, // mix (tmpvar_21, 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x2c, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, // tmpvar_24, slope
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _2);.           
	0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, //    lowp vec3 tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_28;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, //       if (bool(u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, // _terrain[6].w)) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x74, 0x65, //   tmpvar_28 = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // xture (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, // _region_4, (v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, // sition_world.xz 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // / u_terrain[0].x
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).xyz;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, //       } else {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, //                t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // mpvar_28 = u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rain[6].xyz;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, //            };.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, //             terr
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ainColor_1 = mix
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x2c, 0x20, 0x74, 0x6d, 0x70, //  (tmpvar_27, tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x2c, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // var_28, ((v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x75, // tion_world.y - u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x20, 0x2f, // _terrain[1].z) /
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, //  u_terrain[2].z)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // );.            }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //       lowp vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_29;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, //          if (boo
	0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, // l(u_terrain[6].w
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )) {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x20, 0x3d, //      tmpvar_29 =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, //  texture (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2c, 0x20, 0x28, 0x76, // ure_region_4, (v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // xz / u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ].x)).xyz;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, //          } else 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x75, 0x5f, //   tmpvar_29 = u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, // terrain[6].xyz;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, //               };
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // .              t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, // errainColor_1 = 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_29;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        };.      
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //     };.        }
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // ;.      };.    }
	0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, // ;.  };.  lowp ve
	0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, // c4 tmpvar_30;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, // tmpvar_30.w = 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x2e, 0x78, // 0;.  tmpvar_30.x
	0x79, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, // yz = terrainColo
	0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, // r_1;.  lowp vec4
	0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, //  result_31;.  ve
	0x63, 0x33, 0x20, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // c3 view_directio
	0x6e, 0x5f, 0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, // n_32;.  vec3 spe
	0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, // cular_33;.  vec3
	0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x76, //  diffuse_34;.  v
	0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x3b, 0x0a, 0x20, // ec3 tmpvar_35;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, //  tmpvar_35 = (u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, // light[0].xyz * u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // _material[1].xyz
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, // );.  diffuse_34 
	0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // = vec3(0.0, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, //  0.0);.  specula
	0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, // r_33 = vec3(0.0,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x69, //  0.0, 0.0);.  vi
	0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, 0x20, // ew_direction_32 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x28, 0x76, 0x5f, // = normalize(-(v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, // position_camera)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, // );.  if (bool(u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // light[3].x)) {. 
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, //    vec3 light_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // rection_36;.    
	0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, // if ((u_light[4].
	0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // w == 0.0)) {.   
	0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, //    light_directi
	0x6f, 0x6e, 0x5f, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // on_36 = normaliz
	0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // e(u_light[4].xyz
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, // );.    } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, //       light_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ction_36 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // lize((u_light[4]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // .xyz - v_positio
	0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // n_camera));.    
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, // };.    float tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // var_37;.    tmpv
	0x61, 0x72, 0x5f, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, // ar_37 = max (dot
	0x20, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, //  (light_directio
	0x6e, 0x5f, 0x33, 0x36, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, // n_36, v_normal_c
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // amera), 0.0);.  
	0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x28, //   diffuse_34 = (
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // (u_light[5].xyz 
	0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, // * u_material[2].
	0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x37, // xyz) * tmpvar_37
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, // );.    if ((tmpv
	0x61, 0x72, 0x5f, 0x33, 0x37, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, // ar_37 > 0.0)) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, //       specular_3
	0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, // 3 = ((u_light[6]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, // .xyz * u_materia
	0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, // l[3].xyz) * pow 
	0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, // (max (.        d
	0x6f, 0x74, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x76, // ot (normalize((v
	0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, // iew_direction_32
	0x20, 0x2b, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, //  + light_directi
	0x6f, 0x6e, 0x5f, 0x33, 0x36, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // on_36)), v_norma
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // l_camera).      
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // , 0.0), u_materi
	0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, // al[4].x));.    }
	0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, // ;.  };.  if (boo
	0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x37, 0x5d, 0x2e, 0x78, 0x29, 0x29, // l(u_light[7].x))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, //  {.    vec3 ligh
	0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x3b, 0x0a, // t_direction_38;.
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, //     if ((u_light
	0x5b, 0x38, 0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, // [8].w == 0.0)) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, // .      light_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ection_38 = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x38, 0x5d, // alize(u_light[8]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // .xyz);.    } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, // e {.      light_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x6e, // direction_38 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ormalize((u_ligh
	0x74, 0x5b, 0x38, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, // t[8].xyz - v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, 0x0a, // ition_camera));.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //     };.    float
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_39;.    
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, // tmpvar_39 = max 
	0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, // (dot (light_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ction_38, v_norm
	0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // al_camera), 0.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, // ;.    diffuse_34
	0x20, 0x3d, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x2b, //  = (diffuse_34 +
	0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x39, 0x5d, 0x2e, 0x78, 0x79, //  ((u_light[9].xy
	0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, // z * u_material[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ].xyz) * tmpvar_
	0x33, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, // 39));.    if ((t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // mpvar_39 > 0.0))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, //  {.      specula
	0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, // r_33 = (specular
	0x5f, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // _33 + ((u_light[
	0x31, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, // 10].xyz * u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, // rial[3].xyz) * p
	0x6f, 0x77, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x78, // ow (.        max
	0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, //  (dot (normalize
	0x28, 0x28, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // ((view_direction
	0x5f, 0x33, 0x32, 0x20, 0x2b, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, // _32 + light_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x38, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, // ction_38)), v_no
	0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, // rmal_camera), 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, // 0).      , u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // erial[4].x)));. 
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, //    };.  };.  if 
	0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x31, // (bool(u_light[11
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, // ].x)) {.    vec3
	0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, //  light_direction
	0x5f, 0x34, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, // _40;.    if ((u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x32, 0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, // light[12].w == 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, // .0)) {.      lig
	0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x30, 0x20, // ht_direction_40 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, // = normalize(u_li
	0x67, 0x68, 0x74, 0x5b, 0x31, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ght[12].xyz);.  
	0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //   } else {.     
	0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, //  light_direction
	0x5f, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // _40 = normalize(
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // (u_light[12].xyz
	0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, //  - v_position_ca
	0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, // mera));.    };. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //    float tmpvar_
	0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, // 41;.    tmpvar_4
	0x31, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6c, 0x69, // 1 = max (dot (li
	0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x30, // ght_direction_40
	0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, // , v_normal_camer
	0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, // a), 0.0);.    di
	0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, // ffuse_34 = (diff
	0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, // use_34 + ((u_lig
	0x68, 0x74, 0x5b, 0x31, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, // ht[13].xyz * u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, // aterial[2].xyz) 
	0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x29, 0x29, 0x3b, 0x0a, 0x20, // * tmpvar_41));. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, //    if ((tmpvar_4
	0x31, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1 > 0.0)) {.    
	0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, //   specular_33 = 
	0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, // (specular_33 + (
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // (u_light[14].xyz
	0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, //  * u_material[3]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x0a, 0x20, 0x20, // .xyz) * pow (.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, //       max (dot (
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x76, 0x69, 0x65, 0x77, 0x5f, // normalize((view_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x32, 0x20, 0x2b, 0x20, 0x6c, // direction_32 + l
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // ight_direction_4
	0x30, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, // 0)), v_normal_ca
	0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // mera), 0.0).    
	0x20, 0x20, 0x2c, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, //   , u_material[4
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, // ].x)));.    };. 
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, //  };.  if (bool(u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x35, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, // _light[15].x)) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, // .    vec3 light_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, // direction_42;.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, //   if ((u_light[1
	0x36, 0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, // 6].w == 0.0)) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, //       light_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ction_42 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x36, 0x5d, // lize(u_light[16]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, // .xyz);.    } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, // e {.      light_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x20, 0x3d, 0x20, 0x6e, // direction_42 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ormalize((u_ligh
	0x74, 0x5b, 0x31, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, // t[16].xyz - v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x29, 0x3b, // sition_camera));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .    };.    floa
	0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, // t tmpvar_43;.   
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, //  tmpvar_43 = max
	0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, //  (dot (light_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x2c, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // ection_42, v_nor
	0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // mal_camera), 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, // );.    diffuse_3
	0x34, 0x20, 0x3d, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x20, // 4 = (diffuse_34 
	0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x37, 0x5d, 0x2e, // + ((u_light[17].
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // xyz * u_material
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // [2].xyz) * tmpva
	0x72, 0x5f, 0x34, 0x33, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // r_43));.    if (
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // (tmpvar_43 > 0.0
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, // )) {.      specu
	0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, // lar_33 = (specul
	0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ar_33 + ((u_ligh
	0x74, 0x5b, 0x31, 0x38, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, // t[18].xyz * u_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, // terial[3].xyz) *
	0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, //  pow (.        m
	0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // ax (dot (normali
	0x7a, 0x65, 0x28, 0x28, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // ze((view_directi
	0x6f, 0x6e, 0x5f, 0x33, 0x32, 0x20, 0x2b, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, // on_32 + light_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x32, 0x29, 0x29, 0x2c, 0x20, 0x76, 0x5f, // rection_42)), v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2c, 0x20, 0x75, 0x5f, 0x6d, // 0.0).      , u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x3b, // aterial[4].x)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, // .    };.  };.  v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x3b, 0x0a, 0x20, // ec4 tmpvar_44;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, //  tmpvar_44.w = 1
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x2e, // .0;.  tmpvar_44.
	0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, // xyz = ((tmpvar_3
	0x35, 0x20, 0x2b, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x34, 0x29, 0x20, // 5 + diffuse_34) 
	0x2b, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x29, 0x3b, 0x0a, // + specular_33);.
	0x20, 0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, //   lowp vec4 tmpv
	0x61, 0x72, 0x5f, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ar_45;.  tmpvar_
	0x34, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x34, 0x20, // 45 = (tmpvar_44 
	0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // * tmpvar_30);.  
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, // result_31 = tmpv
	0x61, 0x72, 0x5f, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, // ar_45;.  if (boo
	0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, // l(u_light[1].x))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, //  {.    result_31
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  = mix (u_light[
	0x32, 0x5d, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x2c, 0x20, 0x63, // 2], tmpvar_45, c
	0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, // lamp ((.      (u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x61, 0x62, // _light[1].z - ab
	0x73, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, // s(v_position_cam
	0x65, 0x72, 0x61, 0x2e, 0x7a, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x20, 0x0a, // era.z)).     / .
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, //       (u_light[1
	0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, // ].z - u_light[1]
	0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // .y).    ), 0.0, 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x62, 0x67, // 1.0));.  };.  bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x72, // fx_FragData0 = r
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x31, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,             // esult_31;.}...
};
static const uint8_t fs_terrain_spv[17429] =
{
	0x46, 0x53, 0x48, 0x0b, 0x1d, 0xb8, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x75, // FSH............u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x00, 0x50, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf4, 0x7f, // _light..P.......
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x00, 0x00, 0x00, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0xf4, 0x7f, 0x09, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x12, // ......u_terrain.
	0x00, 0x80, 0x01, 0x07, 0x00, 0x00, 0x00, 0xf4, 0x7f, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x30, 0x00, 0x02, 0x00, // ure_region_10...
	0x00, 0x00, 0x00, 0x02, 0x1a, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, // _region_20......
	0x02, 0x1a, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x30, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1a, 0x00, // gion_30.........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x34, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1a, 0x00, 0x50, 0x43, 0x00, // n_40.........PC.
	0x00, 0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x08, 0x00, 0x54, 0x09, 0x00, // ...#.........T..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, // .....GLSL.std.45
	0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // 0...............
	0x00, 0x0f, 0x00, 0x0b, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, // .............mai
	0x6e, 0x00, 0x00, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0xa0, 0x02, 0x00, // n...............
	0x00, 0xa3, 0x02, 0x00, 0x00, 0xa6, 0x02, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0x10, 0x00, 0x03, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, // ................
	0x00, 0xf4, 0x01, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, // .............mai
	0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x48, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, // n........H...s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, // exture_region_1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x4b, 0x00, 0x00, // ampler.......K..
	0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, // n_1Texture......
	0x00, 0x4f, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // .O...s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, // egion_2Sampler..
	0x00, 0x05, 0x00, 0x09, 0x00, 0x51, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // .....Q...s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, // re_region_2Textu
	0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x55, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, // re.......U...s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, // exture_region_3S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x57, 0x00, 0x00, // ampler.......W..
	0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x33, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, // n_3Texture......
	0x00, 0x5b, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // .[...s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, // egion_4Sampler..
	0x00, 0x05, 0x00, 0x09, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // .....]...s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x54, 0x65, 0x78, 0x74, 0x75, // re_region_4Textu
	0x72, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x89, 0x00, 0x00, 0x00, 0x55, 0x6e, 0x69, // re...........Uni
	0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, // formBlock.......
	0x00, 0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, // .........u_mater
	0x69, 0x61, 0x6c, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x89, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ial.............
	0x00, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x00, 0x06, 0x00, 0x06, 0x00, 0x89, 0x00, 0x00, // .u_light........
	0x00, 0x02, 0x00, 0x00, 0x00, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x00, 0x00, // .....u_terrain..
	0x00, 0x05, 0x00, 0x03, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, // ................
	0x00, 0x99, 0x02, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, // .....gl_FragCoor
	0x64, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x76, 0x5f, 0x6e, // d............v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x00, 0x05, 0x00, 0x06, // ormal_camera....
	0x00, 0xa0, 0x02, 0x00, 0x00, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // .....v_normal_wo
	0x72, 0x6c, 0x64, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x76, 0x5f, 0x70, // rld..........v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x00, 0x00, // osition_camera..
	0x00, 0x05, 0x00, 0x07, 0x00, 0xa6, 0x02, 0x00, 0x00, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // .........v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, // ion_world.......
	0x00, 0xb7, 0x02, 0x00, 0x00, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // .....bgfx_FragDa
	0x74, 0x61, 0x30, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x48, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // ta0..G...H..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x48, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...H...!..
	0x00, 0x12, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...K..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...K...!..
	0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...O..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...O...!..
	0x00, 0x13, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...Q..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x51, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...Q...!..
	0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...U..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x55, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...U...!..
	0x00, 0x14, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x57, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...W..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x57, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...W...!..
	0x00, 0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...[..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...[...!..
	0x00, 0x15, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, // .....G...]..."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, // .....G...]...!..
	0x00, 0x05, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // .....G..........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x86, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // .....G..........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, // .....G..........
	0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .....H..........
	0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x89, 0x00, 0x00, // .#.......H......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, // .....#...P...H..
	0x00, 0x89, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, // .........#......
	0x00, 0x47, 0x00, 0x03, 0x00, 0x89, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .G...........G..
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .....".......G..
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .....!.......G..
	0x00, 0x99, 0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .............G..
	0x00, 0x9d, 0x02, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .............G..
	0x00, 0xa0, 0x02, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .............G..
	0x00, 0xa3, 0x02, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .............G..
	0x00, 0xa6, 0x02, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, // .............G..
	0x00, 0xb7, 0x02, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .....!..........
	0x00, 0x1a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, // . ..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, // .............-..
	0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x47, 0x00, 0x00, // . ....... ...G..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x47, 0x00, 0x00, // .........;...G..
	0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, // .H....... ...J..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, // .........;...J..
	0x00, 0x4b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x47, 0x00, 0x00, // .K.......;...G..
	0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, // .O.......;...J..
	0x00, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x47, 0x00, 0x00, // .Q.......;...G..
	0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, // .U.......;...J..
	0x00, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x47, 0x00, 0x00, // .W.......;...G..
	0x00, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x4a, 0x00, 0x00, // .[.......;...J..
	0x00, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, // .].......+...-..
	0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, // .`.......+...-..
	0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x68, 0x00, 0x00, // .d...........h..
	0x00, 0x08, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // ............. ..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, // .....+..........
	0x00, 0x05, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x84, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // ................
	0x00, 0x83, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, // .....+..........
	0x00, 0x13, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x86, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // ................
	0x00, 0x85, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, // .....+..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x88, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // ................
	0x00, 0x87, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x05, 0x00, 0x89, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, // ................
	0x00, 0x86, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8a, 0x00, 0x00, // ......... ......
	0x00, 0x02, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x8a, 0x00, 0x00, // .........;......
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x8c, 0x00, 0x00, // ......... ......
	0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........+......
	0x00, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .........,......
	0x00, 0x96, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x95, 0x00, 0x00, // ................
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .+...-..........
	0x00, 0x14, 0x00, 0x02, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, // .........+...-..
	0x00, 0xa8, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, // .........+......
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0xab, 0x00, 0x00, // ......... ......
	0x00, 0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, // .........+......
	0x00, 0xb4, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, // .........+...-..
	0x00, 0xd3, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, // .........+...-..
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, // .........+...-..
	0x00, 0xf4, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........+......
	0x00, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, // ........?+......
	0x00, 0x18, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x82, 0x00, 0x00, // .........+......
	0x00, 0x21, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x48, 0x01, 0x00, // .!...........H..
	0x00, 0xa4, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........+......
	0x00, 0x58, 0x01, 0x00, 0x00, 0xac, 0xc5, 0x27, 0x37, 0x2c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .X.....'7,......
	0x00, 0x59, 0x01, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x58, 0x01, 0x00, // .Y...X...X...X..
	0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x00, 0x00, 0xc0, // .+..............
	0x3f, 0x20, 0x00, 0x04, 0x00, 0x98, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // ? ..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x98, 0x02, 0x00, 0x00, 0x99, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .;..............
	0x00, 0x20, 0x00, 0x04, 0x00, 0x9c, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, // . ..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x9c, 0x02, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .;..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x9c, 0x02, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .;..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x9c, 0x02, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .;..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0x9c, 0x02, 0x00, 0x00, 0xa6, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .;..............
	0x00, 0x20, 0x00, 0x04, 0x00, 0xb6, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, // . ..............
	0x00, 0x3b, 0x00, 0x04, 0x00, 0xb6, 0x02, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0x03, 0x00, 0x00, // .;..............
	0x00, 0x36, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .6..............
	0x00, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....I...H...=..
	0x00, 0x08, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....L...K...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....P...O...=..
	0x00, 0x08, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....R...Q...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....V...U...=..
	0x00, 0x08, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....X...W...=..
	0x00, 0x06, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .........[...=..
	0x00, 0x08, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....^...]...=..
	0x00, 0x13, 0x00, 0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0x9d, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xa4, 0x02, 0x00, 0x00, 0xa3, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa6, 0x02, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x21, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // .....!..........
	0x00, 0x64, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d...!...=......
	0x00, 0x22, 0x03, 0x00, 0x00, 0x21, 0x03, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // ."...!..........
	0x00, 0x23, 0x03, 0x00, 0x00, 0x22, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .#...".......Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x25, 0x03, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // .....%..........
	0x00, 0xbc, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x26, 0x03, 0x00, 0x00, 0x25, 0x03, 0x00, // .........&...%..
	0x00, 0x95, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x27, 0x03, 0x00, // .............'..
	0x00, 0x23, 0x03, 0x00, 0x00, 0x26, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x29, 0x03, 0x00, // .#...&.......)..
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x27, 0x03, 0x00, 0x00, 0x28, 0x03, 0x00, // .........'...(..
	0x00, 0x29, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x28, 0x03, 0x00, 0x00, 0xfc, 0x00, 0x01, // .).......(......
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x29, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .....)...A......
	0x00, 0x2a, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .*...........d..
	0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2b, 0x03, 0x00, // .....=.......+..
	0x00, 0x2a, 0x03, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x2c, 0x03, 0x00, // .*...........,..
	0x00, 0x2b, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .+.......Q......
	0x00, 0x2e, 0x03, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x05, // ................
	0x00, 0xa4, 0x00, 0x00, 0x00, 0x2f, 0x03, 0x00, 0x00, 0x2e, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, // ...../..........
	0x00, 0xa7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x2c, 0x03, 0x00, // .........0...,..
	0x00, 0x2f, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x32, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // ./.......2......
	0x00, 0xfa, 0x00, 0x04, 0x00, 0x30, 0x03, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0x32, 0x03, 0x00, // .....0...1...2..
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x31, 0x03, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, // .....1..........
	0x00, 0x32, 0x03, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x34, 0x03, 0x00, // .2...Q.......4..
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x36, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, // .6.......E......
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00, 0x36, 0x03, 0x00, // .Q.......7...6..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x38, 0x03, 0x00, // .............8..
	0x00, 0x0b, 0x01, 0x00, 0x00, 0x37, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .....7...A......
	0x00, 0x3a, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, // .:...........`..
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3b, 0x03, 0x00, // .....=.......;..
	0x00, 0x3a, 0x03, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x3c, 0x03, 0x00, // .:...........<..
	0x00, 0x34, 0x03, 0x00, 0x00, 0x3b, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xc0, 0x03, 0x00, // .4...;..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x3c, 0x03, 0x00, 0x00, 0x3d, 0x03, 0x00, // .........<...=..
	0x00, 0x41, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x41, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, // .A.......A...A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // .....C..........
	0x00, 0x60, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .`.......=......
	0x00, 0x44, 0x03, 0x00, 0x00, 0x43, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .D...C...A......
	0x00, 0x45, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // .E..............
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x03, 0x00, // .....=.......F..
	0x00, 0x45, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x47, 0x03, 0x00, // .E...........G..
	0x00, 0x44, 0x03, 0x00, 0x00, 0x46, 0x03, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // .D...F..........
	0x00, 0x48, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x47, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, // .H...4...G......
	0x00, 0xbf, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x48, 0x03, 0x00, // .............H..
	0x00, 0x49, 0x03, 0x00, 0x00, 0x59, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x59, 0x03, 0x00, // .I...Y.......Y..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......[......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....`...!...=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x5c, 0x03, 0x00, 0x00, 0x5b, 0x03, 0x00, 0x00, 0xb8, 0x00, 0x05, // .........[......
	0x00, 0xa4, 0x00, 0x00, 0x00, 0x5d, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x5c, 0x03, 0x00, // .....]...4......
	0x00, 0xf7, 0x00, 0x03, 0x00, 0xbe, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, // ................
	0x00, 0x5d, 0x03, 0x00, 0x00, 0x5e, 0x03, 0x00, 0x00, 0x62, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, // .]...^...b......
	0x00, 0x62, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x64, 0x03, 0x00, // .b...A.......d..
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, // .........`...!..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x65, 0x03, 0x00, 0x00, 0x64, 0x03, 0x00, // .=.......e...d..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x66, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......f......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, // .........!...=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x67, 0x03, 0x00, 0x00, 0x66, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, // .....g...f......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x68, 0x03, 0x00, 0x00, 0x65, 0x03, 0x00, 0x00, 0x67, 0x03, 0x00, // .....h...e...g..
	0x00, 0xb8, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x69, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, // .........i...4..
	0x00, 0x68, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xbd, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // .h..............
	0x00, 0xfa, 0x00, 0x04, 0x00, 0x69, 0x03, 0x00, 0x00, 0x6a, 0x03, 0x00, 0x00, 0x84, 0x03, 0x00, // .....i...j......
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x84, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x86, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, // .............`..
	0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x87, 0x03, 0x00, // .....=..........
	0x00, 0x86, 0x03, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x88, 0x03, 0x00, // ................
	0x00, 0x34, 0x03, 0x00, 0x00, 0x87, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xbc, 0x03, 0x00, // .4..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x88, 0x03, 0x00, 0x00, 0x89, 0x03, 0x00, // ................
	0x00, 0x96, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x96, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0x60, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .`.......=......
	0x00, 0x99, 0x03, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x9a, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9b, 0x03, 0x00, // .....=..........
	0x00, 0x9a, 0x03, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9c, 0x03, 0x00, // ................
	0x00, 0x99, 0x03, 0x00, 0x00, 0x9b, 0x03, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // ................
	0x00, 0x9d, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x9c, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, // .....4..........
	0x00, 0xbb, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x9d, 0x03, 0x00, // ................
	0x00, 0x9e, 0x03, 0x00, 0x00, 0xb7, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb7, 0x03, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x73, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......s......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x74, 0x07, 0x00, 0x00, 0x73, 0x07, 0x00, 0x00, 0xb7, 0x00, 0x05, // .....t...s......
	0x00, 0xa4, 0x00, 0x00, 0x00, 0x75, 0x07, 0x00, 0x00, 0x74, 0x07, 0x00, 0x00, 0x95, 0x00, 0x00, // .....u...t......
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x77, 0x07, 0x00, 0x00, 0xa7, 0x02, 0x00, // .O.......w......
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x78, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // .....x..........
	0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d.......=......
	0x00, 0x79, 0x07, 0x00, 0x00, 0x78, 0x07, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .y...x...P......
	0x00, 0x7a, 0x07, 0x00, 0x00, 0x79, 0x07, 0x00, 0x00, 0x79, 0x07, 0x00, 0x00, 0x88, 0x00, 0x05, // .z...y...y......
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x7b, 0x07, 0x00, 0x00, 0x77, 0x07, 0x00, 0x00, 0x7a, 0x07, 0x00, // .....{...w...z..
	0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x8c, 0x07, 0x00, 0x00, 0x5e, 0x00, 0x00, // .V...h.......^..
	0x00, 0x5c, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x8e, 0x07, 0x00, // .....W..........
	0x00, 0x8c, 0x07, 0x00, 0x00, 0x7b, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .....{...O......
	0x00, 0x7e, 0x07, 0x00, 0x00, 0x8e, 0x07, 0x00, 0x00, 0x8e, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // .~..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // .........A......
	0x00, 0x81, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x82, 0x07, 0x00, 0x00, 0x81, 0x07, 0x00, // .=..............
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x83, 0x07, 0x00, 0x00, 0x82, 0x07, 0x00, // .O..............
	0x00, 0x82, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x50, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x84, 0x07, 0x00, 0x00, 0x75, 0x07, 0x00, // .P...H.......u..
	0x00, 0x75, 0x07, 0x00, 0x00, 0x75, 0x07, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .u...u..........
	0x00, 0x85, 0x07, 0x00, 0x00, 0x84, 0x07, 0x00, 0x00, 0x7e, 0x07, 0x00, 0x00, 0x83, 0x07, 0x00, // .........~......
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xbb, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x9e, 0x03, 0x00, // ................
	0x00, 0xf7, 0x00, 0x03, 0x00, 0xb0, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, // ................
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x69, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x69, 0x06, 0x00, // .....i.......i..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x6c, 0x06, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......l......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0x6c, 0x06, 0x00, 0x00, 0xb7, 0x00, 0x05, // .....m...l......
	0x00, 0xa4, 0x00, 0x00, 0x00, 0x6e, 0x06, 0x00, 0x00, 0x6d, 0x06, 0x00, 0x00, 0x95, 0x00, 0x00, // .....n...m......
	0x00, 0xf7, 0x00, 0x03, 0x00, 0xaf, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, // ................
	0x00, 0x6e, 0x06, 0x00, 0x00, 0x6f, 0x06, 0x00, 0x00, 0xa9, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, // .n...o..........
	0x00, 0xa9, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xac, 0x06, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0xac, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xae, 0x06, 0x00, 0x00, 0xad, 0x06, 0x00, 0x00, 0xad, 0x06, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, // ................
	0x00, 0xb0, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x6f, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, // .........o......
	0x00, 0x13, 0x00, 0x00, 0x00, 0x71, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // .....q..........
	0x00, 0xa1, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x73, 0x06, 0x00, // .............s..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x71, 0x06, 0x00, 0x00, 0x59, 0x01, 0x00, // .....(...q...Y..
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, // .........t......
	0x00, 0x45, 0x00, 0x00, 0x00, 0x73, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .E...s...Q......
	0x00, 0x76, 0x06, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .v...t.......Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x74, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, // .....x...t......
	0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x76, 0x06, 0x00, // .........y...v..
	0x00, 0x78, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7b, 0x06, 0x00, // .x...Q.......{..
	0x00, 0x74, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .t..............
	0x00, 0x7c, 0x06, 0x00, 0x00, 0x79, 0x06, 0x00, 0x00, 0x7b, 0x06, 0x00, 0x00, 0x50, 0x00, 0x06, // .|...y...{...P..
	0x00, 0x13, 0x00, 0x00, 0x00, 0x7d, 0x06, 0x00, 0x00, 0x7c, 0x06, 0x00, 0x00, 0x7c, 0x06, 0x00, // .....}...|...|..
	0x00, 0x7c, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x7f, 0x06, 0x00, // .|..............
	0x00, 0x74, 0x06, 0x00, 0x00, 0x7d, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, // .t...}...O......
	0x00, 0x81, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x82, 0x06, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, // .........d......
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x82, 0x06, 0x00, // .=..............
	0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x83, 0x06, 0x00, // .P..............
	0x00, 0x83, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x85, 0x06, 0x00, // ................
	0x00, 0x81, 0x06, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, // .........V...h..
	0x00, 0xb8, 0x06, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, // .....R...P...W..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xba, 0x06, 0x00, 0x00, 0xb8, 0x06, 0x00, 0x00, 0x85, 0x06, 0x00, // ................
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x88, 0x06, 0x00, 0x00, 0xba, 0x06, 0x00, // .O..............
	0x00, 0xba, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x7f, 0x06, 0x00, // .Q..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x8b, 0x06, 0x00, // ................
	0x00, 0x88, 0x06, 0x00, 0x00, 0x8a, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, // .........O......
	0x00, 0x8d, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x8e, 0x06, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, // .........d......
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x06, 0x00, 0x00, 0x8e, 0x06, 0x00, // .=..............
	0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0x8f, 0x06, 0x00, // .P..............
	0x00, 0x8f, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x91, 0x06, 0x00, // ................
	0x00, 0x8d, 0x06, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, // .........V...h..
	0x00, 0xc1, 0x06, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, // .....R...P...W..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xc3, 0x06, 0x00, 0x00, 0xc1, 0x06, 0x00, 0x00, 0x91, 0x06, 0x00, // ................
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x94, 0x06, 0x00, 0x00, 0xc3, 0x06, 0x00, // .O..............
	0x00, 0xc3, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x96, 0x06, 0x00, 0x00, 0x7f, 0x06, 0x00, // .Q..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x97, 0x06, 0x00, // ................
	0x00, 0x94, 0x06, 0x00, 0x00, 0x96, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, // .........O......
	0x00, 0x99, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x9a, 0x06, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, // .........d......
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9b, 0x06, 0x00, 0x00, 0x9a, 0x06, 0x00, // .=..............
	0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9c, 0x06, 0x00, 0x00, 0x9b, 0x06, 0x00, // .P..............
	0x00, 0x9b, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9d, 0x06, 0x00, // ................
	0x00, 0x99, 0x06, 0x00, 0x00, 0x9c, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, // .........V...h..
	0x00, 0xca, 0x06, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, // .....R...P...W..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xcc, 0x06, 0x00, 0x00, 0xca, 0x06, 0x00, 0x00, 0x9d, 0x06, 0x00, // ................
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa0, 0x06, 0x00, 0x00, 0xcc, 0x06, 0x00, // .O..............
	0x00, 0xcc, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa2, 0x06, 0x00, 0x00, 0x7f, 0x06, 0x00, // .Q..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa3, 0x06, 0x00, // ................
	0x00, 0xa0, 0x06, 0x00, 0x00, 0xa2, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xa6, 0x06, 0x00, 0x00, 0x8b, 0x06, 0x00, 0x00, 0x97, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xa8, 0x06, 0x00, 0x00, 0xa6, 0x06, 0x00, 0x00, 0xa3, 0x06, 0x00, // ................
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xb0, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xaf, 0x06, 0x00, // ................
	0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb0, 0x06, 0x00, 0x00, 0xf5, 0x00, 0x07, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0x3a, 0x09, 0x00, 0x00, 0xae, 0x06, 0x00, 0x00, 0xa9, 0x06, 0x00, // .....:..........
	0x00, 0xa8, 0x06, 0x00, 0x00, 0x6f, 0x06, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x22, 0x07, 0x00, // .....o......."..
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xdb, 0x06, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xdb, 0x06, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0xde, 0x06, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, // ................
	0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xdf, 0x06, 0x00, // .....=..........
	0x00, 0xde, 0x06, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xe0, 0x06, 0x00, // ................
	0x00, 0xdf, 0x06, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x21, 0x07, 0x00, // .............!..
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xe0, 0x06, 0x00, 0x00, 0xe1, 0x06, 0x00, // ................
	0x00, 0x1b, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1b, 0x07, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x8c, 0x00, 0x00, 0x00, 0x1e, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0xd3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x1f, 0x07, 0x00, // .....=..........
	0x00, 0x1e, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x20, 0x07, 0x00, // .....O....... ..
	0x00, 0x1f, 0x07, 0x00, 0x00, 0x1f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x22, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, // ........."......
	0x00, 0xe1, 0x06, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe3, 0x06, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xe5, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, // .............(..
	0x00, 0xe3, 0x06, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .....Y..........
	0x00, 0xe6, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xe5, 0x06, 0x00, // .........E......
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe8, 0x06, 0x00, 0x00, 0xe6, 0x06, 0x00, // .Q..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xea, 0x06, 0x00, // .....Q..........
	0x00, 0xe6, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0xeb, 0x06, 0x00, 0x00, 0xe8, 0x06, 0x00, 0x00, 0xea, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xed, 0x06, 0x00, 0x00, 0xe6, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, 0x06, 0x00, 0x00, 0xeb, 0x06, 0x00, // ................
	0x00, 0xed, 0x06, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xef, 0x06, 0x00, // .....P..........
	0x00, 0xee, 0x06, 0x00, 0x00, 0xee, 0x06, 0x00, 0x00, 0xee, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0xe6, 0x06, 0x00, 0x00, 0xef, 0x06, 0x00, // ................
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf3, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, // .O..............
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0xf4, 0x06, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d.......=......
	0x00, 0xf5, 0x06, 0x00, 0x00, 0xf4, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .........P......
	0x00, 0xf6, 0x06, 0x00, 0x00, 0xf5, 0x06, 0x00, 0x00, 0xf5, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xf7, 0x06, 0x00, 0x00, 0xf3, 0x06, 0x00, 0x00, 0xf6, 0x06, 0x00, // ................
	0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x58, 0x00, 0x00, // .V...h...*...X..
	0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2c, 0x07, 0x00, // .V...W.......,..
	0x00, 0x2a, 0x07, 0x00, 0x00, 0xf7, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .*.......O......
	0x00, 0xfa, 0x06, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x2c, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // .....,...,......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0xfc, 0x06, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xfd, 0x06, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0xfc, 0x06, 0x00, // ................
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xff, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, // .O..............
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d.......=......
	0x00, 0x01, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .........P......
	0x00, 0x02, 0x07, 0x00, 0x00, 0x01, 0x07, 0x00, 0x00, 0x01, 0x07, 0x00, 0x00, 0x88, 0x00, 0x05, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x07, 0x00, 0x00, 0xff, 0x06, 0x00, 0x00, 0x02, 0x07, 0x00, // ................
	0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x33, 0x07, 0x00, 0x00, 0x58, 0x00, 0x00, // .V...h...3...X..
	0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x35, 0x07, 0x00, // .V...W.......5..
	0x00, 0x33, 0x07, 0x00, 0x00, 0x03, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .3.......O......
	0x00, 0x06, 0x07, 0x00, 0x00, 0x35, 0x07, 0x00, 0x00, 0x35, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // .....5...5......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0x08, 0x07, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x07, 0x00, 0x00, 0x06, 0x07, 0x00, 0x00, 0x08, 0x07, 0x00, // ................
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b, 0x07, 0x00, 0x00, 0xa7, 0x02, 0x00, // .O..............
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x0c, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d.......=......
	0x00, 0x0d, 0x07, 0x00, 0x00, 0x0c, 0x07, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .........P......
	0x00, 0x0e, 0x07, 0x00, 0x00, 0x0d, 0x07, 0x00, 0x00, 0x0d, 0x07, 0x00, 0x00, 0x88, 0x00, 0x05, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00, 0x0b, 0x07, 0x00, 0x00, 0x0e, 0x07, 0x00, // ................
	0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x3c, 0x07, 0x00, 0x00, 0x58, 0x00, 0x00, // .V...h...<...X..
	0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3e, 0x07, 0x00, // .V...W.......>..
	0x00, 0x3c, 0x07, 0x00, 0x00, 0x0f, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .<.......O......
	0x00, 0x12, 0x07, 0x00, 0x00, 0x3e, 0x07, 0x00, 0x00, 0x3e, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // .....>...>......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0x14, 0x07, 0x00, 0x00, 0xf1, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0x15, 0x07, 0x00, 0x00, 0x12, 0x07, 0x00, 0x00, 0x14, 0x07, 0x00, // ................
	0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x18, 0x07, 0x00, 0x00, 0xfd, 0x06, 0x00, // ................
	0x00, 0x09, 0x07, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1a, 0x07, 0x00, // ................
	0x00, 0x18, 0x07, 0x00, 0x00, 0x15, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x22, 0x07, 0x00, // ............."..
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x21, 0x07, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, // .....!..........
	0x00, 0x22, 0x07, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3b, 0x09, 0x00, // ."...........;..
	0x00, 0x20, 0x07, 0x00, 0x00, 0x1b, 0x07, 0x00, 0x00, 0x1a, 0x07, 0x00, 0x00, 0xe1, 0x06, 0x00, // . ..............
	0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x38, 0x03, 0x00, // .P...........8..
	0x00, 0x38, 0x03, 0x00, 0x00, 0x38, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .8...8..........
	0x00, 0x44, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x3a, 0x09, 0x00, // .D...........:..
	0x00, 0x3b, 0x09, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .;.......A......
	0x00, 0x4b, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, // .K..............
	0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x4c, 0x07, 0x00, // .....=.......L..
	0x00, 0x4b, 0x07, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x4d, 0x07, 0x00, // .K...........M..
	0x00, 0x4c, 0x07, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, // .L.......O......
	0x00, 0x4f, 0x07, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // .O..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x50, 0x07, 0x00, // .....A.......P..
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, // .........d......
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x51, 0x07, 0x00, 0x00, 0x50, 0x07, 0x00, // .=.......Q...P..
	0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x52, 0x07, 0x00, 0x00, 0x51, 0x07, 0x00, // .P.......R...Q..
	0x00, 0x51, 0x07, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x53, 0x07, 0x00, // .Q...........S..
	0x00, 0x4f, 0x07, 0x00, 0x00, 0x52, 0x07, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, // .O...R...V...h..
	0x00, 0x64, 0x07, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, // .d...^.......W..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0x66, 0x07, 0x00, 0x00, 0x64, 0x07, 0x00, 0x00, 0x53, 0x07, 0x00, // .....f...d...S..
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x56, 0x07, 0x00, 0x00, 0x66, 0x07, 0x00, // .O.......V...f..
	0x00, 0x66, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .f..............
	0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x59, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......Y......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, // .........=......
	0x00, 0x5a, 0x07, 0x00, 0x00, 0x59, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .Z...Y...O......
	0x00, 0x5b, 0x07, 0x00, 0x00, 0x5a, 0x07, 0x00, 0x00, 0x5a, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // .[...Z...Z......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, // .........P...H..
	0x00, 0x5c, 0x07, 0x00, 0x00, 0x4d, 0x07, 0x00, 0x00, 0x4d, 0x07, 0x00, 0x00, 0x4d, 0x07, 0x00, // .....M...M...M..
	0x00, 0xa9, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5d, 0x07, 0x00, 0x00, 0x5c, 0x07, 0x00, // .........]......
	0x00, 0x56, 0x07, 0x00, 0x00, 0x5b, 0x07, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .V...[...A......
	0x00, 0xae, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, // .............`..
	0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xaf, 0x03, 0x00, // .....=..........
	0x00, 0xae, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb0, 0x03, 0x00, // ................
	0x00, 0x34, 0x03, 0x00, 0x00, 0xaf, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .4.......A......
	0x00, 0xb1, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb2, 0x03, 0x00, // .....=..........
	0x00, 0xb1, 0x03, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xb3, 0x03, 0x00, // ................
	0x00, 0xb0, 0x03, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .........P......
	0x00, 0xb4, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0xb3, 0x03, 0x00, // ................
	0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x6c, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, // .........l......
	0x00, 0x2e, 0x00, 0x00, 0x00, 0x44, 0x07, 0x00, 0x00, 0x5d, 0x07, 0x00, 0x00, 0xb4, 0x03, 0x00, // .....D...]......
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xbb, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbb, 0x03, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x45, 0x09, 0x00, 0x00, 0x85, 0x07, 0x00, // .........E......
	0x00, 0xb7, 0x03, 0x00, 0x00, 0x6c, 0x07, 0x00, 0x00, 0x22, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, // .....l..."......
	0x00, 0xbc, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x89, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, // ................
	0x00, 0xc6, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xaa, 0x00, 0x00, // ................
	0x00, 0x7f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x7f, 0x05, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0xa3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........=......
	0x00, 0x83, 0x05, 0x00, 0x00, 0x82, 0x05, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // ................
	0x00, 0x84, 0x05, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // ................
	0x00, 0xc5, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x84, 0x05, 0x00, // ................
	0x00, 0x85, 0x05, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xbf, 0x05, 0x00, // ................
	0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, // .........=......
	0x00, 0xc3, 0x05, 0x00, 0x00, 0xc2, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .........O......
	0x00, 0xc4, 0x05, 0x00, 0x00, 0xc3, 0x05, 0x00, 0x00, 0xc3, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc6, 0x05, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x85, 0x05, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x87, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, // ................
	0x00, 0x0c, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x89, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x28, 0x00, 0x00, 0x00, 0x87, 0x05, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, // .(.......Y......
	0x00, 0x13, 0x00, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, // .............E..
	0x00, 0x89, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8c, 0x05, 0x00, // .....Q..........
	0x00, 0x8a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0x8e, 0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x8f, 0x05, 0x00, 0x00, 0x8c, 0x05, 0x00, 0x00, 0x8e, 0x05, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, // .Q..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x92, 0x05, 0x00, // ................
	0x00, 0x8f, 0x05, 0x00, 0x00, 0x91, 0x05, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .........P......
	0x00, 0x93, 0x05, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x92, 0x05, 0x00, 0x00, 0x92, 0x05, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x8a, 0x05, 0x00, // ................
	0x00, 0x93, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x97, 0x05, 0x00, // .....O..........
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x98, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x9a, 0x05, 0x00, 0x00, 0x99, 0x05, 0x00, 0x00, 0x99, 0x05, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x97, 0x05, 0x00, // ................
	0x00, 0x9a, 0x05, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0xce, 0x05, 0x00, // .....V...h......
	0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .R...P...W......
	0x00, 0xd0, 0x05, 0x00, 0x00, 0xce, 0x05, 0x00, 0x00, 0x9b, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0x9e, 0x05, 0x00, 0x00, 0xd0, 0x05, 0x00, 0x00, 0xd0, 0x05, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x05, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa1, 0x05, 0x00, 0x00, 0x9e, 0x05, 0x00, // ................
	0x00, 0xa0, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa3, 0x05, 0x00, // .....O..........
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xa4, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xa5, 0x05, 0x00, 0x00, 0xa4, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0xa5, 0x05, 0x00, 0x00, 0xa5, 0x05, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0xa3, 0x05, 0x00, // ................
	0x00, 0xa6, 0x05, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0xd7, 0x05, 0x00, // .....V...h......
	0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .R...P...W......
	0x00, 0xd9, 0x05, 0x00, 0x00, 0xd7, 0x05, 0x00, 0x00, 0xa7, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xd9, 0x05, 0x00, 0x00, 0xd9, 0x05, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xac, 0x05, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0xaa, 0x05, 0x00, // ................
	0x00, 0xac, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, // .....O..........
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xb0, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xb0, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xb2, 0x05, 0x00, 0x00, 0xb1, 0x05, 0x00, 0x00, 0xb1, 0x05, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0xaf, 0x05, 0x00, // ................
	0x00, 0xb2, 0x05, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0xe0, 0x05, 0x00, // .....V...h......
	0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .R...P...W......
	0x00, 0xe2, 0x05, 0x00, 0x00, 0xe0, 0x05, 0x00, 0x00, 0xb3, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xb6, 0x05, 0x00, 0x00, 0xe2, 0x05, 0x00, 0x00, 0xe2, 0x05, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0x95, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xb6, 0x05, 0x00, // ................
	0x00, 0xb8, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xbc, 0x05, 0x00, // ................
	0x00, 0xa1, 0x05, 0x00, 0x00, 0xad, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xbe, 0x05, 0x00, 0x00, 0xbc, 0x05, 0x00, 0x00, 0xb9, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, // ................
	0x00, 0xc6, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc5, 0x05, 0x00, 0x00, 0xff, 0x00, 0x01, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xc6, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x3c, 0x09, 0x00, 0x00, 0xc4, 0x05, 0x00, 0x00, 0xbf, 0x05, 0x00, 0x00, 0xbe, 0x05, 0x00, // .<..............
	0x00, 0x85, 0x05, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x38, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, // .........8......
	0x00, 0xfb, 0x00, 0x03, 0x00, 0xaa, 0x00, 0x00, 0x00, 0xf1, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xf1, 0x05, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xf4, 0x05, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf5, 0x05, 0x00, 0x00, 0xf4, 0x05, 0x00, // .=..............
	0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xf6, 0x05, 0x00, 0x00, 0xf5, 0x05, 0x00, // ................
	0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x37, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, // .........7......
	0x00, 0xfa, 0x00, 0x04, 0x00, 0xf6, 0x05, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x31, 0x06, 0x00, // .............1..
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x31, 0x06, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // .....1...A......
	0x00, 0x34, 0x06, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, // .4..............
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x35, 0x06, 0x00, 0x00, 0x34, 0x06, 0x00, // .=.......5...4..
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x36, 0x06, 0x00, 0x00, 0x35, 0x06, 0x00, // .O.......6...5..
	0x00, 0x35, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .5..............
	0x00, 0xf9, 0x00, 0x02, 0x00, 0x38, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xf7, 0x05, 0x00, // .....8..........
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf9, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xfb, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xf9, 0x05, 0x00, // .........(......
	0x00, 0x59, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xfc, 0x05, 0x00, // .Y..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00, 0x51, 0x00, 0x05, // .....E.......Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xfe, 0x05, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0xfc, 0x05, 0x00, // .Q..............
	0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, // ................
	0x00, 0xfe, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0x03, 0x06, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x03, 0x06, 0x00, // ................
	0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x04, 0x06, 0x00, // .P..............
	0x00, 0x04, 0x06, 0x00, 0x00, 0x04, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x07, 0x06, 0x00, 0x00, 0xfc, 0x05, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x07, // .............O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x0a, 0x06, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .............d..
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x06, 0x00, // .....=..........
	0x00, 0x0a, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, // .....P..........
	0x00, 0x0b, 0x06, 0x00, 0x00, 0x0b, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x0d, 0x06, 0x00, 0x00, 0x09, 0x06, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, // .............V..
	0x00, 0x68, 0x00, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, // .h...@...X...V..
	0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x42, 0x06, 0x00, 0x00, 0x40, 0x06, 0x00, // .W.......B...@..
	0x00, 0x0d, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x10, 0x06, 0x00, // .....O..........
	0x00, 0x42, 0x06, 0x00, 0x00, 0x42, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .B...B..........
	0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x12, 0x06, 0x00, // .....Q..........
	0x00, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x13, 0x06, 0x00, 0x00, 0x10, 0x06, 0x00, 0x00, 0x12, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x07, // .............O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x16, 0x06, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .............d..
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, 0x06, 0x00, // .....=..........
	0x00, 0x16, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x18, 0x06, 0x00, // .....P..........
	0x00, 0x17, 0x06, 0x00, 0x00, 0x17, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x19, 0x06, 0x00, 0x00, 0x15, 0x06, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, // .............V..
	0x00, 0x68, 0x00, 0x00, 0x00, 0x49, 0x06, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, // .h...I...X...V..
	0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x49, 0x06, 0x00, // .W.......K...I..
	0x00, 0x19, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1c, 0x06, 0x00, // .....O..........
	0x00, 0x4b, 0x06, 0x00, 0x00, 0x4b, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .K...K..........
	0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, 0x06, 0x00, // .....Q..........
	0x00, 0x07, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x1f, 0x06, 0x00, 0x00, 0x1c, 0x06, 0x00, 0x00, 0x1e, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x07, // .............O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, // .....!..........
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x22, 0x06, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // ."...........d..
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x23, 0x06, 0x00, // .....=.......#..
	0x00, 0x22, 0x06, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x24, 0x06, 0x00, // ."...P.......$..
	0x00, 0x23, 0x06, 0x00, 0x00, 0x23, 0x06, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .#...#..........
	0x00, 0x25, 0x06, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0x24, 0x06, 0x00, 0x00, 0x56, 0x00, 0x05, // .%...!...$...V..
	0x00, 0x68, 0x00, 0x00, 0x00, 0x52, 0x06, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, // .h...R...X...V..
	0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x52, 0x06, 0x00, // .W.......T...R..
	0x00, 0x25, 0x06, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x28, 0x06, 0x00, // .%...O.......(..
	0x00, 0x54, 0x06, 0x00, 0x00, 0x54, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .T...T..........
	0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2a, 0x06, 0x00, // .....Q.......*..
	0x00, 0x07, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x2b, 0x06, 0x00, 0x00, 0x28, 0x06, 0x00, 0x00, 0x2a, 0x06, 0x00, 0x00, 0x81, 0x00, 0x05, // .+...(...*......
	0x00, 0x13, 0x00, 0x00, 0x00, 0x2e, 0x06, 0x00, 0x00, 0x13, 0x06, 0x00, 0x00, 0x1f, 0x06, 0x00, // ................
	0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x2e, 0x06, 0x00, // .........0......
	0x00, 0x2b, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x38, 0x06, 0x00, 0x00, 0xf8, 0x00, 0x02, // .+.......8......
	0x00, 0x37, 0x06, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x38, 0x06, 0x00, // .7...........8..
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3d, 0x09, 0x00, 0x00, 0x36, 0x06, 0x00, // .........=...6..
	0x00, 0x31, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0xf7, 0x05, 0x00, 0x00, 0x85, 0x00, 0x05, // .1...0..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x38, 0x03, 0x00, 0x00, 0x19, 0x02, 0x00, // .........8......
	0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0x93, 0x03, 0x00, // .P..............
	0x00, 0x93, 0x03, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x5a, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x3c, 0x09, 0x00, // .Z...........<..
	0x00, 0x3d, 0x09, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbc, 0x03, 0x00, // .=..............
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xbc, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x44, 0x09, 0x00, 0x00, 0x45, 0x09, 0x00, 0x00, 0xbb, 0x03, 0x00, 0x00, 0x5a, 0x06, 0x00, // .D...E.......Z..
	0x00, 0x38, 0x06, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbd, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, // .8..............
	0x00, 0x6a, 0x03, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb4, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // .j..............
	0x00, 0xfb, 0x00, 0x03, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x6d, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, // .........m......
	0x00, 0x6d, 0x04, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x70, 0x04, 0x00, // .m...A.......p..
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x71, 0x04, 0x00, 0x00, 0x70, 0x04, 0x00, // .=.......q...p..
	0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x71, 0x04, 0x00, // .........r...q..
	0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xb3, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0xfa, 0x00, 0x04, 0x00, 0x72, 0x04, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0xad, 0x04, 0x00, // .....r...s......
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xad, 0x04, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // .........A......
	0x00, 0xb0, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xb1, 0x04, 0x00, 0x00, 0xb0, 0x04, 0x00, // .=..............
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xb2, 0x04, 0x00, 0x00, 0xb1, 0x04, 0x00, // .O..............
	0x00, 0xb1, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xb4, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x73, 0x04, 0x00, // .............s..
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x75, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, // .........u......
	0x00, 0x04, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x77, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x75, 0x04, 0x00, // .w.......(...u..
	0x00, 0x59, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x78, 0x04, 0x00, // .Y...........x..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, // .....E...w...Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // .....z...x......
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x78, 0x04, 0x00, // .Q.......|...x..
	0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, 0x04, 0x00, // .............}..
	0x00, 0x7a, 0x04, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .z...|...Q......
	0x00, 0x7f, 0x04, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // .....x..........
	0x00, 0x07, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x7f, 0x04, 0x00, // .........}......
	0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0x80, 0x04, 0x00, // .P..............
	0x00, 0x80, 0x04, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x83, 0x04, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x07, // .....x.......O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x85, 0x04, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x86, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .............d..
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x87, 0x04, 0x00, // .....=..........
	0x00, 0x86, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x88, 0x04, 0x00, // .....P..........
	0x00, 0x87, 0x04, 0x00, 0x00, 0x87, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x89, 0x04, 0x00, 0x00, 0x85, 0x04, 0x00, 0x00, 0x88, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, // .............V..
	0x00, 0x68, 0x00, 0x00, 0x00, 0xbc, 0x04, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, // .h.......R...P..
	0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0xbc, 0x04, 0x00, // .W..............
	0x00, 0x89, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x8c, 0x04, 0x00, // .....O..........
	0x00, 0xbe, 0x04, 0x00, 0x00, 0xbe, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x8e, 0x04, 0x00, // .....Q..........
	0x00, 0x83, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x8f, 0x04, 0x00, 0x00, 0x8c, 0x04, 0x00, 0x00, 0x8e, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x07, // .............O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x92, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .............d..
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x93, 0x04, 0x00, // .....=..........
	0x00, 0x92, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x94, 0x04, 0x00, // .....P..........
	0x00, 0x93, 0x04, 0x00, 0x00, 0x93, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0x95, 0x04, 0x00, 0x00, 0x91, 0x04, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, // .............V..
	0x00, 0x68, 0x00, 0x00, 0x00, 0xc5, 0x04, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, // .h.......R...P..
	0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0xc5, 0x04, 0x00, // .W..............
	0x00, 0x95, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x98, 0x04, 0x00, // .....O..........
	0x00, 0xc7, 0x04, 0x00, 0x00, 0xc7, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9a, 0x04, 0x00, // .....Q..........
	0x00, 0x83, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x9b, 0x04, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x07, // .............O..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x9e, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .............d..
	0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x9f, 0x04, 0x00, // .....=..........
	0x00, 0x9e, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xa0, 0x04, 0x00, // .....P..........
	0x00, 0x9f, 0x04, 0x00, 0x00, 0x9f, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // ................
	0x00, 0xa1, 0x04, 0x00, 0x00, 0x9d, 0x04, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, // .............V..
	0x00, 0x68, 0x00, 0x00, 0x00, 0xce, 0x04, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, // .h.......R...P..
	0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0xce, 0x04, 0x00, // .W..............
	0x00, 0xa1, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa4, 0x04, 0x00, // .....O..........
	0x00, 0xd0, 0x04, 0x00, 0x00, 0xd0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xa6, 0x04, 0x00, // .....Q..........
	0x00, 0x83, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xa7, 0x04, 0x00, 0x00, 0xa4, 0x04, 0x00, 0x00, 0xa6, 0x04, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xaa, 0x04, 0x00, 0x00, 0x8f, 0x04, 0x00, 0x00, 0x9b, 0x04, 0x00, // ................
	0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0xaa, 0x04, 0x00, // ................
	0x00, 0xa7, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xb4, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xb3, 0x04, 0x00, 0x00, 0xff, 0x00, 0x01, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb4, 0x04, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3e, 0x09, 0x00, 0x00, 0xb2, 0x04, 0x00, // .........>......
	0x00, 0xad, 0x04, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0x73, 0x04, 0x00, 0x00, 0xf7, 0x00, 0x03, // .........s......
	0x00, 0x26, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0xaa, 0x00, 0x00, // .&..............
	0x00, 0xdf, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xdf, 0x04, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0xd3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........=......
	0x00, 0xe3, 0x04, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // ................
	0x00, 0xe4, 0x04, 0x00, 0x00, 0xe3, 0x04, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // ................
	0x00, 0x25, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xe4, 0x04, 0x00, // .%..............
	0x00, 0xe5, 0x04, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1f, 0x05, 0x00, // ................
	0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A......."......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, // .........=......
	0x00, 0x23, 0x05, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .#..."...O......
	0x00, 0x24, 0x05, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x23, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // .$...#...#......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x26, 0x05, 0x00, // .............&..
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xe5, 0x04, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xe7, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa1, 0x02, 0x00, // ................
	0x00, 0x0c, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe9, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x28, 0x00, 0x00, 0x00, 0xe7, 0x04, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x06, // .(.......Y......
	0x00, 0x13, 0x00, 0x00, 0x00, 0xea, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, // .............E..
	0x00, 0xe9, 0x04, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xec, 0x04, 0x00, // .....Q..........
	0x00, 0xea, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0xee, 0x04, 0x00, 0x00, 0xea, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0xef, 0x04, 0x00, 0x00, 0xec, 0x04, 0x00, 0x00, 0xee, 0x04, 0x00, // ................
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0xea, 0x04, 0x00, // .Q..............
	0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xf2, 0x04, 0x00, // ................
	0x00, 0xef, 0x04, 0x00, 0x00, 0xf1, 0x04, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .........P......
	0x00, 0xf3, 0x04, 0x00, 0x00, 0xf2, 0x04, 0x00, 0x00, 0xf2, 0x04, 0x00, 0x00, 0xf2, 0x04, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0xea, 0x04, 0x00, // ................
	0x00, 0xf3, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf7, 0x04, 0x00, // .....O..........
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xf9, 0x04, 0x00, 0x00, 0xf8, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 0xf9, 0x04, 0x00, 0x00, 0xf9, 0x04, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0xf7, 0x04, 0x00, // ................
	0x00, 0xfa, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x2e, 0x05, 0x00, // .....V...h......
	0x00, 0x58, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .X...V...W......
	0x00, 0x30, 0x05, 0x00, 0x00, 0x2e, 0x05, 0x00, 0x00, 0xfb, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, // .0...........O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xfe, 0x04, 0x00, 0x00, 0x30, 0x05, 0x00, 0x00, 0x30, 0x05, 0x00, // .........0...0..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0xfe, 0x04, 0x00, // ................
	0x00, 0x00, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x05, 0x00, // .....O..........
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x05, 0x00, 0x00, 0x05, 0x05, 0x00, 0x00, 0x05, 0x05, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x03, 0x05, 0x00, // ................
	0x00, 0x06, 0x05, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x37, 0x05, 0x00, // .....V...h...7..
	0x00, 0x58, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .X...V...W......
	0x00, 0x39, 0x05, 0x00, 0x00, 0x37, 0x05, 0x00, 0x00, 0x07, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, // .9...7.......O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x00, 0x39, 0x05, 0x00, 0x00, 0x39, 0x05, 0x00, // .........9...9..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x05, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0x0a, 0x05, 0x00, // ................
	0x00, 0x0c, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0f, 0x05, 0x00, // .....O..........
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x10, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x12, 0x05, 0x00, 0x00, 0x11, 0x05, 0x00, 0x00, 0x11, 0x05, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x13, 0x05, 0x00, 0x00, 0x0f, 0x05, 0x00, // ................
	0x00, 0x12, 0x05, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x40, 0x05, 0x00, // .....V...h...@..
	0x00, 0x58, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .X...V...W......
	0x00, 0x42, 0x05, 0x00, 0x00, 0x40, 0x05, 0x00, 0x00, 0x13, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, // .B...@.......O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0x16, 0x05, 0x00, 0x00, 0x42, 0x05, 0x00, 0x00, 0x42, 0x05, 0x00, // .........B...B..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x18, 0x05, 0x00, 0x00, 0xf5, 0x04, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0x16, 0x05, 0x00, // ................
	0x00, 0x18, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1c, 0x05, 0x00, // ................
	0x00, 0x01, 0x05, 0x00, 0x00, 0x0d, 0x05, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x1e, 0x05, 0x00, 0x00, 0x1c, 0x05, 0x00, 0x00, 0x19, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, // ................
	0x00, 0x26, 0x05, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x25, 0x05, 0x00, 0x00, 0xff, 0x00, 0x01, // .&.......%......
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x26, 0x05, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // .....&..........
	0x00, 0x3f, 0x09, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x1f, 0x05, 0x00, 0x00, 0x1e, 0x05, 0x00, // .?...$..........
	0x00, 0xe5, 0x04, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x74, 0x03, 0x00, // .............t..
	0x00, 0x38, 0x03, 0x00, 0x00, 0x19, 0x02, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .8.......P......
	0x00, 0x75, 0x03, 0x00, 0x00, 0x74, 0x03, 0x00, 0x00, 0x74, 0x03, 0x00, 0x00, 0x74, 0x03, 0x00, // .u...t...t...t..
	0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x48, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, // .........H......
	0x00, 0x2e, 0x00, 0x00, 0x00, 0x3e, 0x09, 0x00, 0x00, 0x3f, 0x09, 0x00, 0x00, 0x75, 0x03, 0x00, // .....>...?...u..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......O......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x4f, 0x05, 0x00, 0x00, 0xb7, 0x00, 0x05, // .....P...O......
	0x00, 0xa4, 0x00, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x95, 0x00, 0x00, // .....Q...P......
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x53, 0x05, 0x00, 0x00, 0xa7, 0x02, 0x00, // .O.......S......
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x54, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // .....T..........
	0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d.......=......
	0x00, 0x55, 0x05, 0x00, 0x00, 0x54, 0x05, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .U...T...P......
	0x00, 0x56, 0x05, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0x55, 0x05, 0x00, 0x00, 0x88, 0x00, 0x05, // .V...U...U......
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0x53, 0x05, 0x00, 0x00, 0x56, 0x05, 0x00, // .....W...S...V..
	0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x68, 0x05, 0x00, 0x00, 0x52, 0x00, 0x00, // .V...h...h...R..
	0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x6a, 0x05, 0x00, // .P...W.......j..
	0x00, 0x68, 0x05, 0x00, 0x00, 0x57, 0x05, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .h...W...O......
	0x00, 0x5a, 0x05, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x6a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, // .Z...j...j......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // .........A......
	0x00, 0x5d, 0x05, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, // .]..............
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5e, 0x05, 0x00, 0x00, 0x5d, 0x05, 0x00, // .=.......^...]..
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5f, 0x05, 0x00, 0x00, 0x5e, 0x05, 0x00, // .O......._...^..
	0x00, 0x5e, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .^..............
	0x00, 0x50, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x51, 0x05, 0x00, // .P...H...`...Q..
	0x00, 0x51, 0x05, 0x00, 0x00, 0x51, 0x05, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // .Q...Q..........
	0x00, 0x61, 0x05, 0x00, 0x00, 0x60, 0x05, 0x00, 0x00, 0x5a, 0x05, 0x00, 0x00, 0x5f, 0x05, 0x00, // .a...`...Z..._..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......{......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....`...!...=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x7c, 0x03, 0x00, 0x00, 0x7b, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, // .....|...{......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x7d, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x7c, 0x03, 0x00, // .....}...4...|..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x7e, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......~......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, // .........!...=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x7f, 0x03, 0x00, 0x00, 0x7e, 0x03, 0x00, 0x00, 0x88, 0x00, 0x05, // .........~......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x7d, 0x03, 0x00, 0x00, 0x7f, 0x03, 0x00, // .........}......
	0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00, // .P..............
	0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x70, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x61, 0x05, 0x00, // .p...........a..
	0x00, 0x48, 0x05, 0x00, 0x00, 0x81, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbd, 0x03, 0x00, // .H..............
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xbd, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x43, 0x09, 0x00, 0x00, 0x44, 0x09, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 0x70, 0x05, 0x00, // .C...D.......p..
	0x00, 0x26, 0x05, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbe, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, // .&..............
	0x00, 0x5e, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x43, 0x04, 0x00, // .^...A.......C..
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x44, 0x04, 0x00, 0x00, 0x43, 0x04, 0x00, // .=.......D...C..
	0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x44, 0x04, 0x00, // .........E...D..
	0x00, 0x95, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x47, 0x04, 0x00, // .....O.......G..
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......H......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, // .....I...H...P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 0x49, 0x04, 0x00, 0x00, 0x49, 0x04, 0x00, // .....J...I...I..
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x47, 0x04, 0x00, // .........K...G..
	0x00, 0x4a, 0x04, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x5c, 0x04, 0x00, // .J...V...h......
	0x00, 0x52, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .R...P...W......
	0x00, 0x5e, 0x04, 0x00, 0x00, 0x5c, 0x04, 0x00, 0x00, 0x4b, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, // .^.......K...O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0x4e, 0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x5e, 0x04, 0x00, // .....N...^...^..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x8c, 0x00, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // .....Q..........
	0x00, 0xa3, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x52, 0x04, 0x00, // .....=.......R..
	0x00, 0x51, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x53, 0x04, 0x00, // .Q...O.......S..
	0x00, 0x52, 0x04, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // .R...R..........
	0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x54, 0x04, 0x00, // .....P...H...T..
	0x00, 0x45, 0x04, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0x45, 0x04, 0x00, 0x00, 0xa9, 0x00, 0x06, // .E...E...E......
	0x00, 0x13, 0x00, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00, 0x4e, 0x04, 0x00, // .....U...T...N..
	0x00, 0x53, 0x04, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbe, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, // .S..............
	0x00, 0xbe, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x42, 0x09, 0x00, // .............B..
	0x00, 0x43, 0x09, 0x00, 0x00, 0xbd, 0x03, 0x00, 0x00, 0x55, 0x04, 0x00, 0x00, 0x5e, 0x03, 0x00, // .C.......U...^..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xbf, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x49, 0x03, 0x00, // .............I..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xf9, 0x03, 0x00, 0x00, 0xb7, 0x00, 0x05, // ................
	0x00, 0xa4, 0x00, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, // ................
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0xa7, 0x02, 0x00, // .O..............
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d.......=......
	0x00, 0xff, 0x03, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .........P......
	0x00, 0x00, 0x04, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0x88, 0x00, 0x05, // ................
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0xfd, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, // ................
	0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0x4c, 0x00, 0x00, // .V...h.......L..
	0x00, 0x49, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x14, 0x04, 0x00, // .I...W..........
	0x00, 0x12, 0x04, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .........O......
	0x00, 0x04, 0x04, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x14, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // .........A......
	0x00, 0x07, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x07, 0x04, 0x00, // .=..............
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x08, 0x04, 0x00, // .O..............
	0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x50, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0xfb, 0x03, 0x00, // .P...H..........
	0x00, 0xfb, 0x03, 0x00, 0x00, 0xfb, 0x03, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x0b, 0x04, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x09, 0x04, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x1b, 0x04, 0x00, 0x00, 0xb7, 0x00, 0x05, // ................
	0x00, 0xa4, 0x00, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x1c, 0x04, 0x00, 0x00, 0x95, 0x00, 0x00, // ................
	0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0xa7, 0x02, 0x00, // .O..............
	0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ..... ..........
	0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .d.......=......
	0x00, 0x21, 0x04, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, // .!... ...P......
	0x00, 0x22, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0x88, 0x00, 0x05, // ."...!...!......
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x1f, 0x04, 0x00, 0x00, 0x22, 0x04, 0x00, // .....#......."..
	0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x52, 0x00, 0x00, // .V...h...4...R..
	0x00, 0x50, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x36, 0x04, 0x00, // .P...W.......6..
	0x00, 0x34, 0x04, 0x00, 0x00, 0x23, 0x04, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .4...#...O......
	0x00, 0x26, 0x04, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // .&...6...6......
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // .........A......
	0x00, 0x29, 0x04, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, // .)..............
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 0x29, 0x04, 0x00, // .=.......*...)..
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x2a, 0x04, 0x00, // .O.......+...*..
	0x00, 0x2a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // .*..............
	0x00, 0x50, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x1d, 0x04, 0x00, // .P...H...,......
	0x00, 0x1d, 0x04, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0xa9, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x2d, 0x04, 0x00, 0x00, 0x2c, 0x04, 0x00, 0x00, 0x26, 0x04, 0x00, 0x00, 0x2b, 0x04, 0x00, // .-...,...&...+..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x51, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......Q......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....`.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x52, 0x03, 0x00, 0x00, 0x51, 0x03, 0x00, 0x00, 0x83, 0x00, 0x05, // .....R...Q......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x53, 0x03, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x52, 0x03, 0x00, // .....S...4...R..
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A.......T......
	0x00, 0xd8, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .............=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x55, 0x03, 0x00, 0x00, 0x54, 0x03, 0x00, 0x00, 0x88, 0x00, 0x05, // .....U...T......
	0x00, 0x07, 0x00, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x53, 0x03, 0x00, 0x00, 0x55, 0x03, 0x00, // .....V...S...U..
	0x00, 0x50, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0x56, 0x03, 0x00, // .P.......W...V..
	0x00, 0x56, 0x03, 0x00, 0x00, 0x56, 0x03, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .V...V..........
	0x00, 0x3c, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x0b, 0x04, 0x00, // .<..............
	0x00, 0x2d, 0x04, 0x00, 0x00, 0x57, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xbf, 0x03, 0x00, // .-...W..........
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xbf, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x41, 0x09, 0x00, 0x00, 0x42, 0x09, 0x00, 0x00, 0xbe, 0x03, 0x00, 0x00, 0x3c, 0x04, 0x00, // .A...B.......<..
	0x00, 0x49, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, // .I..............
	0x00, 0x3d, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xd7, 0x03, 0x00, // .=...A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, // ................
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd8, 0x03, 0x00, 0x00, 0xd7, 0x03, 0x00, // .=..............
	0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xd9, 0x03, 0x00, 0x00, 0xd8, 0x03, 0x00, // ................
	0x00, 0x95, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xdb, 0x03, 0x00, // .....O..........
	0x00, 0xa7, 0x02, 0x00, 0x00, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xdc, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....d.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0xdd, 0x03, 0x00, 0x00, 0xdc, 0x03, 0x00, 0x00, 0x50, 0x00, 0x05, // .............P..
	0x00, 0x0b, 0x00, 0x00, 0x00, 0xde, 0x03, 0x00, 0x00, 0xdd, 0x03, 0x00, 0x00, 0xdd, 0x03, 0x00, // ................
	0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0xdb, 0x03, 0x00, // ................
	0x00, 0xde, 0x03, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x68, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, // .....V...h......
	0x00, 0x4c, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x57, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // .L...I...W......
	0x00, 0xf2, 0x03, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 0xf2, 0x03, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x8c, 0x00, 0x00, 0x00, 0xe5, 0x03, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // ................
	0x00, 0xa8, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe6, 0x03, 0x00, // .....=..........
	0x00, 0xe5, 0x03, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xe7, 0x03, 0x00, // .....O..........
	0x00, 0xe6, 0x03, 0x00, 0x00, 0xe6, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x48, 0x01, 0x00, 0x00, 0xe8, 0x03, 0x00, // .....P...H......
	0x00, 0xd9, 0x03, 0x00, 0x00, 0xd9, 0x03, 0x00, 0x00, 0xd9, 0x03, 0x00, 0x00, 0xa9, 0x00, 0x06, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xe9, 0x03, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xe2, 0x03, 0x00, // ................
	0x00, 0xe7, 0x03, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xc0, 0x03, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x40, 0x09, 0x00, // .............@..
	0x00, 0x41, 0x09, 0x00, 0x00, 0xbf, 0x03, 0x00, 0x00, 0xe9, 0x03, 0x00, 0x00, 0x3d, 0x03, 0x00, // .A...........=..
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0x40, 0x09, 0x00, // .Q...........@..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xc3, 0x03, 0x00, // .....Q..........
	0x00, 0x40, 0x09, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .@.......Q......
	0x00, 0xc4, 0x03, 0x00, 0x00, 0x40, 0x09, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, // .....@.......P..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0xc3, 0x03, 0x00, // ................
	0x00, 0xc4, 0x03, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // .........A......
	0x00, 0xa0, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .........`...d..
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xa1, 0x07, 0x00, 0x00, 0xa0, 0x07, 0x00, // .=..............
	0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa2, 0x07, 0x00, 0x00, 0xa1, 0x07, 0x00, // .O..............
	0x00, 0xa1, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xa3, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0x64, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, // .d...`...=......
	0x00, 0xa4, 0x07, 0x00, 0x00, 0xa3, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .........O......
	0x00, 0xa5, 0x07, 0x00, 0x00, 0xa4, 0x07, 0x00, 0x00, 0xa4, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xa6, 0x07, 0x00, 0x00, 0xa2, 0x07, 0x00, 0x00, 0xa5, 0x07, 0x00, 0x00, 0x7f, 0x00, 0x04, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xa8, 0x07, 0x00, 0x00, 0xa4, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x06, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xa9, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, // .............E..
	0x00, 0xa8, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xaa, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xaa, 0x07, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x48, 0x09, 0x00, // .............H..
	0x00, 0x96, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x52, 0x09, 0x00, 0x00, 0xff, 0x07, 0x00, // .........R......
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x47, 0x09, 0x00, 0x00, 0x96, 0x00, 0x00, // .........G......
	0x00, 0xc0, 0x03, 0x00, 0x00, 0x50, 0x09, 0x00, 0x00, 0xff, 0x07, 0x00, 0x00, 0xf5, 0x00, 0x07, // .....P..........
	0x00, 0x2d, 0x00, 0x00, 0x00, 0x46, 0x09, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, // .-...F...d......
	0x00, 0x01, 0x08, 0x00, 0x00, 0xff, 0x07, 0x00, 0x00, 0xb1, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // ................
	0x00, 0xad, 0x07, 0x00, 0x00, 0x46, 0x09, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xf6, 0x00, 0x04, // .....F..........
	0x00, 0x02, 0x08, 0x00, 0x00, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, // ................
	0x00, 0xad, 0x07, 0x00, 0x00, 0xae, 0x07, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xae, 0x07, 0x00, 0x00, 0x84, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xb0, 0x07, 0x00, // .........-......
	0x00, 0xa3, 0x00, 0x00, 0x00, 0x46, 0x09, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, // .....F.......-..
	0x00, 0xb1, 0x07, 0x00, 0x00, 0xb0, 0x07, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0xb2, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, // .............`..
	0x00, 0xb1, 0x07, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .........=......
	0x00, 0xb3, 0x07, 0x00, 0x00, 0xb2, 0x07, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // ................
	0x00, 0xb4, 0x07, 0x00, 0x00, 0xb3, 0x07, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // ................
	0x00, 0xfe, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xb4, 0x07, 0x00, // ................
	0x00, 0xb5, 0x07, 0x00, 0x00, 0xfe, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xb5, 0x07, 0x00, // ................
	0x00, 0x84, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xb7, 0x07, 0x00, 0x00, 0xa3, 0x00, 0x00, // .....-..........
	0x00, 0x46, 0x09, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xb8, 0x07, 0x00, // .F.......-......
	0x00, 0xb7, 0x07, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0xb9, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xb8, 0x07, 0x00, // .........`......
	0x00, 0xb4, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xba, 0x07, 0x00, // .....=..........
	0x00, 0xb9, 0x07, 0x00, 0x00, 0xb4, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xbb, 0x07, 0x00, // ................
	0x00, 0xba, 0x07, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xce, 0x07, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0xbb, 0x07, 0x00, 0x00, 0xbc, 0x07, 0x00, // ................
	0x00, 0xc4, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xc4, 0x07, 0x00, 0x00, 0x84, 0x00, 0x05, // ................
	0x00, 0x2d, 0x00, 0x00, 0x00, 0xc6, 0x07, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x46, 0x09, 0x00, // .-...........F..
	0x00, 0x80, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xc7, 0x07, 0x00, 0x00, 0xc6, 0x07, 0x00, // .....-..........
	0x00, 0xa3, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xc8, 0x07, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xc7, 0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....`.......=..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xc9, 0x07, 0x00, 0x00, 0xc8, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xca, 0x07, 0x00, 0x00, 0xc9, 0x07, 0x00, 0x00, 0xc9, 0x07, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xcc, 0x07, 0x00, 0x00, 0xca, 0x07, 0x00, 0x00, 0xa4, 0x02, 0x00, // ................
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0xcd, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x45, 0x00, 0x00, 0x00, 0xcc, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xce, 0x07, 0x00, // .E..............
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xbc, 0x07, 0x00, 0x00, 0x84, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, // .............-..
	0x00, 0xbe, 0x07, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x46, 0x09, 0x00, 0x00, 0x80, 0x00, 0x05, // .........F......
	0x00, 0x2d, 0x00, 0x00, 0x00, 0xbf, 0x07, 0x00, 0x00, 0xbe, 0x07, 0x00, 0x00, 0xa3, 0x00, 0x00, // .-..............
	0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0x60, 0x00, 0x00, 0x00, 0xbf, 0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, // .`.......=......
	0x00, 0xc1, 0x07, 0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, // .........O......
	0x00, 0xc2, 0x07, 0x00, 0x00, 0xc1, 0x07, 0x00, 0x00, 0xc1, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xc3, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xc2, 0x07, 0x00, // .........E......
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xce, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xce, 0x07, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x4a, 0x09, 0x00, 0x00, 0xcd, 0x07, 0x00, // .........J......
	0x00, 0xc4, 0x07, 0x00, 0x00, 0xc3, 0x07, 0x00, 0x00, 0xbc, 0x07, 0x00, 0x00, 0x94, 0x00, 0x05, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0xd1, 0x07, 0x00, 0x00, 0x4a, 0x09, 0x00, 0x00, 0x9e, 0x02, 0x00, // .........J......
	0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xd2, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x28, 0x00, 0x00, 0x00, 0xd1, 0x07, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x84, 0x00, 0x05, // .(..............
	0x00, 0x2d, 0x00, 0x00, 0x00, 0xd4, 0x07, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x46, 0x09, 0x00, // .-...........F..
	0x00, 0x80, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xd5, 0x07, 0x00, 0x00, 0xd4, 0x07, 0x00, // .....-..........
	0x00, 0xd3, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xd6, 0x07, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xd5, 0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....`.......=..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xd7, 0x07, 0x00, 0x00, 0xd6, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xd8, 0x07, 0x00, 0x00, 0xd7, 0x07, 0x00, 0x00, 0xd7, 0x07, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x8c, 0x00, 0x00, 0x00, 0xd9, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .............d..
	0x00, 0xd8, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xda, 0x07, 0x00, // .....=..........
	0x00, 0xd9, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xdb, 0x07, 0x00, // .....O..........
	0x00, 0xda, 0x07, 0x00, 0x00, 0xda, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xdc, 0x07, 0x00, // ................
	0x00, 0xd8, 0x07, 0x00, 0x00, 0xdb, 0x07, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xde, 0x07, 0x00, 0x00, 0xdc, 0x07, 0x00, 0x00, 0xd2, 0x07, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x47, 0x09, 0x00, 0x00, 0xde, 0x07, 0x00, // .........G......
	0x00, 0xba, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0xe2, 0x07, 0x00, 0x00, 0xd2, 0x07, 0x00, // ................
	0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0xfd, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, // ................
	0x00, 0xfa, 0x00, 0x04, 0x00, 0xe2, 0x07, 0x00, 0x00, 0xe3, 0x07, 0x00, 0x00, 0xfd, 0x07, 0x00, // ................
	0x00, 0xf8, 0x00, 0x02, 0x00, 0xe3, 0x07, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xe6, 0x07, 0x00, 0x00, 0xa9, 0x07, 0x00, 0x00, 0x4a, 0x09, 0x00, 0x00, 0x0c, 0x00, 0x06, // .........J......
	0x00, 0x13, 0x00, 0x00, 0x00, 0xe7, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, // .............E..
	0x00, 0xe6, 0x07, 0x00, 0x00, 0x94, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0xea, 0x07, 0x00, // ................
	0x00, 0xe7, 0x07, 0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0xeb, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0xea, 0x07, 0x00, // .........(......
	0x00, 0x95, 0x00, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0xec, 0x07, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, // .....d..........
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0xed, 0x07, 0x00, 0x00, 0xec, 0x07, 0x00, // .=..............
	0x00, 0x0c, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0xee, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x1a, 0x00, 0x00, 0x00, 0xeb, 0x07, 0x00, 0x00, 0xed, 0x07, 0x00, 0x00, 0x84, 0x00, 0x05, // ................
	0x00, 0x2d, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x46, 0x09, 0x00, // .-...........F..
	0x00, 0x80, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xf1, 0x07, 0x00, 0x00, 0xf0, 0x07, 0x00, // .....-..........
	0x00, 0xf4, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, 0x00, 0xf2, 0x07, 0x00, // .....A..........
	0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xf1, 0x07, 0x00, 0x00, 0x3d, 0x00, 0x04, // .....`.......=..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0xf3, 0x07, 0x00, 0x00, 0xf2, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, // .............O..
	0x00, 0x13, 0x00, 0x00, 0x00, 0xf4, 0x07, 0x00, 0x00, 0xf3, 0x07, 0x00, 0x00, 0xf3, 0x07, 0x00, // ................
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, // .............A..
	0x00, 0x8c, 0x00, 0x00, 0x00, 0xf5, 0x07, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, // .............d..
	0x00, 0xa8, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf6, 0x07, 0x00, // .....=..........
	0x00, 0xf5, 0x07, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf7, 0x07, 0x00, // .....O..........
	0x00, 0xf6, 0x07, 0x00, 0x00, 0xf6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x02, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0xf8, 0x07, 0x00, // ................
	0x00, 0xf4, 0x07, 0x00, 0x00, 0xf7, 0x07, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0xfa, 0x07, 0x00, 0x00, 0xf8, 0x07, 0x00, 0x00, 0xee, 0x07, 0x00, 0x00, 0x81, 0x00, 0x05, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00, 0x48, 0x09, 0x00, 0x00, 0xfa, 0x07, 0x00, // .........H......
	0x00, 0xf9, 0x00, 0x02, 0x00, 0xfd, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfd, 0x07, 0x00, // ................
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, 0x00, 0x53, 0x09, 0x00, 0x00, 0x48, 0x09, 0x00, // .........S...H..
	0x00, 0xce, 0x07, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00, 0xe3, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, // ................
	0x00, 0xfe, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0xfe, 0x07, 0x00, 0x00, 0xf5, 0x00, 0x07, // ................
	0x00, 0x13, 0x00, 0x00, 0x00, 0x52, 0x09, 0x00, 0x00, 0x48, 0x09, 0x00, 0x00, 0xae, 0x07, 0x00, // .....R...H......
	0x00, 0x53, 0x09, 0x00, 0x00, 0xfd, 0x07, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x13, 0x00, 0x00, // .S..............
	0x00, 0x50, 0x09, 0x00, 0x00, 0x47, 0x09, 0x00, 0x00, 0xae, 0x07, 0x00, 0x00, 0xe0, 0x07, 0x00, // .P...G..........
	0x00, 0xfd, 0x07, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xff, 0x07, 0x00, 0x00, 0xf8, 0x00, 0x02, // ................
	0x00, 0xff, 0x07, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x01, 0x08, 0x00, // .........-......
	0x00, 0x46, 0x09, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0xaa, 0x07, 0x00, // .F...`..........
	0x00, 0xf8, 0x00, 0x02, 0x00, 0x02, 0x08, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, // ................
	0x00, 0x05, 0x08, 0x00, 0x00, 0xa6, 0x07, 0x00, 0x00, 0x47, 0x09, 0x00, 0x00, 0x81, 0x00, 0x05, // .........G......
	0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x05, 0x08, 0x00, 0x00, 0x48, 0x09, 0x00, // .............H..
	0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x08, 0x00, 0x00, 0x07, 0x08, 0x00, // .Q..............
	0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x08, 0x00, // .....Q..........
	0x00, 0x07, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // .........Q......
	0x00, 0x0b, 0x08, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, // .............P..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0x0c, 0x08, 0x00, 0x00, 0x09, 0x08, 0x00, 0x00, 0x0a, 0x08, 0x00, // ................
	0x00, 0x0b, 0x08, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x0d, 0x00, 0x00, // ................
	0x00, 0x0e, 0x08, 0x00, 0x00, 0x0c, 0x08, 0x00, 0x00, 0xc5, 0x03, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, // .............`..
	0x00, 0x60, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .`.......=......
	0x00, 0x10, 0x08, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00, 0xb7, 0x00, 0x05, 0x00, 0xa4, 0x00, 0x00, // ................
	0x00, 0x11, 0x08, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, // ................
	0x00, 0x26, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x11, 0x08, 0x00, // .&..............
	0x00, 0x12, 0x08, 0x00, 0x00, 0x26, 0x08, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x12, 0x08, 0x00, // .....&..........
	0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, 0x00, 0x13, 0x08, 0x00, 0x00, 0x8b, 0x00, 0x00, // .A..............
	0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, // .`...`.......=..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x13, 0x08, 0x00, 0x00, 0x51, 0x00, 0x05, // .............Q..
	0x00, 0x07, 0x00, 0x00, 0x00, 0x16, 0x08, 0x00, 0x00, 0xa4, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, // ................
	0x00, 0x0c, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x17, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, // ................
	0x00, 0x04, 0x00, 0x00, 0x00, 0x16, 0x08, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x18, 0x08, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x17, 0x08, 0x00, 0x00, 0x41, 0x00, 0x07, // .............A..
	0x00, 0xab, 0x00, 0x00, 0x00, 0x19, 0x08, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, // .............`..
	0x00, 0x60, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, // .`.......=......
	0x00, 0x1a, 0x08, 0x00, 0x00, 0x19, 0x08, 0x00, 0x00, 0x41, 0x00, 0x07, 0x00, 0xab, 0x00, 0x00, // .........A......
	0x00, 0x1b, 0x08, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, // .........`...`..
	0x00, 0x21, 0x01, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x00, // .!...=..........
	0x00, 0x1b, 0x08, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x08, 0x00, // ................
	0x00, 0x1a, 0x08, 0x00, 0x00, 0x1c, 0x08, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, // ................
	0x00, 0x1e, 0x08, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x1d, 0x08, 0x00, 0x00, 0x0c, 0x00, 0x08, // ................
	0x00, 0x07, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, // ..... .......+..
	0x00, 0x1e, 0x08, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x50, 0x00, 0x07, // .............P..
	0x00, 0x0d, 0x00, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x20, 0x08, 0x00, // .....!... ... ..
	0x00, 0x20, 0x08, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x8c, 0x00, 0x00, // . ... ...A......
	0x00, 0x22, 0x08, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, // .".......`......
	0x00, 0x3d, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x23, 0x08, 0x00, 0x00, 0x22, 0x08, 0x00, // .=.......#..."..
	0x00, 0x0c, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2d, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, // .........-......
	0x00, 0x2e, 0x00, 0x00, 0x00, 0x23, 0x08, 0x00, 0x00, 0x0e, 0x08, 0x00, 0x00, 0x21, 0x08, 0x00, // .....#.......!..
	0x00, 0xf9, 0x00, 0x02, 0x00, 0x26, 0x08, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x26, 0x08, 0x00, // .....&.......&..
	0x00, 0xf5, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x49, 0x09, 0x00, 0x00, 0x0e, 0x08, 0x00, // .........I......
	0x00, 0x02, 0x08, 0x00, 0x00, 0x2d, 0x08, 0x00, 0x00, 0x12, 0x08, 0x00, 0x00, 0x3e, 0x00, 0x03, // .....-.......>..
	0x00, 0xb7, 0x02, 0x00, 0x00, 0x49, 0x09, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, // .....I.......8..
	0x00, 0x00, 0x00, 0xf0, 0x01,                                                                   // .....
};
static const uint8_t fs_terrain_dx9[14052] =
{
	0x46, 0x53, 0x48, 0x0b, 0x1d, 0xb8, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x75, // FSH............u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x13, 0x50, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, // _light..P.......
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x05, 0x00, 0x00, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_1Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x54, 0x65, 0x78, 0x74, // ure_region_1Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_2Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_3Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x54, 0x65, 0x78, 0x74, // ure_region_3Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x34, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_4Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x12, // ......u_terrain.
	0x06, 0x80, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x10, 0x00, 0x00, 0x00, // ure_region_1....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _region_2.......
	0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // gion_3..........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x34, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x34, 0x00, // n_4...........4.
	0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, // .#include <metal
	0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // _stdlib>.#includ
	0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, // e <simd/simd.h>.
	0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, // .using namespace
	0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, //  metal;..struct 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _Global.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // oat4 u_material[
	0x35, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // 5];.    float4 u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x39, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _light[19];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // float4 u_terrain
	0x5b, 0x36, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // [6];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, // xlatMtlMain_out.
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // {.    float4 bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, // x_FragData0 [[co
	0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // lor(0)]];.};..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ruct xlatMtlMain
	0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _in.{.    float3
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, //  v_normal_camera
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, // ;.    float3 v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, // ormal_world [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // er(locn1)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float3 v_positi
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // on_camera [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // (locn2)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // loat3 v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // _world [[user(lo
	0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn3)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _mtl_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // er(0)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 2d<float> s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x20, 0x5b, 0x5b, 0x74, // ure_region_1 [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(0)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(1)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // > s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, // on_3 [[texture(2
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // loat> s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // region_4 [[textu
	0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // re(3)]], sampler
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // n_1Sampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(0)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // er s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // ion_2Sampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ampler(1)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // pler s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // egion_3Sampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(2)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_4Sampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(3)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x30, 0x20, // .    float _770 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = 1.0 - normaliz
	0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // e(in.v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // rld).y;.    floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // t3 _2308;.    if
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // world.y < _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[1].x)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // .    {.        _
	0x32, 0x33, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, // 2308 = select(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // tl_u.u_terrain[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ].xyz, s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_1.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_1Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // .x))).xyz, bool3
	0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, // ((isunordered(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // tl_u.u_terrain[2
	0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].w, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, // l_u.u_terrain[2]
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .w != 0.0)));.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //   }.    else.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  {.        float
	0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _2309;.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  if (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, // on_world.y < (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // ].x + _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x0a, 0x20, 0x20, // errain[1].w)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, //     _2309 = mix(
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // terrain[2].xyz, 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _1.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, // ure_region_1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, // yz, bool3((isuno
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // rdered(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, // terrain[2].w, 0.
	0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // 0) || _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, // errain[2].w != 0
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, // .0))), select(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // tl_u.u_terrain[3
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ].xyz, s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_2.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_2Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // .x))).xyz, bool3
	0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, // ((isunordered(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // tl_u.u_terrain[3
	0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].w, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, // l_u.u_terrain[3]
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, // .w != 0.0))), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // oat3((in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // ion_world.y - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x78, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // ].x) / _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, // terrain[1].w));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _2310;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //        if (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  < _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ain[1].y).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x20, 0x3d, 0x20, //         _2310 = 
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // terrain[3].xyz, 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _2.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, // ure_region_2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, // yz, bool3((isuno
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // rdered(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, // terrain[3].w, 0.
	0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // 0) || _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, // errain[3].w != 0
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)));.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x31, //     float3 _2311
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   if (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, // ion_world.y < (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x31, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1].y + _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x0a, 0x20, // terrain[1].w)). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, //      float3 _230
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        do.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, //         if ((isu
	0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // nordered(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, // u_terrain[3].w, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 0.0) || _mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, // _terrain[3].w !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0)).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // at3 _1087 = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // alize(fast::max(
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // abs(in.v_normal_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, // world), float3(9
	0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, // .999999747378751
	0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, // 6355514526367188
	0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e-06)));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x39, //      float3 _109
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 8 = _1087 / floa
	0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, // t3((_1087.x + _1
	0x30, 0x38, 0x37, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x7a, // 087.y) + _1087.z
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 2306 = ((s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.yz / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0].x))).xyz * _1
	0x30, 0x39, 0x38, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 098.x) + (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, // ure_region_2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ple(s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // gion_2Sampler, (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // rld.xz / float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // [0].x))).xyz * _
	0x31, 0x30, 0x39, 0x38, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // 1098.y)) + (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, // xture_region_2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ample(s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // region_2Sampler,
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // world.xy / float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // 2(_mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // in[0].x))).xyz *
	0x20, 0x5f, 0x31, 0x30, 0x39, 0x38, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1098.z);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x36, //            _2306
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  = _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ain[3].xyz;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //              } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, 0x3b, 0x0a, 0x20, //  float3 _2307;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    do.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, //     if ((isunord
	0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ered(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // rrain[4].w, 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, //  || _mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // rain[4].w != 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // _1201 = normaliz
	0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, // e(fast::max(abs(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // in.v_normal_worl
	0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, // d), float3(9.999
	0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, // 9997473787516355
	0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, // 514526367188e-06
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )));.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, 0x20, 0x3d, 0x20, //  float3 _1212 = 
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, // _1201 / float3((
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, // _1201.x + _1201.
	0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, // y) + _1201.z);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, //            _2307
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, //  = ((s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // egion_3.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 3Sampler, (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // z / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // u.u_terrain[0].x
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, 0x2e, // ))).xyz * _1212.
	0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // x) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_3.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _3Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xz / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, // x))).xyz * _1212
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // .y)) + (s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // e_region_3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // e(s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, // on_3Sampler, (in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, // d.xy / float2(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // tl_u.u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, // ].x))).xyz * _12
	0x31, 0x32, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 12.z);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x5f, //        _2307 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4].xyz;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, //          } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (false);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, //              _23
	0x31, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, // 11 = mix(select(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // [3].xyz, s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.xz / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, // 0].x))).xyz, boo
	0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, // l3((isunordered(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, // [3].w, 0.0) || _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, // 3].w != 0.0))), 
	0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x36, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, // mix(_2306, _2307
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, 0x29, 0x29, 0x2c, // , float3(_770)),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, //  float3((in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, // sition_world.y -
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // n[1].y) / _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, // .u_terrain[1].w)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, // float3 _2312;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   if (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, // ion_world.y < _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].z).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x3b, //    float3 _2304;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, //          do.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, //   if ((isunorder
	0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // ed(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, // ain[3].w, 0.0) |
	0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // | _mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // in[3].w != 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // loat3 _1361 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // rmalize(fast::ma
	0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // x(abs(in.v_norma
	0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // l_world), float3
	0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, // (9.9999997473787
	0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, // 5163555145263671
	0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 88e-06)));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, // 3 _1372 = _1361 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x2e, // / float3((_1361.
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, // x + _1361.y) + _
	0x31, 0x33, 0x36, 0x31, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1361.z);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x20, 0x3d, //          _2304 =
	0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, //  ((s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_2.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, // exture_region_2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, // sition_world.yz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x2e, 0x78, 0x29, // ).xyz * _1372.x)
	0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, //  + (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // gion_2.sample(s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, // Sampler, (in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, // osition_world.xz
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  / float2(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[0].x)
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x2e, 0x79, // )).xyz * _1372.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // )) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xy / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, // x))).xyz * _1372
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x20, 0x3d, //          _2304 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[3].xyz;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, //        } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // alse);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _2305;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, //  ((isunordered(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, // 4].w, 0.0) || _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, // tl_u.u_terrain[4
	0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // ].w != 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 3 _1475 = normal
	0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, // ize(fast::max(ab
	0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // s(in.v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, // rld), float3(9.9
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, // 9999974737875163
	0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, // 55514526367188e-
	0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 06)));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x34, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x20, 0x2f, 0x20, 0x66, 0x6c, // 486 = _1475 / fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x2e, 0x78, 0x20, 0x2b, 0x20, // oat3((_1475.x + 
	0x5f, 0x31, 0x34, 0x37, 0x35, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, // _1475.y) + _1475
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, //      _2305 = ((s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 3.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.yz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, // z * _1486.x) + (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _3.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, // ure_region_3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, // yz * _1486.y)) +
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, // ition_world.xy /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x7a, 0x29, 0x3b, // .xyz * _1486.z);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, //      _2305 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, // l_u.u_terrain[4]
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xyz;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, //            _2312
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x2c, 0x20, 0x5f, 0x32, //  = mix(_2304, _2
	0x33, 0x30, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, // 305, float3(_770
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //               el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x3b, 0x0a, 0x20, //  float3 _2313;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //        if (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, //  < (_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // rain[1].z + _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, // _u.u_terrain[1].
	0x77, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x32, 0x33, 0x30, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2302;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     do.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, //      if ((isunor
	0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // dered(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, // errain[3].w, 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ) || _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // rrain[3].w != 0.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  _1595 = normali
	0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, // ze(fast::max(abs
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, // (in.v_normal_wor
	0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, // ld), float3(9.99
	0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, // 9999747378751635
	0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, // 5514526367188e-0
	0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6)));.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x20, 0x2f, //  _1606 = _1595 /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x2e, 0x78, //  float3((_1595.x
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, //  + _1595.y) + _1
	0x35, 0x39, 0x35, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 595.z);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, //             _230
	0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // 2 = ((s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // yz / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, // x))).xyz * _1606
	0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .x) + (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_2.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_2Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, // .x))).xyz * _160
	0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 6.y)) + (s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.xy / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0].x))).xyz * _1
	0x36, 0x30, 0x36, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 606.z);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x32, 0x33, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // _2302 = _mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // _terrain[3].xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, //           } whil
	0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e(false);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, //       float3 _23
	0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 03;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // do.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, //  if ((isunordere
	0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // d(_mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, // in[4].w, 0.0) ||
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, // n[4].w != 0.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x30, 0x39, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, // 09 = normalize(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, // ast::max(abs(in.
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, // v_normal_world),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, //  float3(9.999999
	0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, // 7473787516355514
	0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, // 526367188e-06)))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x32, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // 20 = _1709 / flo
	0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // at3((_1709.x + _
	0x31, 0x37, 0x30, 0x39, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x2e, // 1709.y) + _1709.
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x33, 0x20, 0x3d, 0x20, //         _2303 = 
	0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ((s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, // ition_world.yz /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, 0x78, 0x29, 0x20, // .xyz * _1720.x) 
	0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // + (s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_3.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, // exture_region_3S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, // sition_world.xz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, 0x79, 0x29, // ).xyz * _1720.y)
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // ) + (s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // egion_3.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 3Sampler, (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, // position_world.x
	0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // y / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // u.u_terrain[0].x
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, // ))).xyz * _1720.
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, //             _230
	0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // 3 = _mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rain[4].xyz;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, //       } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, //   _2313 = mix(mi
	0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x32, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x33, 0x2c, 0x20, // x(_2302, _2303, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x73, // float3(_770)), s
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // elect(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, // errain[5].xyz, s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 4.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_4Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.xz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, // z, bool3((isunor
	0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // dered(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, // errain[5].w, 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ) || _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // rrain[5].w != 0.
	0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, // 0))), float3((in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // d.y - _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, // errain[1].z) / _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1].w));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, //      _2313 = sel
	0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // ect(_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, // rain[5].xyz, s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2e, // exture_region_4.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sample(s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_4Sampler
	0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // , (in.v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _world.xz / floa
	0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // t2(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // ain[0].x))).xyz,
	0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, //  bool3((isunorde
	0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // red(_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // rain[5].w, 0.0) 
	0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // || _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // ain[5].w != 0.0)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2312 = _2
	0x33, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 313;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, // 2311 = _2312;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x32, 0x33, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x31, 0x3b, 0x0a, 0x20, // _2310 = _2311;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x20, 0x3d, //          _2309 =
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2310;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x38, 0x20, // }.        _2308 
	0x3d, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // = _2309;.    }. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x20, //    float3 _1903 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, // = normalize(-in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, // v_position_camer
	0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // a);.    float3 _
	0x32, 0x33, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 2315;.    float3
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, //  _2316;.    _231
	0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 6 = float3(0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // .    _2315 = flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // at3(0.0);.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _2324;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, // float3 _2326;.  
	0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, //   for (int _2314
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x20, 0x3c, 0x20, 0x34, 0x3b, //  = 0; _2314 < 4;
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x2c, 0x20, //  _2316 = _2326, 
	0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x2c, 0x20, 0x5f, // _2315 = _2324, _
	0x32, 0x33, 0x31, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 2314++).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x20, //       int _1911 
	0x3d, 0x20, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, // = (4 * _2314) + 
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // 3;.        if ((
	0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // isunordered(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x39, 0x31, 0x31, // _u.u_light[_1911
	0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].x, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x39, 0x31, // l_u.u_light[_191
	0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 1].x != 0.0)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, //     float3 _2318
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // ;.            if
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, //  (_mtl_u.u_light
	0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, // [(4 * _2314) + 4
	0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // ].w == 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x20, //           _2318 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // = normalize(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, // _u.u_light[(4 * 
	0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // _2314) + 4].xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // ;.            }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .            {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // 2318 = normalize
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, // (4 * _2314) + 4]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // .xyz - in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, // tion_camera);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x39, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 944 = fast::max(
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // dot(_2318, in.v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x37, 0x3b, 0x0a, //   float3 _2327;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x5f, 0x31, 0x39, 0x34, 0x34, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // _1944 > 0.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x37, //            _2327
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, //  = _2316 + ((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, // l_u.u_light[(4 *
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, //  _2314) + 6].xyz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, //  * _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, // rial[3].xyz) * p
	0x6f, 0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, // ow(fast::max(dot
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x33, // (normalize(_1903
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x29, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //  + _2318), in.v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, // 0.0), _mtl_u.u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // aterial[4].x));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, //              _23
	0x32, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 27 = _2316;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2326 = _2
	0x33, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 327;.           
	0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x2b, //  _2324 = _2315 +
	0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  ((_mtl_u.u_ligh
	0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, // t[(4 * _2314) + 
	0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 5].xyz * _mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // u_material[2].xy
	0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // z) * _1944);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x20, //           _2326 
	0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _2316;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, //      _2324 = _23
	0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 15;.        }.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //   }.    float3 _
	0x31, 0x39, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 1997 = ((_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // u_light[0].xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, //  _mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, // al[1].xyz) + _23
	0x31, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 15) + _2316;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x37, 0x3b, 0x0a, 0x20, //  float3 _2317;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, //    if ((isunorde
	0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // red(_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, // ht[1].x, 0.0) ||
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  _mtl_u.u_light[
	0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 1].x != 0.0)).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, //   {.        _231
	0x37, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 7 = mix(_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // _light[2].xyz, _
	0x31, 0x39, 0x39, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x61, 0x73, // 1997, float3(fas
	0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // t::clamp((_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .u_light[1].z - 
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // abs(in.v_positio
	0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, // n_camera.z)) / (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, // _mtl_u.u_light[1
	0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // ].z - _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // ight[1].y), 0.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //  1.0)));.    }. 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //    else.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _2317 = _1
	0x39, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // 997;.    }.    o
	0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ut.bgfx_FragData
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x33, 0x31, 0x37, // 0 = float4(_2317
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // , 1.0) * float4(
	0x5f, 0x32, 0x33, 0x30, 0x38, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _2308, 1.0);.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x60, 0x02,                                                                         // ..`.
};
static const uint8_t fs_terrain_dx11[14052] =
{
	0x46, 0x53, 0x48, 0x0b, 0x1d, 0xb8, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x75, // FSH............u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x13, 0x50, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, // _light..P.......
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x05, 0x00, 0x00, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_1Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x54, 0x65, 0x78, 0x74, // ure_region_1Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_2Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_3Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x54, 0x65, 0x78, 0x74, // ure_region_3Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x34, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_4Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x12, // ......u_terrain.
	0x06, 0x80, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x10, 0x00, 0x00, 0x00, // ure_region_1....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _region_2.......
	0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // gion_3..........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x34, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x34, 0x00, // n_4...........4.
	0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, // .#include <metal
	0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // _stdlib>.#includ
	0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, // e <simd/simd.h>.
	0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, // .using namespace
	0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, //  metal;..struct 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _Global.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // oat4 u_material[
	0x35, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // 5];.    float4 u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x39, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _light[19];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // float4 u_terrain
	0x5b, 0x36, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // [6];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, // xlatMtlMain_out.
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // {.    float4 bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, // x_FragData0 [[co
	0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // lor(0)]];.};..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ruct xlatMtlMain
	0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _in.{.    float3
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, //  v_normal_camera
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, // ;.    float3 v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, // ormal_world [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // er(locn1)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float3 v_positi
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // on_camera [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // (locn2)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // loat3 v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // _world [[user(lo
	0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn3)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _mtl_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // er(0)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 2d<float> s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x20, 0x5b, 0x5b, 0x74, // ure_region_1 [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(0)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(1)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // > s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, // on_3 [[texture(2
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // loat> s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // region_4 [[textu
	0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // re(3)]], sampler
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // n_1Sampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(0)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // er s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // ion_2Sampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ampler(1)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // pler s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // egion_3Sampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(2)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_4Sampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(3)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x30, 0x20, // .    float _770 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = 1.0 - normaliz
	0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // e(in.v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // rld).y;.    floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // t3 _2308;.    if
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // world.y < _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[1].x)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // .    {.        _
	0x32, 0x33, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, // 2308 = select(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // tl_u.u_terrain[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ].xyz, s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_1.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_1Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // .x))).xyz, bool3
	0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, // ((isunordered(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, // tl_u.u_terrain[2
	0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].w, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, // l_u.u_terrain[2]
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // .w != 0.0)));.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //   }.    else.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  {.        float
	0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _2309;.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  if (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, // on_world.y < (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // ].x + _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x0a, 0x20, 0x20, // errain[1].w)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, //     _2309 = mix(
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // terrain[2].xyz, 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _1.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, // ure_region_1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, // yz, bool3((isuno
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // rdered(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, // terrain[2].w, 0.
	0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // 0) || _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, // errain[2].w != 0
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, // .0))), select(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // tl_u.u_terrain[3
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ].xyz, s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_2.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_2Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // .x))).xyz, bool3
	0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, // ((isunordered(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // tl_u.u_terrain[3
	0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].w, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, // l_u.u_terrain[3]
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, // .w != 0.0))), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // oat3((in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // ion_world.y - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x78, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // ].x) / _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, // terrain[1].w));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // at3 _2310;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //        if (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  < _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ain[1].y).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x20, 0x3d, 0x20, //         _2310 = 
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // terrain[3].xyz, 
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _2.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, // ure_region_2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, // yz, bool3((isuno
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // rdered(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, // terrain[3].w, 0.
	0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // 0) || _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, // errain[3].w != 0
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)));.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x31, //     float3 _2311
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   if (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, // ion_world.y < (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x31, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1].y + _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x0a, 0x20, // terrain[1].w)). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, //      float3 _230
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        do.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, //         if ((isu
	0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // nordered(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, // u_terrain[3].w, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 0.0) || _mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, // _terrain[3].w !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0)).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // at3 _1087 = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // alize(fast::max(
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, // abs(in.v_normal_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, // world), float3(9
	0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, // .999999747378751
	0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, // 6355514526367188
	0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e-06)));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x39, //      float3 _109
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 8 = _1087 / floa
	0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, // t3((_1087.x + _1
	0x30, 0x38, 0x37, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x37, 0x2e, 0x7a, // 087.y) + _1087.z
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 2306 = ((s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.yz / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0].x))).xyz * _1
	0x30, 0x39, 0x38, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 098.x) + (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, // ure_region_2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ple(s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // gion_2Sampler, (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // rld.xz / float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // [0].x))).xyz * _
	0x31, 0x30, 0x39, 0x38, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // 1098.y)) + (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, // xture_region_2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ample(s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // region_2Sampler,
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // world.xy / float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // 2(_mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // in[0].x))).xyz *
	0x20, 0x5f, 0x31, 0x30, 0x39, 0x38, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1098.z);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x36, //            _2306
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, //  = _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ain[3].xyz;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //              } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, 0x3b, 0x0a, 0x20, //  float3 _2307;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    do.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, //     if ((isunord
	0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ered(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // rrain[4].w, 0.0)
	0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, //  || _mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // rain[4].w != 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // _1201 = normaliz
	0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, // e(fast::max(abs(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // in.v_normal_worl
	0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, // d), float3(9.999
	0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, // 9997473787516355
	0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, // 514526367188e-06
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )));.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, 0x20, 0x3d, 0x20, //  float3 _1212 = 
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, // _1201 / float3((
	0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, // _1201.x + _1201.
	0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x30, 0x31, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, // y) + _1201.z);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, //            _2307
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, //  = ((s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // egion_3.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 3Sampler, (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // z / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // u.u_terrain[0].x
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, 0x2e, // ))).xyz * _1212.
	0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // x) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_3.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _3Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xz / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x32, // x))).xyz * _1212
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // .y)) + (s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // e_region_3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // e(s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, // on_3Sampler, (in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, // d.xy / float2(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // tl_u.u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, // ].x))).xyz * _12
	0x31, 0x32, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 12.z);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x5f, //        _2307 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4].xyz;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, //          } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (false);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, //              _23
	0x31, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, // 11 = mix(select(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // [3].xyz, s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.xz / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, // 0].x))).xyz, boo
	0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, // l3((isunordered(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, // [3].w, 0.0) || _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, // 3].w != 0.0))), 
	0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x36, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x37, // mix(_2306, _2307
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, 0x29, 0x29, 0x2c, // , float3(_770)),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, //  float3((in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, // sition_world.y -
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // n[1].y) / _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, // .u_terrain[1].w)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, // float3 _2312;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   if (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, // ion_world.y < _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].z).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x3b, //    float3 _2304;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, //          do.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, //   if ((isunorder
	0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // ed(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, // ain[3].w, 0.0) |
	0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // | _mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // in[3].w != 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // loat3 _1361 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // rmalize(fast::ma
	0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // x(abs(in.v_norma
	0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // l_world), float3
	0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, // (9.9999997473787
	0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, // 5163555145263671
	0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 88e-06)));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, // 3 _1372 = _1361 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x2e, // / float3((_1361.
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, // x + _1361.y) + _
	0x31, 0x33, 0x36, 0x31, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1361.z);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x20, 0x3d, //          _2304 =
	0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, //  ((s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_2.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, // exture_region_2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, // sition_world.yz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x2e, 0x78, 0x29, // ).xyz * _1372.x)
	0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, //  + (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // gion_2.sample(s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, // Sampler, (in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, // osition_world.xz
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  / float2(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[0].x)
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, 0x2e, 0x79, // )).xyz * _1372.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // )) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xy / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x32, // x))).xyz * _1372
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x20, 0x3d, //          _2304 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[3].xyz;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, //        } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // alse);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _2305;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, //  ((isunordered(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, // 4].w, 0.0) || _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, // tl_u.u_terrain[4
	0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // ].w != 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 3 _1475 = normal
	0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, // ize(fast::max(ab
	0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // s(in.v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, // rld), float3(9.9
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, // 9999974737875163
	0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, // 55514526367188e-
	0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 06)));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x34, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x20, 0x2f, 0x20, 0x66, 0x6c, // 486 = _1475 / fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x37, 0x35, 0x2e, 0x78, 0x20, 0x2b, 0x20, // oat3((_1475.x + 
	0x5f, 0x31, 0x34, 0x37, 0x35, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x34, 0x37, 0x35, // _1475.y) + _1475
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, //      _2305 = ((s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 3.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.yz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, // z * _1486.x) + (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _3.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, // ure_region_3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, // yz * _1486.y)) +
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, // ition_world.xy /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x36, 0x2e, 0x7a, 0x29, 0x3b, // .xyz * _1486.z);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, //      _2305 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, // l_u.u_terrain[4]
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xyz;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, //            _2312
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x34, 0x2c, 0x20, 0x5f, 0x32, //  = mix(_2304, _2
	0x33, 0x30, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, // 305, float3(_770
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //               el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x3b, 0x0a, 0x20, //  float3 _2313;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //        if (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, // position_world.y
	0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, //  < (_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // rain[1].z + _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, // _u.u_terrain[1].
	0x77, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x32, 0x33, 0x30, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2302;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     do.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, //      if ((isunor
	0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // dered(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, // errain[3].w, 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ) || _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // rrain[3].w != 0.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0)).            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  _1595 = normali
	0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, // ze(fast::max(abs
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, // (in.v_normal_wor
	0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, // ld), float3(9.99
	0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, // 9999747378751635
	0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, // 5514526367188e-0
	0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6)));.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x20, 0x2f, //  _1606 = _1595 /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x2e, 0x78, //  float3((_1595.x
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x35, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, //  + _1595.y) + _1
	0x35, 0x39, 0x35, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 595.z);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, //             _230
	0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // 2 = ((s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // yz / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, // x))).xyz * _1606
	0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .x) + (s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _region_2.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // n_2Sampler, (in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, // v_position_world
	0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, // .xz / float2(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // l_u.u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x30, // .x))).xyz * _160
	0x36, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 6.y)) + (s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_2Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.xy / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0].x))).xyz * _1
	0x36, 0x30, 0x36, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 606.z);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x32, 0x33, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // _2302 = _mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // _terrain[3].xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, //           } whil
	0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e(false);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, //       float3 _23
	0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 03;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // do.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, //  if ((isunordere
	0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // d(_mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, // in[4].w, 0.0) ||
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, // n[4].w != 0.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x30, 0x39, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, // 09 = normalize(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, // ast::max(abs(in.
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, // v_normal_world),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, //  float3(9.999999
	0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, // 7473787516355514
	0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, // 526367188e-06)))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, //       float3 _17
	0x32, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // 20 = _1709 / flo
	0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // at3((_1709.x + _
	0x31, 0x37, 0x30, 0x39, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x39, 0x2e, // 1709.y) + _1709.
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x33, 0x20, 0x3d, 0x20, //         _2303 = 
	0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ((s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, // ition_world.yz /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, 0x78, 0x29, 0x20, // .xyz * _1720.x) 
	0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // + (s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_3.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, // exture_region_3S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, // sition_world.xz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, 0x79, 0x29, // ).xyz * _1720.y)
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // ) + (s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // egion_3.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 3Sampler, (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, // position_world.x
	0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // y / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // u.u_terrain[0].x
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x30, 0x2e, // ))).xyz * _1720.
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, //             _230
	0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // 3 = _mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rain[4].xyz;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, //       } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, //   _2313 = mix(mi
	0x78, 0x28, 0x5f, 0x32, 0x33, 0x30, 0x32, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x33, 0x2c, 0x20, // x(_2302, _2303, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x37, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x73, // float3(_770)), s
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // elect(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, // errain[5].xyz, s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 4.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_4Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.xz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, // z, bool3((isunor
	0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // dered(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, // errain[5].w, 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ) || _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // rrain[5].w != 0.
	0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, // 0))), float3((in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // d.y - _mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, // errain[1].z) / _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x31, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1].w));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, //      _2313 = sel
	0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // ect(_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, // rain[5].xyz, s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2e, // exture_region_4.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sample(s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_4Sampler
	0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // , (in.v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _world.xz / floa
	0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // t2(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // ain[0].x))).xyz,
	0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, //  bool3((isunorde
	0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // red(_mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // rain[5].w, 0.0) 
	0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // || _mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // ain[5].w != 0.0)
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2312 = _2
	0x33, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 313;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, // 2311 = _2312;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x32, 0x33, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x31, 0x3b, 0x0a, 0x20, // _2310 = _2311;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x20, 0x3d, //          _2309 =
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2310;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x38, 0x20, // }.        _2308 
	0x3d, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // = _2309;.    }. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x20, //    float3 _1903 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, // = normalize(-in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, // v_position_camer
	0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, // a);.    float3 _
	0x32, 0x33, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 2315;.    float3
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, //  _2316;.    _231
	0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, // 6 = float3(0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // .    _2315 = flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // at3(0.0);.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _2324;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, // float3 _2326;.  
	0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, //   for (int _2314
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x20, 0x3c, 0x20, 0x34, 0x3b, //  = 0; _2314 < 4;
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x2c, 0x20, //  _2316 = _2326, 
	0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x2c, 0x20, 0x5f, // _2315 = _2324, _
	0x32, 0x33, 0x31, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 2314++).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x20, //       int _1911 
	0x3d, 0x20, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, // = (4 * _2314) + 
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // 3;.        if ((
	0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // isunordered(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x39, 0x31, 0x31, // _u.u_light[_1911
	0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, // ].x, 0.0) || _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x39, 0x31, // l_u.u_light[_191
	0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 1].x != 0.0)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, //     float3 _2318
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // ;.            if
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, //  (_mtl_u.u_light
	0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, // [(4 * _2314) + 4
	0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // ].w == 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x20, //           _2318 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // = normalize(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, // _u.u_light[(4 * 
	0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // _2314) + 4].xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // ;.            }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .            {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x32, 0x33, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // 2318 = normalize
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, // (4 * _2314) + 4]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // .xyz - in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, // tion_camera);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x39, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 944 = fast::max(
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // dot(_2318, in.v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x37, 0x3b, 0x0a, //   float3 _2327;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x5f, 0x31, 0x39, 0x34, 0x34, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // _1944 > 0.0).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x37, //            _2327
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, //  = _2316 + ((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, // l_u.u_light[(4 *
	0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, //  _2314) + 6].xyz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, //  * _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, // rial[3].xyz) * p
	0x6f, 0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, // ow(fast::max(dot
	0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x33, // (normalize(_1903
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x38, 0x29, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, //  + _2318), in.v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, // normal_camera), 
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, // 0.0), _mtl_u.u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // aterial[4].x));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, //              _23
	0x32, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 27 = _2316;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2326 = _2
	0x33, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 327;.           
	0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x35, 0x20, 0x2b, //  _2324 = _2315 +
	0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  ((_mtl_u.u_ligh
	0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, // t[(4 * _2314) + 
	0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 5].xyz * _mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // u_material[2].xy
	0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // z) * _1944);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //      }.        e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // lse.        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x36, 0x20, //           _2326 
	0x3d, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _2316;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, //      _2324 = _23
	0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 15;.        }.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //   }.    float3 _
	0x31, 0x39, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 1997 = ((_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // u_light[0].xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, //  _mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, // al[1].xyz) + _23
	0x31, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 15) + _2316;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x37, 0x3b, 0x0a, 0x20, //  float3 _2317;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, //    if ((isunorde
	0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // red(_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, // ht[1].x, 0.0) ||
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  _mtl_u.u_light[
	0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 1].x != 0.0)).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, //   {.        _231
	0x37, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 7 = mix(_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // _light[2].xyz, _
	0x31, 0x39, 0x39, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x61, 0x73, // 1997, float3(fas
	0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // t::clamp((_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .u_light[1].z - 
	0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // abs(in.v_positio
	0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, // n_camera.z)) / (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, // _mtl_u.u_light[1
	0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // ].z - _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // ight[1].y), 0.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //  1.0)));.    }. 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //    else.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _2317 = _1
	0x39, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // 997;.    }.    o
	0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ut.bgfx_FragData
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x33, 0x31, 0x37, // 0 = float4(_2317
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // , 1.0) * float4(
	0x5f, 0x32, 0x33, 0x30, 0x38, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _2308, 1.0);.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x60, 0x02,                                                                         // ..`.
};
static const uint8_t fs_terrain_mtl[14374] =
{
	0x46, 0x53, 0x48, 0x0b, 0x1d, 0xb8, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x07, 0x75, // FSH............u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x13, 0x50, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, // _light..P.......
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x05, 0x00, 0x00, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_1Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x54, 0x65, 0x78, 0x74, // ure_region_1Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_2Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ......s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // region_3Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x54, 0x65, 0x78, 0x74, // ure_region_3Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, // ure...........s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x19, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..s_texture_regi
	0x6f, 0x6e, 0x5f, 0x34, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // on_4Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x12, // ......u_terrain.
	0x07, 0x80, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x10, 0x00, 0x00, 0x00, // ure_region_1....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // _region_2.......
	0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ....s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // gion_3..........
	0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // .s_texture_regio
	0x6e, 0x5f, 0x34, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x36, 0x00, // n_4..........A6.
	0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, // .#include <metal
	0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // _stdlib>.#includ
	0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, // e <simd/simd.h>.
	0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, // .using namespace
	0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, //  metal;..struct 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _Global.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // oat4 u_material[
	0x35, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // 5];.    float4 u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x39, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _light[19];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // float4 u_terrain
	0x5b, 0x37, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // [7];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, // xlatMtlMain_out.
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, // {.    float4 bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, // x_FragData0 [[co
	0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // lor(0)]];.};..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ruct xlatMtlMain
	0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _in.{.    float3
	0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, //  v_normal_camera
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, // ;.    float3 v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, // ormal_world [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // er(locn1)]];.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  float3 v_positi
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // on_camera [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // (locn2)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // loat3 v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, // _world [[user(lo
	0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, // cn3)]];.};..frag
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ment xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // _out xlatMtlMain
	0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, // (xlatMtlMain_in 
	0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, // in [[stage_in]],
	0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, //  constant _Globa
	0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, // l& _mtl_u [[buff
	0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // er(0)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // 2d<float> s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x20, 0x5b, 0x5b, 0x74, // ure_region_1 [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(0)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(1)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // > s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, // on_3 [[texture(2
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // loat> s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // region_4 [[textu
	0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // re(3)]], sampler
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // n_1Sampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(0)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // er s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // ion_2Sampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ampler(1)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // pler s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // egion_3Sampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(2)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ampler s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_4Sampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x29, //  [[sampler(3)]])
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // .{.    xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, // in_out out = {};
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, // .    if ((isunor
	0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // dered(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x30, // errain[0].y, 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // ) || _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // rrain[0].y != 0.
	0x30, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // 0) && (in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x3d, 0x20, // tion_world.y <= 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0.0)).    {.    
	0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, //     discard_frag
	0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ment();.    }.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, //   if ((isunorder
	0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // ed(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, // ain[0].z, 0.0) |
	0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // | _mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // in[0].z != 0.0) 
	0x26, 0x26, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // && (in.v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, // n_world.y >= 0.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).    {.       
	0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, //  discard_fragmen
	0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // t();.    }.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, // loat _824 = 1.0 
	0x2d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, // - normalize(in.v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2e, 0x79, // _normal_world).y
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, // ;.    float3 _23
	0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // 68;.    if (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, // y < _mtl_u.u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // rain[1].x).    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x38, 0x20, 0x3d, // .        _2368 =
	0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  select(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // _terrain[3].xyz,
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // n_1.sample(s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, // ture_region_1Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // pler, (in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, // tion_world.xz / 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // float2(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, // terrain[0].x))).
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, // xyz, bool3((isun
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // ordered(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, // _terrain[3].w, 0
	0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // .0) || _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // terrain[3].w != 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 0.0)));.    }.  
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //   else.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, //      float3 _236
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, // 9;.        if (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // ld.y < (_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, // _terrain[1].x + 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [2].x)).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, // {.            _2
	0x33, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, // 369 = mix(select
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // (_mtl_u.u_terrai
	0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // n[3].xyz, s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x73, 0x61, 0x6d, // ure_region_1.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ple(s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // gion_1Sampler, (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // rld.xz / float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, // [0].x))).xyz, bo
	0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, // ol3((isunordered
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // (_mtl_u.u_terrai
	0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, // n[3].w, 0.0) || 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, // [3].w != 0.0))),
	0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  select(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // _terrain[4].xyz,
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // n_2.sample(s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, // ture_region_2Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // pler, (in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, // tion_world.xz / 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // float2(_mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, // terrain[0].x))).
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, // xyz, bool3((isun
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // ordered(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, // _terrain[4].w, 0
	0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // .0) || _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // terrain[4].w != 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, // 0.0))), float3((
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // rld.y - _mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x20, 0x2f, // _terrain[1].x) /
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[2].x));.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //   }.        else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x33, 0x37, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 370;.           
	0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //  if (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, // on_world.y < _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, // l_u.u_terrain[1]
	0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .y).            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, //   _2370 = select
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // (_mtl_u.u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // n[4].xyz, s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, // ure_region_2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // ple(s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // gion_2Sampler, (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // rld.xz / float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, // [0].x))).xyz, bo
	0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, // ol3((isunordered
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // (_mtl_u.u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, // n[4].w, 0.0) || 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // _mtl_u.u_terrain
	0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, // [4].w != 0.0)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // .            }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _2371;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //             if (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, // in.v_position_wo
	0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // rld.y < (_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x20, 0x2b, // u_terrain[1].y +
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[2].y)).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _2366;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  do.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, //   if ((isunorder
	0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // ed(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, // ain[4].w, 0.0) |
	0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // | _mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // in[4].w != 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x31, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 144 = normalize(
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, // fast::max(abs(in
	0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, // .v_normal_world)
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, // , float3(9.99999
	0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, // 9747378751635551
	0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, // 4526367188e-06))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _1155 = _1
	0x31, 0x34, 0x34, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, // 144 / float3((_1
	0x31, 0x34, 0x34, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x34, 0x2e, 0x79, 0x29, // 144.x + _1144.y)
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x34, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  + _1144.z);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x36, 0x20, 0x3d, //          _2366 =
	0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, //  ((s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_2.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, // exture_region_2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, // sition_world.yz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x78, 0x29, // ).xyz * _1155.x)
	0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, //  + (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // gion_2.sample(s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, // Sampler, (in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, // osition_world.xz
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  / float2(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[0].x)
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x79, // )).xyz * _1155.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // )) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xy / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x35, 0x35, // x))).xyz * _1155
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, //      _2366 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, // l_u.u_terrain[4]
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xyz;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, //        } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // alse);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3 _2367;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, //              do.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, //  ((isunordered(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, // 5].w, 0.0) || _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, // tl_u.u_terrain[5
	0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // ].w != 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x38, 0x20, //    float3 _1258 
	0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, // = normalize(fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, // ::max(abs(in.v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, // ormal_world), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, // oat3(9.999999747
	0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, // 3787516355514526
	0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 367188e-06)));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x38, 0x20, // 3 _1269 = _1258 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x32, 0x35, 0x38, 0x2e, // / float3((_1258.
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x35, 0x38, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, // x + _1258.y) + _
	0x31, 0x32, 0x35, 0x38, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1258.z);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, //      _2367 = ((s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 3.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.yz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x39, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, // z * _1269.x) + (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _3.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, // ure_region_3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x39, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, // yz * _1269.y)) +
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, // ition_world.xy /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x36, 0x39, 0x2e, 0x7a, 0x29, 0x3b, // .xyz * _1269.z);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, //              bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ak;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x32, 0x33, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  _2367 = _mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // u_terrain[5].xyz
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x6d, //        _2371 = m
	0x69, 0x78, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ix(select(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, // .u_terrain[4].xy
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // z, s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_2.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, // exture_region_2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, // sition_world.xz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, // ).xyz, bool3((is
	0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // unordered(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, // .u_terrain[4].w,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  0.0) || _mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, // u_terrain[4].w !
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, // = 0.0))), mix(_2
	0x33, 0x36, 0x36, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 366, _2367, floa
	0x74, 0x33, 0x28, 0x5f, 0x38, 0x32, 0x34, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x2c, // t3(_824 * 1.5)),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, //  float3((in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, // sition_world.y -
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // n[1].y) / _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, // .u_terrain[2].y)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x32, 0x3b, 0x0a, 0x20, 0x20, // float3 _2372;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   if (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x5f, 0x6d, // ion_world.y < _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, // tl_u.u_terrain[1
	0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].z).           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x34, 0x3b, //    float3 _2364;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, //          do.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, //   if ((isunorder
	0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // ed(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, // ain[4].w, 0.0) |
	0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // | _mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // in[4].w != 0.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, // loat3 _1418 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // rmalize(fast::ma
	0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // x(abs(in.v_norma
	0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // l_world), float3
	0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, // (9.9999997473787
	0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, // 5163555145263671
	0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 88e-06)));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x38, 0x20, // 3 _1429 = _1418 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x34, 0x31, 0x38, 0x2e, // / float3((_1418.
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x38, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, // x + _1418.y) + _
	0x31, 0x34, 0x31, 0x38, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1418.z);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x34, 0x20, 0x3d, //          _2364 =
	0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, //  ((s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_2.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, // exture_region_2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, // sition_world.yz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x39, 0x2e, 0x78, 0x29, // ).xyz * _1429.x)
	0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, //  + (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // gion_2.sample(s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // texture_region_2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, // Sampler, (in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, // osition_world.xz
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  / float2(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, // .u_terrain[0].x)
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x39, 0x2e, 0x79, // )).xyz * _1429.y
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // )) + (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // region_2.sample(
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, // _2Sampler, (in.v
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, // _position_world.
	0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // xy / float2(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // _u.u_terrain[0].
	0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x39, // x))).xyz * _1429
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //       else.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x34, 0x20, 0x3d, //          _2364 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  _mtl_u.u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[4].xyz;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, //        } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // alse);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _2365;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, //  ((isunordered(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, // 5].w, 0.0) || _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, // tl_u.u_terrain[5
	0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // ].w != 0.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 3 _1532 = normal
	0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x62, // ize(fast::max(ab
	0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, 0x6f, // s(in.v_normal_wo
	0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, 0x39, // rld), float3(9.9
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, // 9999974737875163
	0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, // 55514526367188e-
	0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 06)));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x35, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x32, 0x20, 0x2f, 0x20, 0x66, 0x6c, // 543 = _1532 / fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x35, 0x33, 0x32, 0x2e, 0x78, 0x20, 0x2b, 0x20, // oat3((_1532.x + 
	0x5f, 0x31, 0x35, 0x33, 0x32, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x35, 0x33, 0x32, // _1532.y) + _1532
	0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .z);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, //      _2365 = ((s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 3.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.yz / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x33, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, // z * _1543.x) + (
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // _3.sample(s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, // ure_region_3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ler, (in.v_posit
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, // ion_world.xz / f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, // loat2(_mtl_u.u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, // errain[0].x))).x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x33, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, // yz * _1543.y)) +
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, // on_3.sample(s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, // xture_region_3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // mpler, (in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, // ition_world.xy /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  float2(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, // _terrain[0].x)))
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x33, 0x2e, 0x7a, 0x29, 0x3b, // .xyz * _1543.z);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, //      _2365 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, // l_u.u_terrain[5]
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xyz;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x32, //            _2372
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x34, 0x2c, 0x20, 0x5f, 0x32, //  = mix(_2364, _2
	0x33, 0x36, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x38, 0x32, 0x34, // 365, float3(_824
	0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * 1.5));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x33, 0x37, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 373;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, //              if 
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // (in.v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // orld.y < (_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, // .u_terrain[1].z 
	0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // + _mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // in[2].z)).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, // float3 _2362;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, //           do.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, //            if ((
	0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // isunordered(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, // _u.u_terrain[4].
	0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // w, 0.0) || _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, // u.u_terrain[4].w
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  != 0.0)).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x6e, // float3 _1652 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // ormalize(fast::m
	0x61, 0x78, 0x28, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // ax(abs(in.v_norm
	0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // al_world), float
	0x33, 0x28, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, // 3(9.999999747378
	0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, // 7516355514526367
	0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 188e-06)));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, // float3 _1663 = _
	0x31, 0x36, 0x35, 0x32, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, // 1652 / float3((_
	0x31, 0x36, 0x35, 0x32, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x32, 0x2e, 0x79, // 1652.x + _1652.y
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x32, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ) + _1652.z);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, //   _2362 = ((s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x73, // xture_region_2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // ample(s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // region_2Sampler,
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, //  (in.v_position_
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // world.yz / float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // 2(_mtl_u.u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // in[0].x))).xyz *
	0x20, 0x5f, 0x31, 0x36, 0x36, 0x33, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, //  _1663.x) + (s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, // exture_region_2.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sample(s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // _region_2Sampler
	0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // , (in.v_position
	0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _world.xz / floa
	0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // t2(_mtl_u.u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, // ain[0].x))).xyz 
	0x2a, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x33, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, // * _1663.y)) + (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 2.sample(s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, // re_region_2Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // er, (in.v_positi
	0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, // on_world.xy / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // oat2(_mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // rrain[0].x))).xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x33, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, // z * _1663.z);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x6d, //       _2362 = _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, // tl_u.u_terrain[4
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].xyz;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, // } while(false);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t3 _2363;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       do.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, //        if ((isun
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // ordered(_mtl_u.u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x2c, 0x20, 0x30, // _terrain[5].w, 0
	0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // .0) || _mtl_u.u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // terrain[5].w != 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0)).          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // t3 _1766 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x61, // lize(fast::max(a
	0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x77, // bs(in.v_normal_w
	0x6f, 0x72, 0x6c, 0x64, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x39, 0x2e, // orld), float3(9.
	0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, // 9999997473787516
	0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, // 355514526367188e
	0x2d, 0x30, 0x36, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // -06)));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x36, // t3 _1777 = _1766
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x36, //  / float3((_1766
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x36, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, // .x + _1766.y) + 
	0x5f, 0x31, 0x37, 0x36, 0x36, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1766.z);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, //               _2
	0x33, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // 363 = ((s_textur
	0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // e_region_3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, // e(s_texture_regi
	0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, // on_3Sampler, (in
	0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, // .v_position_worl
	0x64, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, // d.yz / float2(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, // tl_u.u_terrain[0
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, // ].x))).xyz * _17
	0x37, 0x37, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // 77.x) + (s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, // re_region_3.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // le(s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // ion_3Sampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, // n.v_position_wor
	0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, // ld.xz / float2(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // mtl_u.u_terrain[
	0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 0].x))).xyz * _1
	0x37, 0x37, 0x37, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // 777.y)) + (s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2e, 0x73, 0x61, // ture_region_3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // mple(s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // egion_3Sampler, 
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, // (in.v_position_w
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // orld.xy / float2
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // (_mtl_u.u_terrai
	0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // n[0].x))).xyz * 
	0x5f, 0x31, 0x37, 0x37, 0x37, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1777.z);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //   _2363 = _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, // .u_terrain[5].xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, //             } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x33, 0x20, 0x3d, 0x20, //         _2373 = 
	0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x2c, 0x20, 0x5f, // mix(mix(_2362, _
	0x32, 0x33, 0x36, 0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x38, 0x32, // 2363, float3(_82
	0x34, 0x29, 0x29, 0x2c, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // 4)), select(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, // _u.u_terrain[6].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // xyz, s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // egion_4.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // 4Sampler, (in.v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, // position_world.x
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // z / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // u.u_terrain[0].x
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, // ))).xyz, bool3((
	0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // isunordered(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, // _u.u_terrain[6].
	0x77, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // w, 0.0) || _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, // u.u_terrain[6].w
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  != 0.0))), floa
	0x74, 0x33, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // t3((in.v_positio
	0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // n_world.y - _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, // _u.u_terrain[1].
	0x7a, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x65, // z) / _mtl_u.u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // rrain[2].z));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x33, //            _2373
	0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  = select(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x79, // .u_terrain[6].xy
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // z, s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // ion_4.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x53, // exture_region_4S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // ampler, (in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x78, 0x7a, 0x20, // sition_world.xz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // / float2(_mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x28, 0x69, 0x73, // ).xyz, bool3((is
	0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // unordered(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, 0x2c, // .u_terrain[6].w,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  0.0) || _mtl_u.
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, 0x20, 0x21, // u_terrain[6].w !
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 0.0)));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, //             _237
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 2 = _2373;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, //      _2371 = _23
	0x37, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 72;.            
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2370 = _2
	0x33, 0x37, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 371;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  }.            _
	0x32, 0x33, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x30, 0x3b, 0x0a, 0x20, 0x20, // 2369 = _2370;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x5f, 0x32, 0x33, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x39, 0x3b, 0x0a, 0x20, // _2368 = _2369;. 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //    }.    float3 
	0x5f, 0x31, 0x39, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // _1961 = normaliz
	0x65, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // e(-in.v_position
	0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _camera);.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _2375;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, // float3 _2376;.  
	0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //   _2376 = float3
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x35, // (0.0);.    _2375
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, //  = float3(0.0);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x38, 0x34, //     float3 _2384
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, // ;.    float3 _23
	0x38, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, // 86;.    for (int
	0x20, 0x5f, 0x32, 0x33, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x32, 0x33, 0x37, //  _2374 = 0; _237
	0x34, 0x20, 0x3c, 0x20, 0x34, 0x3b, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x5f, // 4 < 4; _2376 = _
	0x32, 0x33, 0x38, 0x36, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x32, // 2386, _2375 = _2
	0x33, 0x38, 0x34, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x34, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, // 384, _2374++).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, //   {.        int 
	0x5f, 0x31, 0x39, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, // _1969 = (4 * _23
	0x37, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 74) + 3;.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, //  if ((isunordere
	0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // d(_mtl_u.u_light
	0x5b, 0x5f, 0x31, 0x39, 0x36, 0x39, 0x5d, 0x2e, 0x78, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // [_1969].x, 0.0) 
	0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // || _mtl_u.u_ligh
	0x74, 0x5b, 0x5f, 0x31, 0x39, 0x36, 0x39, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // t[_1969].x != 0.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 0)).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x32, 0x33, 0x37, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2378;.        
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //     if (_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x37, // _light[(4 * _237
	0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, // 4) + 4].w == 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // ).            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x32, 0x33, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // _2378 = normaliz
	0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // e(_mtl_u.u_light
	0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x34, // [(4 * _2374) + 4
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].xyz);.        
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, //      _2378 = nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // malize(_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x34, // light[(4 * _2374
	0x29, 0x20, 0x2b, 0x20, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, // ) + 4].xyz - in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, // v_position_camer
	0x61, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // a);.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // }.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x30, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, // oat _2002 = fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x32, 0x33, 0x37, 0x38, 0x2c, // ::max(dot(_2378,
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, //  in.v_normal_cam
	0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // era), 0.0);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x32, 0x33, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2387;.          
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x32, 0x30, 0x30, 0x32, 0x20, 0x3e, 0x20, 0x30, 0x2e, //   if (_2002 > 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // 0).            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x32, 0x33, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x20, 0x2b, //  _2387 = _2376 +
	0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  ((_mtl_u.u_ligh
	0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x34, 0x29, 0x20, 0x2b, 0x20, // t[(4 * _2374) + 
	0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 6].xyz * _mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, // u_material[3].xy
	0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // z) * pow(fast::m
	0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, // ax(dot(normalize
	0x28, 0x5f, 0x31, 0x39, 0x36, 0x31, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x38, 0x29, 0x2c, // (_1961 + _2378),
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6d, //  in.v_normal_cam
	0x65, 0x72, 0x61, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // era), 0.0), _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, // _u.u_material[4]
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x));.          
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else.           
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, //    _2387 = _2376
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // ;.            }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x38, //             _238
	0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 6 = _2387;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, //        _2384 = _
	0x32, 0x33, 0x37, 0x35, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 2375 + ((_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x28, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x33, // u_light[(4 * _23
	0x37, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // 74) + 5].xyz * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // mtl_u.u_material
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x30, 0x30, 0x32, // [2].xyz) * _2002
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // );.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x32, 0x33, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x3b, 0x0a, 0x20, // _2386 = _2376;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x38, 0x34, //            _2384
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _2375;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //   }.    }.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // oat4 _2062 = flo
	0x61, 0x74, 0x34, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // at4(((_mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // ight[0].xyz * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // tl_u.u_material[
	0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x35, 0x29, // 1].xyz) + _2375)
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, //  + _2376, 1.0) *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x38, 0x2c, 0x20, 0x31, //  float4(_2368, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .0);.    float4 
	0x5f, 0x32, 0x33, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // _2377;.    if ((
	0x69, 0x73, 0x75, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // isunordered(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x2c, // _u.u_light[1].x,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  0.0) || _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, // u_light[1].x != 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0.0)).    {.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, //     _2377 = mix(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, // _mtl_u.u_light[2
	0x5d, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ], _2062, float4
	0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, // (fast::clamp((_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, // tl_u.u_light[1].
	0x7a, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // z - abs(in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x7a, 0x29, 0x29, // ition_camera.z))
	0x20, 0x2f, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, //  / (_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // ht[1].z - _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, // .u_light[1].y), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 0.0, 1.0)));.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //  }.    else.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x37, 0x20, // {.        _2377 
	0x3d, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // = _2062;.    }. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, //    out.bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x33, 0x37, 0x37, 0x3b, 0x0a, 0x20, // Data0 = _2377;. 
	0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, //    return out;.}
	0x0a, 0x0a, 0x00, 0x00, 0x70, 0x02,                                                             // ....p.
};
extern const uint8_t* fs_terrain_pssl;
extern const uint32_t fs_terrain_pssl_size;
