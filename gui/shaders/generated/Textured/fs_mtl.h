static const uint8_t OtTexturedFS_mtl[18977] =
{
	0x46, 0x53, 0x48, 0x0b, 0xd9, 0x1e, 0xec, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x20, 0x73, // FSH........... s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // dow_map0Sampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // ......... s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x30, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ap0Texture......
	0x00, 0x00, 0x00, 0x00, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // .... s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, // al_shadow_map1Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, // mpler.......... 
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // adow_map1Texture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, // .......... s_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, // ectional_shadow_
	0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, // map2Sampler.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // ..... s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x54, // nal_shadow_map2T
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, //  s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadow_map3Sample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x73, 0x5f, 0x64, 0x69, // r.......... s_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // rectional_shadow
	0x5f, 0x6d, 0x61, 0x70, 0x33, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // _map3Texture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, // .......u_light..
	0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x75, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // .........u_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x72, // tional_shadow_tr
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x14, 0x04, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, // ansform.........
	0x00, 0x10, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, // ..s_textureSampl
	0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x5f, 0x74, // er...........s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, // extureTexture...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ........s_normal
	0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // mapSampler......
	0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, // .....s_normalmap
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Texture.........
	0x00, 0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x03, 0x00, 0x02, // ..u_material....
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // .......s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, // onal_shadow_map0
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x64, 0x69, 0x72, // ...........s_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, // ectional_shadow_
	0x6d, 0x61, 0x70, 0x31, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, // map1...........s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // dow_map2........
	0x00, 0x00, 0x19, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // ...s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x10, 0x00, 0x00, 0x00, // _shadow_map3....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, 0x6e, 0x6f, 0x72, // ...........s_nor
	0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // malmap..........
	0x39, 0x47, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, // 9G..#include <me
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, // tal_stdlib>.#inc
	0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, // lude <simd/simd.
	0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, // h>..using namesp
	0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, // ace metal;..stru
	0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // ct _Global.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  float4 u_light[
	0x31, 0x36, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, // 16];.    float4x
	0x34, 0x20, 0x75, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // 4 u_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, // shadow_transform
	0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // [4];.    float4 
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x3b, 0x0a, 0x7d, // u_material[3];.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lMain_out.{.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, // float4 bgfx_Frag
	0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, // Data0 [[color(0)
	0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // ]];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, // latMtlMain_in.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, //     float3 v_nor
	0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, // mal [[user(locn0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // )]];.    float3 
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, // v_position [[use
	0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // r(locn1)]];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, // float3 v_tangent
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, 0x29, 0x5d, 0x5d, //  [[user(locn2)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, // ;.    float2 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord0 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn3)]];.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x20, 0x5b, 0x5b, 0x75, 0x73, // oat3 v_view [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x34, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // er(locn4)]];.};.
	0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // .fragment xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // lMain_out xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // lMain(xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, // n_in in [[stage_
	0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, // in]], constant _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, // Global& _mtl_u [
	0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, // [buffer(0)]], te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, // xture2d<float> s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // _texture [[textu
	0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // re(1)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // 2d<float> s_norm
	0x61, 0x6c, 0x6d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // almap [[texture(
	0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, // 2)]], texture2d<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // float> s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, // onal_shadow_map0
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, //  [[texture(10)]]
	0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // , texture2d<floa
	0x74, 0x3e, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // t> s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x20, 0x5b, 0x5b, 0x74, // _shadow_map1 [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, // exture(11)]], te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, // xture2d<float> s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // dow_map2 [[textu
	0x72, 0x65, 0x28, 0x31, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // re(12)]], textur
	0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, // e2d<float> s_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, // ectional_shadow_
	0x6d, 0x61, 0x70, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, // map3 [[texture(1
	0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, // 3)]], sampler s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // textureSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(1)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, // ampler s_normalm
	0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, // apSampler [[samp
	0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ler(2)]], sample
	0x72, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // r s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // shadow_map0Sampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x30, 0x29, // er [[sampler(10)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x64, 0x69, // ]], sampler s_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // rectional_shadow
	0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // _map1Sampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // ampler(11)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // mpler s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, // nal_shadow_map2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x31, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // (12)]], sampler 
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // adow_map3Sampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x33, 0x29, 0x5d, 0x5d, //  [[sampler(13)]]
	0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ).{.    xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, // ain_out out = {}
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, // ;.    float4 _11
	0x36, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, // 68 = s_texture.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, // ample(s_textureS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, // ampler, (in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // xcoord0 / float2
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // (_mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // al[0].w)));.    
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x38, 0x2e, 0x77, 0x20, 0x3c, 0x20, 0x30, 0x2e, // if (_1168.w < 0.
	0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, // 0500000007450580
	0x35, 0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x0a, 0x20, 0x20, // 596923828125).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, //   {.        disc
	0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, // ard_fragment();.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //     }.    float3
	0x20, 0x5f, 0x31, 0x30, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1095 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, // ormalize(in.v_no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rmal);.    float
	0x33, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // 3 _4972;.    if 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // (_mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // al[1].w != 0.0).
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // oat3 _1101 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, // t::normalize(in.
	0x76, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // v_tangent);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x39, //     float3 _1109
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  = fast::normali
	0x7a, 0x65, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x39, // ze(_1101 - (_109
	0x35, 0x20, 0x2a, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x2c, 0x20, 0x5f, // 5 * dot(_1101, _
	0x31, 0x30, 0x39, 0x35, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1095)));.       
	0x20, 0x5f, 0x34, 0x39, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _4972 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, // ormalize(((s_nor
	0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // malmap.sample(s_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // normalmapSampler
	0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // , (in.v_texcoord
	0x30, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 0 / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x2e, // u.u_material[0].
	0x77, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, // w))).xyz * 2.0) 
	0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, // - float3(1.0)) *
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  transpose(float
	0x33, 0x78, 0x33, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x39, 0x2c, 0x20, 0x63, 0x72, 0x6f, 0x73, 0x73, // 3x3(_1109, cross
	0x28, 0x5f, 0x31, 0x31, 0x30, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x35, 0x29, 0x2c, 0x20, // (_1109, _1095), 
	0x5f, 0x31, 0x30, 0x39, 0x35, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // _1095)));.    }.
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //     else.    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, //        _4972 = _
	0x31, 0x30, 0x39, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // 1095;.    }.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, // float3 _4977;.  
	0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, //   _4977 = ((_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, // _u.u_light[3].xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, // z * _mtl_u.u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, // erial[1].xyz) * 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x34, // fast::max(dot(_4
	0x39, 0x37, 0x32, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 972, _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // ght[2].xyz), 0.0
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // )) + ((_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // light[3].xyz * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // mtl_u.u_material
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, // [2].xyz) * pow(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x61, 0x73, // ast::max(dot(fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, // t::normalize(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, // l_u.u_light[2].x
	0x79, 0x7a, 0x20, 0x2b, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // yz + fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // lize(_mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, // ght[0].xyz - in.
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x34, // v_position)), _4
	0x39, 0x37, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 972), 0.0), _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, // _u.u_material[2]
	0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // .w));.    float3
	0x20, 0x5f, 0x34, 0x39, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, //  _4983;.    for 
	0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, // (int _4973 = 0; 
	0x5f, 0x34, 0x39, 0x37, 0x33, 0x20, 0x3c, 0x20, 0x32, 0x3b, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x37, // _4973 < 2; _4977
	0x20, 0x3d, 0x20, 0x5f, 0x34, 0x39, 0x38, 0x33, 0x2c, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x33, 0x2b, //  = _4983, _4973+
	0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // +).    {.       
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x39, //  int _1360 = _49
	0x37, 0x33, 0x20, 0x2a, 0x20, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 73 * 4;.        
	0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x38, 0x20, 0x2b, 0x20, // int _1361 = 8 + 
	0x5f, 0x31, 0x33, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // _1360;.        i
	0x6e, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x30, // nt _1405 = _1360
	0x20, 0x2b, 0x20, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //  + 11;.        i
	0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // f (_mtl_u.u_ligh
	0x74, 0x5b, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // t[_1361].w != 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // 0).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x34, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // _1425 = _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x33, 0x36, 0x31, 0x5d, 0x2e, 0x78, 0x79, // _light[_1361].xy
	0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // z - in.v_positio
	0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // n;.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, // loat _1427 = len
	0x67, 0x74, 0x68, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // gth(_1425);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x34, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // 1429 = fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, // malize(_1425);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x34, 0x39, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _4979;.        
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //     if (_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x34, 0x30, 0x35, 0x5d, 0x2e, 0x77, 0x20, // _light[_1405].w 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // > 0.0).         
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, //      _4979 = fas
	0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, // t::clamp((dot(_1
	0x34, 0x32, 0x39, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 429, fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // lize(-_mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x5d, // ight[_1360 + 11]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // .xyz)) - _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x34, 0x30, 0x35, 0x5d, 0x2e, 0x77, // u_light[_1405].w
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // ) / (_mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x30, 0x5d, 0x2e, // ght[_1360 + 10].
	0x77, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // w - _mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x5f, 0x31, 0x34, 0x30, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, // ht[_1405].w), 0.
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0, 1.0);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    else.        
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x31, 0x2e, //       _4979 = 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // 0;.            }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, // .            _49
	0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, // 83 = _4977 + (((
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x39, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // _1360 + 9].xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, //  _mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, // al[1].xyz) * fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x34, 0x39, 0x37, 0x32, // t::max(dot(_4972
	0x2c, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x39, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // , _1429), 0.0)) 
	0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // + ((_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x39, 0x5d, 0x2e, 0x78, 0x79, // ht[_1360 + 9].xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, // z * _mtl_u.u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, // erial[2].xyz) * 
	0x70, 0x6f, 0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, // pow(fast::max(do
	0x74, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // t(fast::normaliz
	0x65, 0x28, 0x5f, 0x31, 0x34, 0x32, 0x39, 0x20, 0x2b, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // e(_1429 + fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // normalize(_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // .u_light[0].xyz 
	0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, // - in.v_position)
	0x29, 0x2c, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, // ), _4972), 0.0),
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, //  _mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x34, // al[2].w))) * (_4
	0x39, 0x37, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, // 979 * (1.0 / fma
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x30, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // _1360 + 10].z * 
	0x5f, 0x31, 0x34, 0x32, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x32, 0x37, 0x2c, 0x20, 0x66, 0x6d, // _1427, _1427, fm
	0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // a(_mtl_u.u_light
	0x5b, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x30, 0x5d, 0x2e, 0x79, 0x2c, 0x20, // [_1360 + 10].y, 
	0x5f, 0x31, 0x34, 0x32, 0x37, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // _1427, _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x30, // light[_1360 + 10
	0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].x)))));.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //   }.        else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, //        _4983 = _
	0x34, 0x39, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // 4977;.        }.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //     }.    float 
	0x5f, 0x34, 0x39, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, // _4975;.    if (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // mtl_u.u_light[4]
	0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // .x != 0.0).    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x34, 0x39, 0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, // 4974;.        do
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x69, 0x6e, 0x2e, //        if ((-in.
	0x76, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // v_view.z) < _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x29, // _u.u_light[5].x)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .            {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, // loat3 _1540 = (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // mtl_u.u_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, // nal_shadow_trans
	0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // form[0] * float4
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, // (in.v_position, 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0)).xyz;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, // 3 _1652 = _1540 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float3(-1.5, 
	0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // -1.5, 0.0) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, // l_u.u_light[4].y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x30, 0x20, //    float3 _1660 
	0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // = _1540 + (float
	0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 3(-1.5, -0.5, 0.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 0) * _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ght[4].y);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, // 3 _1668 = _1540 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float3(-1.5, 
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 0.5, 0.0) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, // _u.u_light[4].y)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x36, 0x20, 0x3d, //   float3 _1676 =
	0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  _1540 + (float3
	0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // (-1.5, 1.5, 0.0)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t[4].y);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x36, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, // _1684 = _1540 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, // (float3(-0.5, -1
	0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 0.0) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, // u.u_light[4].y);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x32, 0x20, 0x3d, 0x20, //  float3 _1692 = 
	0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // _1540 + (float3(
	0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // -0.5, -0.5, 0.0)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t[4].y);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x37, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, // _1700 = _1540 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // (float3(-0.5, 0.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 0.0) * _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // .u_light[4].y);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x5f, // float3 _1708 = _
	0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, // 1540 + (float3(-
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, // 0.5, 1.5, 0.0) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  _mtl_u.u_light[
	0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4].y);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // 716 = _1540 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, // loat3(0.5, -1.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, // oat3 _1724 = _15
	0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, // 40 + (float3(0.5
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, // , -0.5, 0.0) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // mtl_u.u_light[4]
	0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .y);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x33, //      float3 _173
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // 2 = _1540 + (flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // at3(0.5, 0.5, 0.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 0) * _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ght[4].y);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x37, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, //  _1736 = (((((((
	0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x35, 0x32, 0x2e, 0x7a, 0x2c, 0x20, // ((step(_1652.z, 
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // adow_map0.sample
	0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, // (s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadow_map0Sample
	0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x20, // r, _1652.xy).x) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x30, 0x2e, 0x7a, 0x2c, 0x20, // + step(_1660.z, 
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // adow_map0.sample
	0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, // (s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadow_map0Sample
	0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, // r, _1660.xy).x))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x2e, 0x7a, 0x2c, //  + step(_1668.z,
	0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, //  s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hadow_map0.sampl
	0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // e(s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // shadow_map0Sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, // er, _1668.xy).x)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x36, 0x2e, 0x7a, // ) + step(_1676.z
	0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // , s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, // shadow_map0.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // le(s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, // _shadow_map0Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, // ler, _1676.xy).x
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x2e, // )) + step(_1684.
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // z, s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, // _shadow_map0.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // ple(s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, // l_shadow_map0Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, // pler, _1684.xy).
	0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x32, // x)) + step(_1692
	0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // .z, s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, // l_shadow_map0.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // mple(s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, // al_shadow_map0Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x32, 0x2e, 0x78, 0x79, 0x29, // mpler, _1692.xy)
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, 0x30, // .x)) + step(_170
	0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 0.z, s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, // al_shadow_map0.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // ample(s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, // nal_shadow_map0S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x30, 0x2e, 0x78, 0x79, // ampler, _1700.xy
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, // ).x)) + step(_17
	0x30, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 08.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, // nal_shadow_map0.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, // onal_shadow_map0
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x30, 0x38, 0x2e, 0x78, // Sampler, _1708.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // y).x)) + step(_1
	0x37, 0x31, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // 716.z, s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, // onal_shadow_map0
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // .sample(s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x36, 0x2e, // 0Sampler, _1716.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // xy).x)) + step(_
	0x31, 0x37, 0x32, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // 1724.z, s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // 0.sample(s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x32, 0x34, // p0Sampler, _1724
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // .xy).x)) + step(
	0x5f, 0x31, 0x37, 0x33, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // _1732.z, s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // p0.sample(s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x33, // ap0Sampler, _173
	0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2.xy).x);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, //  _1740 = _1540 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, //  (float3(0.5, 1.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 0.0) * _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // .u_light[4].y);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, // float3 _1748 = _
	0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, // 1540 + (float3(1
	0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, // .5, -1.5, 0.0) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  _mtl_u.u_light[
	0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4].y);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // 756 = _1540 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, // loat3(1.5, -0.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, // oat3 _1764 = _15
	0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, // 40 + (float3(1.5
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // , 0.5, 0.0) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, // tl_u.u_light[4].
	0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // y);.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x32, //     float3 _1772
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  = _1540 + (floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, // t3(1.5, 1.5, 0.0
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ) * _mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ht[4].y);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x34, 0x20, //           _4974 
	0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x33, 0x36, 0x20, 0x2b, 0x20, 0x73, // = (((((_1736 + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, // tep(_1740.z, s_d
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // irectional_shado
	0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // w_map0.sample(s_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, // directional_shad
	0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ow_map0Sampler, 
	0x5f, 0x31, 0x37, 0x34, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, // _1740.xy).x)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, 0x34, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, // step(_1748.z, s_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, // directional_shad
	0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // ow_map0.sample(s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // dow_map0Sampler,
	0x20, 0x5f, 0x31, 0x37, 0x34, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, //  _1748.xy).x)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, 0x35, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, //  step(_1756.z, s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // dow_map0.sample(
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // adow_map0Sampler
	0x2c, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, // , _1756.xy).x)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x34, 0x2e, 0x7a, 0x2c, 0x20, // + step(_1764.z, 
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // adow_map0.sample
	0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, // (s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadow_map0Sample
	0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, // r, _1764.xy).x))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x32, 0x2e, 0x7a, 0x2c, //  + step(_1772.z,
	0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, //  s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hadow_map0.sampl
	0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // e(s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // shadow_map0Sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, // er, _1772.xy).x)
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ) * 0.0625;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // k;.            }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, // .            els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // e.            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2e, // if ((-in.v_view.
	0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // z) < _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x35, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ght[5].y).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x28, // float3 _1560 = (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // _mtl_u.u_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x6e, // onal_shadow_tran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x31, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sform[1] * float
	0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, // 4(in.v_position,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  1.0)).xyz;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x5f, // float3 _2188 = _
	0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, // 1560 + (float3(-
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // 1.5, -1.5, 0.0) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].y);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x31, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, // t3 _2196 = _1560
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, //  + (float3(-1.5,
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, //  -0.5, 0.0) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, // tl_u.u_light[4].
	0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // y);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x32, 0x32, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, // 2204 = _1560 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, // float3(-1.5, 0.5
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.0) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, // u_light[4].y);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x32, 0x20, //    float3 _2212 
	0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // = _1560 + (float
	0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, // 3(-1.5, 1.5, 0.0
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ) * _mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ht[4].y);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, // oat3 _2220 = _15
	0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, // 60 + (float3(-0.
	0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // 5, -1.5, 0.0) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, // _mtl_u.u_light[4
	0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].y);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x32, 0x32, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, //  _2228 = _1560 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, //  (float3(-0.5, -
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 0.5, 0.0) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, // _u.u_light[4].y)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, //       float3 _22
	0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // 36 = _1560 + (fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, // oat3(-0.5, 0.5, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.0) * _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // light[4].y);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x34, 0x20, 0x3d, 0x20, //  float3 _2244 = 
	0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // _1560 + (float3(
	0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // -0.5, 1.5, 0.0) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].y);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, // t3 _2252 = _1560
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, //  + (float3(0.5, 
	0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // -1.5, 0.0) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, // l_u.u_light[4].y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x32, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // 260 = _1560 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, // loat3(0.5, -0.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x36, 0x38, 0x20, 0x3d, //   float3 _2268 =
	0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  _1560 + (float3
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // (0.5, 0.5, 0.0) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].y);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x32, 0x32, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, // t _2272 = ((((((
	0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x38, 0x2e, 0x7a, 0x2c, // (((step(_2188.z,
	0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, //  s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hadow_map1.sampl
	0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // e(s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, // shadow_map1Sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, // er, _2188.xy).x)
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x36, 0x2e, 0x7a, 0x2c, //  + step(_2196.z,
	0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, //  s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hadow_map1.sampl
	0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // e(s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, // shadow_map1Sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x39, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, // er, _2196.xy).x)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x30, 0x34, 0x2e, 0x7a, // ) + step(_2204.z
	0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // , s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // shadow_map1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // le(s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // _shadow_map1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, // ler, _2204.xy).x
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x32, 0x2e, // )) + step(_2212.
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // z, s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, // _shadow_map1.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // ple(s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, // l_shadow_map1Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, // pler, _2212.xy).
	0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x30, // x)) + step(_2220
	0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // .z, s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, // l_shadow_map1.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // mple(s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, // al_shadow_map1Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x32, 0x30, 0x2e, 0x78, 0x79, 0x29, // mpler, _2220.xy)
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, // .x)) + step(_222
	0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 8.z, s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, 0x73, // al_shadow_map1.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // ample(s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x53, // nal_shadow_map1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x32, 0x38, 0x2e, 0x78, 0x79, // ampler, _2228.xy
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, // ).x)) + step(_22
	0x33, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 36.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, // nal_shadow_map1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, // onal_shadow_map1
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x33, 0x36, 0x2e, 0x78, // Sampler, _2236.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // y).x)) + step(_2
	0x32, 0x34, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // 244.z, s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, // onal_shadow_map1
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // .sample(s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x34, 0x2e, // 1Sampler, _2244.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // xy).x)) + step(_
	0x32, 0x32, 0x35, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // 2252.z, s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // 1.sample(s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, // p1Sampler, _2252
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // .xy).x)) + step(
	0x5f, 0x32, 0x32, 0x36, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // _2260.z, s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // p1.sample(s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x36, // ap1Sampler, _226
	0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // 0.xy).x)) + step
	0x28, 0x5f, 0x32, 0x32, 0x36, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // (_2268.z, s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, // ap1.sample(s_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, // ectional_shadow_
	0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, // map1Sampler, _22
	0x36, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 68.xy).x);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _2276 = _1
	0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // 560 + (float3(0.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 5, 1.5, 0.0) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // mtl_u.u_light[4]
	0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .y);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x32, 0x32, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, // _2284 = _1560 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, // (float3(1.5, -1.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 0.0) * _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // .u_light[4].y);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x39, 0x32, //     float3 _2292
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  = _1560 + (floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // t3(1.5, -0.5, 0.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 0) * _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ght[4].y);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _2300 = _1
	0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, // 560 + (float3(1.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 5, 0.5, 0.0) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // mtl_u.u_light[4]
	0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .y);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x32, 0x33, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x30, 0x20, 0x2b, 0x20, // _2308 = _1560 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, // (float3(1.5, 1.5
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.0) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, // u_light[4].y);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, //    _4974 = (((((
	0x5f, 0x32, 0x32, 0x37, 0x32, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, // _2272 + step(_22
	0x37, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 76.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, 0x2e, // nal_shadow_map1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, // onal_shadow_map1
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x37, 0x36, 0x2e, 0x78, // Sampler, _2276.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // y).x)) + step(_2
	0x32, 0x38, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // 284.z, s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x31, // onal_shadow_map1
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // .sample(s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x38, 0x34, 0x2e, // 1Sampler, _2284.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // xy).x)) + step(_
	0x32, 0x32, 0x39, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // 2292.z, s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // 1.sample(s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x39, 0x32, // p1Sampler, _2292
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // .xy).x)) + step(
	0x5f, 0x32, 0x33, 0x30, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // _2300.z, s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // p1.sample(s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x30, // ap1Sampler, _230
	0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // 0.xy).x)) + step
	0x28, 0x5f, 0x32, 0x33, 0x30, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // (_2308.z, s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, // ap1.sample(s_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, // ectional_shadow_
	0x6d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x33, // map1Sampler, _23
	0x30, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, // 08.xy).x)) * 0.0
	0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 625;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, //              if 
	0x28, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x7a, 0x29, 0x20, // ((-in.v_view.z) 
	0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // < _mtl_u.u_light
	0x5b, 0x35, 0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [5].z).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x38, //      float3 _158
	0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x64, 0x69, // 0 = (_mtl_u.u_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // rectional_shadow
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x32, 0x5d, 0x20, 0x2a, 0x20, // _transform[2] * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // float4(in.v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // tion, 1.0)).xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x32, 0x37, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, // _2724 = _1580 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, // (float3(-1.5, -1
	0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 0.0) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, // u.u_light[4].y);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x32, 0x37, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, // _2732 = _1580 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, // (float3(-1.5, -0
	0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 0.0) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, // u.u_light[4].y);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x32, 0x37, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, // _2740 = _1580 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // (float3(-1.5, 0.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 0.0) * _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // .u_light[4].y);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x32, 0x37, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, // 2748 = _1580 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, // float3(-1.5, 1.5
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.0) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, // u_light[4].y);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x37, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // 756 = _1580 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, // loat3(-0.5, -1.5
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.0) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, // u_light[4].y);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x37, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // 764 = _1580 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, // loat3(-0.5, -0.5
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.0) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, // u_light[4].y);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x37, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // 772 = _1580 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, // loat3(-0.5, 0.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, //       float3 _27
	0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // 80 = _1580 + (fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, // oat3(-0.5, 1.5, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.0) * _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // light[4].y);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, 0x38, //      float3 _278
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // 8 = _1580 + (flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, // at3(0.5, -1.5, 0
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .0) * _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ight[4].y);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, 0x39, 0x36, //     float3 _2796
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  = _1580 + (floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // t3(0.5, -0.5, 0.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 0) * _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ght[4].y);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x34, 0x20, //    float3 _2804 
	0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // = _1580 + (float
	0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 3(0.5, 0.5, 0.0)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t[4].y);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x28, //  float _2808 = (
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x37, // ((((((((step(_27
	0x32, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 24.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, // nal_shadow_map2.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, // onal_shadow_map2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x37, 0x32, 0x34, 0x2e, 0x78, // Sampler, _2724.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x37, // y).x) + step(_27
	0x33, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 32.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, // nal_shadow_map2.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, // onal_shadow_map2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x37, 0x33, 0x32, 0x2e, 0x78, // Sampler, _2732.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // y).x)) + step(_2
	0x37, 0x34, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // 740.z, s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, // onal_shadow_map2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // .sample(s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x37, 0x34, 0x30, 0x2e, // 2Sampler, _2740.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // xy).x)) + step(_
	0x32, 0x37, 0x34, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // 2748.z, s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // 2.sample(s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x37, 0x34, 0x38, // p2Sampler, _2748
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // .xy).x)) + step(
	0x5f, 0x32, 0x37, 0x35, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // _2756.z, s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // p2.sample(s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x37, 0x35, // ap2Sampler, _275
	0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // 6.xy).x)) + step
	0x28, 0x5f, 0x32, 0x37, 0x36, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, // (_2764.z, s_dire
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, // ctional_shadow_m
	0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, // ap2.sample(s_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, // ectional_shadow_
	0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x37, // map2Sampler, _27
	0x36, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, // 64.xy).x)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x37, 0x37, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, // p(_2772.z, s_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, // ectional_shadow_
	0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, // map2.sample(s_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // rectional_shadow
	0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, // _map2Sampler, _2
	0x37, 0x37, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // 772.xy).x)) + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x37, 0x38, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, // ep(_2780.z, s_di
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // rectional_shadow
	0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, // _map2.sample(s_d
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // irectional_shado
	0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // w_map2Sampler, _
	0x32, 0x37, 0x38, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // 2780.xy).x)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x37, 0x38, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, // tep(_2788.z, s_d
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // irectional_shado
	0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // w_map2.sample(s_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, // directional_shad
	0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // ow_map2Sampler, 
	0x5f, 0x32, 0x37, 0x38, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, // _2788.xy).x)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x37, 0x39, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, // step(_2796.z, s_
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, // directional_shad
	0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // ow_map2.sample(s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // dow_map2Sampler,
	0x20, 0x5f, 0x32, 0x37, 0x39, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, //  _2796.xy).x)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x38, 0x30, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, //  step(_2804.z, s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // dow_map2.sample(
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // adow_map2Sampler
	0x2c, 0x20, 0x5f, 0x32, 0x38, 0x30, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // , _2804.xy).x);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x32, 0x38, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, // 2812 = _1580 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, // float3(0.5, 1.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, //       float3 _28
	0x32, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // 20 = _1580 + (fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // oat3(1.5, -1.5, 
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.0) * _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // light[4].y);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, 0x32, //      float3 _282
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // 8 = _1580 + (flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, // at3(1.5, -0.5, 0
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .0) * _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ight[4].y);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, 0x33, 0x36, //     float3 _2836
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  = _1580 + (floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, // t3(1.5, 0.5, 0.0
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ) * _mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ht[4].y);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x38, 0x34, 0x34, 0x20, 0x3d, //   float3 _2844 =
	0x20, 0x5f, 0x31, 0x35, 0x38, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  _1580 + (float3
	0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // (1.5, 1.5, 0.0) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].y);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x34, 0x39, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x32, 0x38, // _4974 = (((((_28
	0x30, 0x38, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x38, 0x31, 0x32, 0x2e, // 08 + step(_2812.
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // z, s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, // _shadow_map2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // ple(s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, // l_shadow_map2Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x38, 0x31, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, // pler, _2812.xy).
	0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x38, 0x32, 0x30, // x)) + step(_2820
	0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // .z, s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, // l_shadow_map2.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // mple(s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, 0x61, // al_shadow_map2Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x38, 0x32, 0x30, 0x2e, 0x78, 0x79, 0x29, // mpler, _2820.xy)
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x38, 0x32, // .x)) + step(_282
	0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 8.z, s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, 0x73, // al_shadow_map2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // ample(s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x53, // nal_shadow_map2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x38, 0x32, 0x38, 0x2e, 0x78, 0x79, // ampler, _2828.xy
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x38, // ).x)) + step(_28
	0x33, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 36.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, 0x2e, // nal_shadow_map2.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, // onal_shadow_map2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x38, 0x33, 0x36, 0x2e, 0x78, // Sampler, _2836.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // y).x)) + step(_2
	0x38, 0x34, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // 844.z, s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x32, // onal_shadow_map2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // .sample(s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x38, 0x34, 0x34, 0x2e, // 2Sampler, _2844.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, // xy).x)) * 0.0625
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, //            else.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, //               if
	0x20, 0x28, 0x28, 0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x7a, 0x29, //  ((-in.v_view.z)
	0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  < _mtl_u.u_ligh
	0x74, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t[5].w).        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, // oat3 _1600 = (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // tl_u.u_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, // al_shadow_transf
	0x6f, 0x72, 0x6d, 0x5b, 0x33, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // orm[3] * float4(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, // in.v_position, 1
	0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0)).xyz;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x32, //       float3 _32
	0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // 60 = _1600 + (fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, // oat3(-1.5, -1.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x33, 0x32, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, //  _3268 = _1600 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, //  (float3(-1.5, -
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 0.5, 0.0) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, // _u.u_light[4].y)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x32, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, // oat3 _3276 = _16
	0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, // 00 + (float3(-1.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 5, 0.5, 0.0) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // mtl_u.u_light[4]
	0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .y);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x32, 0x38, 0x34, 0x20, 0x3d, 0x20, //  float3 _3284 = 
	0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // _1600 + (float3(
	0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // -1.5, 1.5, 0.0) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].y);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x32, 0x39, 0x32, //     float3 _3292
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, //  = _1600 + (floa
	0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, // t3(-0.5, -1.5, 0
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .0) * _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ight[4].y);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x33, 0x33, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, // 3300 = _1600 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // float3(-0.5, -0.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 0.0) * _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, // .u_light[4].y);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x33, 0x20, 0x5f, 0x33, 0x33, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, // t3 _3308 = _1600
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, //  + (float3(-0.5,
	0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, //  0.5, 0.0) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, // l_u.u_light[4].y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x33, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _3316 = _1
	0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, // 600 + (float3(-0
	0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // .5, 1.5, 0.0) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, // _mtl_u.u_light[4
	0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].y);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x33, 0x32, 0x34, 0x20, 0x3d, //   float3 _3324 =
	0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  _1600 + (float3
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // (0.5, -1.5, 0.0)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t[4].y);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x33, 0x33, //      float3 _333
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // 2 = _1600 + (flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, // at3(0.5, -0.5, 0
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .0) * _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ight[4].y);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x33, 0x33, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, // 3340 = _1600 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, // float3(0.5, 0.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x33, 0x33, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, // _3344 = ((((((((
	0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x32, 0x36, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, // (step(_3260.z, s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // dow_map3.sample(
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // adow_map3Sampler
	0x2c, 0x20, 0x5f, 0x33, 0x32, 0x36, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x20, 0x2b, // , _3260.xy).x) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x32, 0x36, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, //  step(_3268.z, s
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, // _directional_sha
	0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // dow_map3.sample(
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // adow_map3Sampler
	0x2c, 0x20, 0x5f, 0x33, 0x32, 0x36, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, // , _3268.xy).x)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x32, 0x37, 0x36, 0x2e, 0x7a, 0x2c, 0x20, // + step(_3276.z, 
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, // s_directional_sh
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // adow_map3.sample
	0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, // (s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadow_map3Sample
	0x72, 0x2c, 0x20, 0x5f, 0x33, 0x32, 0x37, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, // r, _3276.xy).x))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x32, 0x38, 0x34, 0x2e, 0x7a, 0x2c, //  + step(_3284.z,
	0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, //  s_directional_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // hadow_map3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // e(s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // shadow_map3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x32, 0x38, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, // er, _3284.xy).x)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x32, 0x39, 0x32, 0x2e, 0x7a, // ) + step(_3292.z
	0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, // , s_directional_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, // shadow_map3.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // le(s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, // _shadow_map3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x32, 0x39, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, // ler, _3292.xy).x
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x33, 0x30, 0x30, 0x2e, // )) + step(_3300.
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, // z, s_directional
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // _shadow_map3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // ple(s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, // l_shadow_map3Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x30, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, // pler, _3300.xy).
	0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x33, 0x30, 0x38, // x)) + step(_3308
	0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // .z, s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, // l_shadow_map3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // mple(s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, // al_shadow_map3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x30, 0x38, 0x2e, 0x78, 0x79, 0x29, // mpler, _3308.xy)
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x33, 0x31, // .x)) + step(_331
	0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 6.z, s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, // al_shadow_map3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // ample(s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, // nal_shadow_map3S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x31, 0x36, 0x2e, 0x78, 0x79, // ampler, _3316.xy
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x33, // ).x)) + step(_33
	0x32, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 24.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, // nal_shadow_map3.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, // onal_shadow_map3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x32, 0x34, 0x2e, 0x78, // Sampler, _3324.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, // y).x)) + step(_3
	0x33, 0x33, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // 332.z, s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, // onal_shadow_map3
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // .sample(s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x33, 0x32, 0x2e, // 3Sampler, _3332.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // xy).x)) + step(_
	0x33, 0x33, 0x34, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // 3340.z, s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // 3.sample(s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x34, 0x30, // p3Sampler, _3340
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xy).x);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x33, 0x34, //      float3 _334
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // 8 = _1600 + (flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // at3(0.5, 1.5, 0.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 0) * _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ght[4].y);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, //        float3 _3
	0x33, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // 356 = _1600 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x2c, // loat3(1.5, -1.5,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.0) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _light[4].y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x33, 0x33, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x20, 0x2b, //  _3364 = _1600 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, //  (float3(1.5, -0
	0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 0.0) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x3b, // u.u_light[4].y);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x33, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, // at3 _3372 = _160
	0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, // 0 + (float3(1.5,
	0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, //  0.5, 0.0) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, // l_u.u_light[4].y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _3380 = _1
	0x36, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, // 600 + (float3(1.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 5, 1.5, 0.0) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // mtl_u.u_light[4]
	0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .y);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x34, 0x39, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, //  _4974 = (((((_3
	0x33, 0x34, 0x34, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x33, 0x34, 0x38, // 344 + step(_3348
	0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, // .z, s_directiona
	0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, // l_shadow_map3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // mple(s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, 0x61, // al_shadow_map3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x34, 0x38, 0x2e, 0x78, 0x79, 0x29, // mpler, _3348.xy)
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x33, 0x35, // .x)) + step(_335
	0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 6.z, s_direction
	0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, 0x73, // al_shadow_map3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // ample(s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x53, // nal_shadow_map3S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x35, 0x36, 0x2e, 0x78, 0x79, // ampler, _3356.xy
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, 0x33, // ).x)) + step(_33
	0x36, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, // 64.z, s_directio
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, 0x2e, // nal_shadow_map3.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // sample(s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, // onal_shadow_map3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x36, 0x34, 0x2e, 0x78, // Sampler, _3364.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x33, // y).x)) + step(_3
	0x33, 0x37, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, // 372.z, s_directi
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x33, // onal_shadow_map3
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // .sample(s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x37, 0x32, 0x2e, // 3Sampler, _3372.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // xy).x)) + step(_
	0x33, 0x33, 0x38, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, // 3380.z, s_direct
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x70, // ional_shadow_map
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, // 3.sample(s_direc
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x6d, 0x61, // tional_shadow_ma
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x30, // p3Sampler, _3380
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, // .xy).x)) * 0.062
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // reak;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, //    _4974 = 1.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, //      break; // u
	0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, // nreachable worka
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // round.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, // break; // unreac
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, // hable workaround
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, //    break; // unr
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, // eachable workaro
	0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // und.            
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, // }.            br
	0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, // eak; // unreacha
	0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, // ble workaround. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, //        } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // alse);.        _
	0x34, 0x39, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x34, 0x3b, 0x0a, 0x20, 0x20, // 4975 = _4974;.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //   }.    else.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x35, //  {.        _4975
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //  = 1.0;.    }.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x20, 0x3d, //   float4 _1236 =
	0x20, 0x5f, 0x31, 0x31, 0x36, 0x38, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, //  _1168 * float4(
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // fma(_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // ht[1].xyz, _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x2e, // u.u_material[0].
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x39, // xyz, _4977 * _49
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // 75), 1.0);.    o
	0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ut.bgfx_FragData
	0x30, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x31, 0x32, 0x33, 0x36, // 0 = select(_1236
	0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // , mix(_mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x37, 0x5d, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x33, 0x36, 0x2c, 0x20, // ight[7], _1236, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, // float4(fast::cla
	0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // mp((_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, // ht[6].z - distan
	0x63, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ce(_mtl_u.u_ligh
	0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, // t[0].xyz, in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x6d, 0x74, // osition)) / (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x7a, // l_u.u_light[6].z
	0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  - _mtl_u.u_ligh
	0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // t[6].y), 0.0, 1.
	0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // 0))), bool4(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x20, // _u.u_light[6].x 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, // != 0.0));.    re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0xf0, // turn out;.}.....
	0x02,                                                                                           // .
};
