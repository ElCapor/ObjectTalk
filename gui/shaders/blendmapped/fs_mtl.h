static const uint8_t OtBlendMappedFS_mtl[11927] =
{
	0x46, 0x53, 0x48, 0x0b, 0x82, 0x69, 0x6f, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x12, 0x73, // FSH..ioN.......s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _shadowmapSample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x73, 0x68, // r...........s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, // adowmapTexture..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // .........u_light
	0x12, 0x1b, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, 0x74, // ...........s_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // erial1Sampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // ........s_materi
	0x61, 0x6c, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // al1Texture......
	0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x32, // .....s_material2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x32, 0x54, 0x65, 0x78, // ..s_material2Tex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, // ture...........s
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _material3Sample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, // r...........s_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x33, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, // terial3Texture..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, // .........s_mater
	0x69, 0x61, 0x6c, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, // ial4Sampler.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // ......s_material
	0x34, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // 4Texture........
	0x00, 0x00, 0x12, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x35, 0x53, 0x61, // ...s_material5Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, // mpler...........
	0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x35, 0x54, 0x65, 0x78, 0x74, 0x75, // s_material5Textu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6d, // re...........u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x03, 0xb0, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, // aterial.........
	0x00, 0x0b, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x10, 0x00, 0x00, // ..s_shadowmap...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // ........s_materi
	0x61, 0x6c, 0x31, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, // al1...........s_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // material2.......
	0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x33, 0x10, // ....s_material3.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, // ..........s_mate
	0x72, 0x69, 0x61, 0x6c, 0x34, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // rial4...........
	0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x35, 0x10, 0x00, 0x00, 0x00, 0x00, // s_material5.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7a, 0x2c, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // .....z,..#includ
	0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, // e <metal_stdlib>
	0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, // .#include <simd/
	0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, // simd.h>..using n
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, // amespace metal;.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, // .struct _Global.
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // {.    float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x37, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ight[27];.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // oat4 u_material[
	0x33, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // 3];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, // latMtlMain_out.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // .    float4 bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, // _FragData0 [[col
	0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // or(0)]];.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // in.{.    float3 
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // v_normal [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, // oat3 v_position 
	0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, // [[user(locn1)]];
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x73, 0x68, // .    float4 v_sh
	0x61, 0x64, 0x6f, 0x77, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // adow [[user(locn
	0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 2)]];.    float2
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, //  v_texcoord0 [[u
	0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, // ser(locn3)]];.};
	0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // ..fragment xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // tlMain_out xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // tlMain(xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, // in_in in [[stage
	0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, // _in]], constant 
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, // _Global& _mtl_u 
	0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [[buffer(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, // s_shadowmap [[te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, // xture(0)]], text
	0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6d, // ure2d<float> s_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x31, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // aterial1 [[textu
	0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // re(1)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, // 2d<float> s_mate
	0x72, 0x69, 0x61, 0x6c, 0x32, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // rial2 [[texture(
	0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, // 2)]], texture2d<
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, // float> s_materia
	0x6c, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, // l3 [[texture(3)]
	0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, // ], texture2d<flo
	0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x34, 0x20, // at> s_material4 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(4)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x35, 0x20, 0x5b, 0x5b, 0x74, //  s_material5 [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // exture(5)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, // pler s_shadowmap
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, // s_material1Sampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, // er [[sampler(1)]
	0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, // ], sampler s_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // erial2Sampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // sampler(2)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // mpler s_material
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, // 3Sampler [[sampl
	0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // er(3)]], sampler
	0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x34, 0x53, 0x61, 0x6d, 0x70, //  s_material4Samp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, // ler [[sampler(4)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6d, 0x61, // ]], sampler s_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x35, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // terial5Sampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, // [sampler(5)]]).{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // .    xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, // _out out = {};. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, //    float4 _1102 
	0x3d, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x31, 0x2e, 0x73, 0x61, // = s_material1.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x31, // mple(s_material1
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, // Sampler, in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // xcoord0);.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, // oat2 _1041 = in.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x6c, // v_texcoord0 / fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, // oat2(_mtl_u.u_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // terial[0].w);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x20, 0x3d, //   float4 _1111 =
	0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x32, 0x2e, 0x73, 0x61, 0x6d, //  s_material2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x32, 0x53, // ple(s_material2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x31, 0x29, 0x3b, 0x0a, // ampler, _1041);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x30, //     float4 _1120
	0x20, 0x3d, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x33, 0x2e, 0x73, //  = s_material3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // ample(s_material
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x31, 0x29, // 3Sampler, _1041)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, // ;.    float4 _11
	0x32, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x34, // 29 = s_material4
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // .sample(s_materi
	0x61, 0x6c, 0x34, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x34, // al4Sampler, _104
	0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // 1);.    float4 _
	0x31, 0x31, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, // 1138 = s_materia
	0x6c, 0x35, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x65, // l5.sample(s_mate
	0x72, 0x69, 0x61, 0x6c, 0x35, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, // rial5Sampler, _1
	0x30, 0x34, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 041);.    float3
	0x20, 0x5f, 0x31, 0x30, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1081 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, // ormalize(in.v_no
	0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rmal);.    float
	0x33, 0x20, 0x5f, 0x33, 0x34, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, // 3 _3431;.    _34
	0x33, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 31 = ((_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // light[3].xyz * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // mtl_u.u_material
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // [1].xyz) * fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x31, 0x2c, 0x20, // :max(dot(_1081, 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, // _mtl_u.u_light[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, // ].xyz), 0.0)) + 
	0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // ((_mtl_u.u_light
	0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // [3].xyz * _mtl_u
	0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, // .u_material[2].x
	0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // yz) * pow(fast::
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, // max(dot(fast::no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // rmalize(_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, // _light[2].xyz + 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, // _mtl_u.u_light[0
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, // ].xyz - in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x31, 0x29, 0x2c, // ition)), _1081),
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, //  0.0), _mtl_u.u_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, // material[2].w));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x34, 0x33, // .    float3 _343
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, // 6;.    for (int 
	0x5f, 0x33, 0x33, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x32, // _3382 = 0; _3382
	0x20, 0x3c, 0x20, 0x34, 0x3b, 0x20, 0x5f, 0x33, 0x34, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x33, //  < 4; _3431 = _3
	0x34, 0x33, 0x36, 0x2c, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x32, 0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, // 436, _3382++).  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, //   {.        int 
	0x5f, 0x31, 0x32, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x32, 0x20, 0x2a, 0x20, // _1293 = _3382 * 
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, // 4;.        int _
	0x31, 0x32, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x31, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x32, 0x39, // 1294 = 11 + _129
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, // 3;.        int _
	0x31, 0x33, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x31, // 1338 = _1293 + 1
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, // 4;.        if (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, // mtl_u.u_light[_1
	0x32, 0x39, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // 294].w != 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x35, //      float3 _135
	0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // 8 = _mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x5f, 0x31, 0x32, 0x39, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, // ht[_1294].xyz - 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, // in.v_position;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, //  _1360 = length(
	0x5f, 0x31, 0x33, 0x35, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1358);.        
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x32, //     float3 _1362
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  = fast::normali
	0x7a, 0x65, 0x28, 0x5f, 0x31, 0x33, 0x35, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ze(_1358);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x34, //        float _34
	0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 32;.            
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // if (_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x5f, 0x31, 0x33, 0x33, 0x38, 0x5d, 0x2e, 0x77, 0x20, 0x3e, 0x20, 0x30, 0x2e, // ht[_1338].w > 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, // 0).            {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x5f, 0x33, 0x34, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, //  _3432 = fast::c
	0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x33, 0x36, 0x32, 0x2c, // lamp((dot(_1362,
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, //  fast::normalize
	0x28, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // (-_mtl_u.u_light
	0x5b, 0x5f, 0x31, 0x32, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // [_1293 + 14].xyz
	0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // )) - _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x33, 0x33, 0x38, 0x5d, 0x2e, 0x77, 0x29, 0x20, 0x2f, 0x20, // ght[_1338].w) / 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x5f, 0x31, 0x32, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x2d, 0x20, // _1293 + 13].w - 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, // _mtl_u.u_light[_
	0x31, 0x33, 0x33, 0x38, 0x5d, 0x2e, 0x77, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // 1338].w), 0.0, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0);.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //  }.            e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x5f, 0x33, 0x34, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, //   _3432 = 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x33, 0x36, 0x20, 0x3d, //          _3436 =
	0x20, 0x5f, 0x33, 0x34, 0x33, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, //  _3431 + ((((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x32, 0x39, // l_u.u_light[_129
	0x33, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // 3 + 12].xyz * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // tl_u.u_material[
	0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 1].xyz) * fast::
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x31, 0x2c, 0x20, 0x5f, // max(dot(_1081, _
	0x31, 0x33, 0x36, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, // 1362), 0.0)) + (
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x5f, 0x31, 0x32, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // _1293 + 12].xyz 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, // * _mtl_u.u_mater
	0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, // ial[2].xyz) * po
	0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, // w(fast::max(dot(
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x5f, 0x31, 0x33, 0x36, 0x32, 0x20, 0x2b, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, // _1362 + fast::no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // rmalize(_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, // _light[0].xyz - 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x29, 0x2c, // in.v_position)),
	0x20, 0x5f, 0x31, 0x30, 0x38, 0x31, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, //  _1081), 0.0), _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // mtl_u.u_material
	0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, // [2].w))) * (_343
	0x32, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // 2 * (1.0 / fma(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, // mtl_u.u_light[_1
	0x32, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x33, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x31, // 293 + 13].z * _1
	0x33, 0x36, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x30, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // 360, _1360, fma(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, // _mtl_u.u_light[_
	0x31, 0x32, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x33, 0x5d, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x31, // 1293 + 13].y, _1
	0x33, 0x36, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 360, _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x32, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x31, 0x33, 0x5d, 0x2e, // ght[_1293 + 13].
	0x78, 0x29, 0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // x)))));.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x34, //      _3436 = _34
	0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 31;.        }.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, //   }.    float4 _
	0x31, 0x34, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, // 1468 = in.v_shad
	0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ow + float4(floa
	0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t2(-1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, // u.u_light[6].yz,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  0.0, 0.0);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float _3383;.   
	0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  do.    {.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x35, 0x20, 0x3d, //   float3 _1675 =
	0x20, 0x5f, 0x31, 0x34, 0x36, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, //  _1468.xyz / flo
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x34, 0x36, 0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // at3(_1468.w);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, //       if (((any(
	0x5f, 0x31, 0x36, 0x37, 0x35, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _1675.xy < float
	0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, // 2(0.0)) || any(_
	0x31, 0x36, 0x37, 0x35, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 1675.xy > float2
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x37, // (1.0))) || (_167
	0x35, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // 5.z < 0.0)) || (
	0x5f, 0x31, 0x36, 0x37, 0x35, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, // _1675.z > 1.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, //       _3383 = 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // 0;.            b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // reak;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x33, 0x20, 0x3d, 0x20, //         _3383 = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x35, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, // step(_1675.z, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowmap.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, // (s_shadowmapSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x35, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, // ler, _1675.xy).x
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, // );.        break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, // ;.    } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // lse);.    float4
	0x20, 0x5f, 0x31, 0x34, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, //  _1480 = in.v_sh
	0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, // adow + float4(fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, // oat2(-1.5, -0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // t[6].yz, 0.0, 0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, // 0);.    float _3
	0x33, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, // 385;.    do.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // {.        float3
	0x20, 0x5f, 0x31, 0x37, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x30, 0x2e, 0x78, //  _1760 = _1480.x
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x34, 0x38, // yz / float3(_148
	0x30, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 0.w);.        if
	0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x30, 0x2e, 0x78, 0x79, //  (((any(_1760.xy
	0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, //  < float2(0.0)) 
	0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x30, 0x2e, 0x78, 0x79, 0x20, // || any(_1760.xy 
	0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, // > float2(1.0))) 
	0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x30, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, // || (_1760.z < 0.
	0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x30, 0x2e, 0x7a, 0x20, // 0)) || (_1760.z 
	0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // > 1.0)).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, // {.            _3
	0x33, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 385 = 1.0;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x5f, 0x33, 0x33, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x37, // _3385 = step(_17
	0x36, 0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, // 60.z, s_shadowma
	0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p.sample(s_shado
	0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, // wmapSampler, _17
	0x36, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 60.xy).x);.     
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //    break;.    } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // while(false);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x32, 0x20, 0x3d, //   float4 _1492 =
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, //  in.v_shadow + f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, // loat4(float2(-1.
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 0.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, // .u_light[6].yz, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 0.0, 0.0);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat _3387;.    
	0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // do.    {.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x34, 0x20, 0x3d, 0x20, //  float3 _1844 = 
	0x5f, 0x31, 0x34, 0x39, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _1492.xyz / floa
	0x74, 0x33, 0x28, 0x5f, 0x31, 0x34, 0x39, 0x32, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // t3(_1492.w);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, //      if (((any(_
	0x31, 0x38, 0x34, 0x34, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 1844.xy < float2
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, // (0.0)) || any(_1
	0x38, 0x34, 0x34, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 844.xy > float2(
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x34, // 1.0))) || (_1844
	0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, // .z < 0.0)) || (_
	0x31, 0x38, 0x34, 0x34, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, // 1844.z > 1.0)). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, //      _3387 = 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, // ;.            br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // eak;.        }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x73, //        _3387 = s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, // tep(_1844.z, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // hadowmap.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, // s_shadowmapSampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, // er, _1844.xy).x)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, // ;.        break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, // .    } while(fal
	0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // se);.    float4 
	0x5f, 0x31, 0x35, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, // _1504 = in.v_sha
	0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, // dow + float4(flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(-1.5, 1.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  _mtl_u.u_light[
	0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 6].yz, 0.0, 0.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x38, // ;.    float _338
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // 9;.    do.    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x39, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x30, 0x34, 0x2e, 0x78, 0x79, 0x7a, // 1928 = _1504.xyz
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x35, 0x30, 0x34, 0x2e, //  / float3(_1504.
	0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // w);.        if (
	0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x39, 0x32, 0x38, 0x2e, 0x78, 0x79, 0x20, 0x3c, // ((any(_1928.xy <
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, //  float2(0.0)) ||
	0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x39, 0x32, 0x38, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, //  any(_1928.xy > 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, // float2(1.0))) ||
	0x20, 0x28, 0x5f, 0x31, 0x39, 0x32, 0x38, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, //  (_1928.z < 0.0)
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x32, 0x38, 0x2e, 0x7a, 0x20, 0x3e, 0x20, // ) || (_1928.z > 
	0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // 1.0)).        {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x38, //             _338
	0x39, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 9 = 1.0;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, //     }.        _3
	0x33, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x32, 0x38, // 389 = step(_1928
	0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, // .z, s_shadowmap.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, // sample(s_shadowm
	0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x32, 0x38, // apSampler, _1928
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .xy).x);.       
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, //  break;.    } wh
	0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ile(false);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x35, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x69, // float4 _1516 = i
	0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, // n.v_shadow + flo
	0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, // at4(float2(-0.5,
	0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -1.5) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, // u_light[6].yz, 0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .0, 0.0);.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, // oat _3391;.    d
	0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // o.    {.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x5f, // float3 _2012 = _
	0x31, 0x35, 0x31, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1516.xyz / float
	0x33, 0x28, 0x5f, 0x31, 0x35, 0x31, 0x36, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3(_1516.w);.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, //     if (((any(_2
	0x30, 0x31, 0x32, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 012.xy < float2(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x30, // 0.0)) || any(_20
	0x31, 0x32, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 12.xy > float2(1
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x32, 0x2e, // .0))) || (_2012.
	0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, // z < 0.0)) || (_2
	0x30, 0x31, 0x32, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 012.z > 1.0)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, //     _3391 = 1.0;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, // .            bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ak;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x74, //       _3391 = st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // ep(_2012.z, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // adowmap.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _shadowmapSample
	0x72, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, // r, _2012.xy).x);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, // .        break;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, //     } while(fals
	0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // e);.    float4 _
	0x31, 0x35, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, // 1528 = in.v_shad
	0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ow + float4(floa
	0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t2(-0.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, // u.u_light[6].yz,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  0.0, 0.0);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float _3393;.   
	0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  do.    {.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x30, 0x39, 0x36, 0x20, 0x3d, //   float3 _2096 =
	0x20, 0x5f, 0x31, 0x35, 0x32, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, //  _1528.xyz / flo
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x35, 0x32, 0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // at3(_1528.w);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, //       if (((any(
	0x5f, 0x32, 0x30, 0x39, 0x36, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _2096.xy < float
	0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, // 2(0.0)) || any(_
	0x32, 0x30, 0x39, 0x36, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 2096.xy > float2
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x30, 0x39, // (1.0))) || (_209
	0x36, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // 6.z < 0.0)) || (
	0x5f, 0x32, 0x30, 0x39, 0x36, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, // _2096.z > 1.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, //       _3393 = 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // 0;.            b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // reak;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x33, 0x20, 0x3d, 0x20, //         _3393 = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x30, 0x39, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, // step(_2096.z, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowmap.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, // (s_shadowmapSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x39, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, // ler, _2096.xy).x
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, // );.        break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, // ;.    } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // lse);.    float4
	0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, //  _1540 = in.v_sh
	0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, // adow + float4(fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // oat2(-0.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // [6].yz, 0.0, 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, // );.    float _33
	0x39, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // 95;.    do.    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x32, 0x31, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x34, 0x30, 0x2e, 0x78, 0x79, // _2180 = _1540.xy
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x35, 0x34, 0x30, // z / float3(_1540
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // .w);.        if 
	0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x30, 0x2e, 0x78, 0x79, 0x20, // (((any(_2180.xy 
	0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // < float2(0.0)) |
	0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3e, // | any(_2180.xy >
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, //  float2(1.0))) |
	0x7c, 0x20, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x30, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // | (_2180.z < 0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x30, 0x2e, 0x7a, 0x20, 0x3e, // )) || (_2180.z >
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //  1.0)).        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, // .            _33
	0x39, 0x35, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 95 = 1.0;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //      }.        _
	0x33, 0x33, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, // 3395 = step(_218
	0x30, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, // 0.z, s_shadowmap
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x38, // mapSampler, _218
	0x30, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.xy).x);.      
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //   break;.    } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x32, 0x20, 0x3d, 0x20, //  float4 _1552 = 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, // in.v_shadow + fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, // oat4(float2(-0.5
	0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 1.5) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, // u_light[6].yz, 0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .0, 0.0);.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, // oat _3397;.    d
	0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // o.    {.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x5f, // float3 _2264 = _
	0x31, 0x35, 0x35, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1552.xyz / float
	0x33, 0x28, 0x5f, 0x31, 0x35, 0x35, 0x32, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3(_1552.w);.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, //     if (((any(_2
	0x32, 0x36, 0x34, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 264.xy < float2(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x32, // 0.0)) || any(_22
	0x36, 0x34, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 64.xy > float2(1
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x34, 0x2e, // .0))) || (_2264.
	0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, // z < 0.0)) || (_2
	0x32, 0x36, 0x34, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 264.z > 1.0)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, //     _3397 = 1.0;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, // .            bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ak;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x73, 0x74, //       _3397 = st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // ep(_2264.z, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // adowmap.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _shadowmapSample
	0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x36, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, // r, _2264.xy).x);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, // .        break;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, //     } while(fals
	0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // e);.    float4 _
	0x31, 0x35, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, // 1564 = in.v_shad
	0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ow + float4(floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(0.5, -1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, // _mtl_u.u_light[6
	0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, // ].yz, 0.0, 0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x39, // .    float _3399
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // ;.    do.    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x33, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, // 348 = _1564.xyz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x34, 0x2e, 0x77, // / float3(_1564.w
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // );.        if ((
	0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x33, 0x34, 0x38, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, // (any(_2348.xy < 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // float2(0.0)) || 
	0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x33, 0x34, 0x38, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, // any(_2348.xy > f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // loat2(1.0))) || 
	0x28, 0x5f, 0x32, 0x33, 0x34, 0x38, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // (_2348.z < 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x33, 0x34, 0x38, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, //  || (_2348.z > 1
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .0)).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x39, //            _3399
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = 1.0;.        
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x33, //    }.        _33
	0x39, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x33, 0x34, 0x38, 0x2e, // 99 = step(_2348.
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, // z, s_shadowmap.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, // ample(s_shadowma
	0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x34, 0x38, 0x2e, // pSampler, _2348.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xy).x);.        
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, // break;.    } whi
	0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // le(false);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x69, 0x6e, // loat4 _1576 = in
	0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .v_shadow + floa
	0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, // t4(float2(0.5, -
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, // light[6].yz, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // , 0.0);.    floa
	0x74, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // t _3401;.    do.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x34, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, // oat3 _2432 = _15
	0x37, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 76.xyz / float3(
	0x5f, 0x31, 0x35, 0x37, 0x36, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1576.w);.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x34, 0x33, //   if (((any(_243
	0x32, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 2.xy < float2(0.
	0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x34, 0x33, 0x32, // 0)) || any(_2432
	0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, // .xy > float2(1.0
	0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x34, 0x33, 0x32, 0x2e, 0x7a, 0x20, // ))) || (_2432.z 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x34, 0x33, // < 0.0)) || (_243
	0x32, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 2.z > 1.0)).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, //   _3401 = 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, //     _3401 = step
	0x28, 0x5f, 0x32, 0x34, 0x33, 0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // (_2432.z, s_shad
	0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // owmap.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // hadowmapSampler,
	0x20, 0x5f, 0x32, 0x34, 0x33, 0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, //  _2432.xy).x);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, //   } while(false)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x35, // ;.    float4 _15
	0x38, 0x38, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // 88 = in.v_shadow
	0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, //  + float4(float2
	0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // (0.5) * _mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, // _light[6].yz, 0.
	0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0, 0.0);.    flo
	0x61, 0x74, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, // at _3403;.    do
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .    {.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x35, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, // loat3 _2516 = _1
	0x35, 0x38, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 588.xyz / float3
	0x28, 0x5f, 0x31, 0x35, 0x38, 0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // (_1588.w);.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x35, //    if (((any(_25
	0x31, 0x36, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // 16.xy < float2(0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x35, 0x31, // .0)) || any(_251
	0x36, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, // 6.xy > float2(1.
	0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x31, 0x36, 0x2e, 0x7a, // 0))) || (_2516.z
	0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x35, //  < 0.0)) || (_25
	0x31, 0x36, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, // 16.z > 1.0)).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, //    _3403 = 1.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // k;.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, //      _3403 = ste
	0x70, 0x28, 0x5f, 0x32, 0x35, 0x31, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // p(_2516.z, s_sha
	0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // dowmap.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // shadowmapSampler
	0x2c, 0x20, 0x5f, 0x32, 0x35, 0x31, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, // , _2516.xy).x);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, //    } while(false
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, // );.    float4 _1
	0x36, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 600 = in.v_shado
	0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // w + float4(float
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // 2(0.5, 1.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, // tl_u.u_light[6].
	0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // yz, 0.0, 0.0);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x35, 0x3b, 0x0a, //    float _3405;.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //     do.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x36, 0x30, //      float3 _260
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, // 0 = _1600.xyz / 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x36, 0x30, 0x30, 0x2e, 0x77, 0x29, 0x3b, // float3(_1600.w);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, // .        if (((a
	0x6e, 0x79, 0x28, 0x5f, 0x32, 0x36, 0x30, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, // ny(_2600.xy < fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, // oat2(0.0)) || an
	0x79, 0x28, 0x5f, 0x32, 0x36, 0x30, 0x30, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, // y(_2600.xy > flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, // at2(1.0))) || (_
	0x32, 0x36, 0x30, 0x30, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // 2600.z < 0.0)) |
	0x7c, 0x20, 0x28, 0x5f, 0x32, 0x36, 0x30, 0x30, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, // | (_2600.z > 1.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // )).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x35, 0x20, 0x3d, //          _3405 =
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  1.0;.          
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x35, //  }.        _3405
	0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x36, 0x30, 0x30, 0x2e, 0x7a, 0x2c, //  = step(_2600.z,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, //  s_shadowmap.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, // ple(s_shadowmapS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x36, 0x30, 0x30, 0x2e, 0x78, 0x79, // ampler, _2600.xy
	0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, // ).x);.        br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, // eak;.    } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // (false);.    flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, // at4 _1612 = in.v
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // _shadow + float4
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, // (float2(1.5, -1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 5) * _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // ght[6].yz, 0.0, 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0.0);.    float 
	0x5f, 0x33, 0x34, 0x30, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, // _3407;.    do.  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   {.        floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x36, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x32, // t3 _2684 = _1612
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, // .xyz / float3(_1
	0x36, 0x31, 0x32, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 612.w);.        
	0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x36, 0x38, 0x34, 0x2e, // if (((any(_2684.
	0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, // xy < float2(0.0)
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x36, 0x38, 0x34, 0x2e, 0x78, // ) || any(_2684.x
	0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, // y > float2(1.0))
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x36, 0x38, 0x34, 0x2e, 0x7a, 0x20, 0x3c, 0x20, // ) || (_2684.z < 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x36, 0x38, 0x34, 0x2e, // 0.0)) || (_2684.
	0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z > 1.0)).      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x33, 0x34, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _3407 = 1.0;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, //   _3407 = step(_
	0x32, 0x36, 0x38, 0x34, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // 2684.z, s_shadow
	0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // map.sample(s_sha
	0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // dowmapSampler, _
	0x32, 0x36, 0x38, 0x34, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 2684.xy).x);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, // } while(false);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x34, //     float4 _1624
	0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, //  = in.v_shadow +
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, //  float4(float2(1
	0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // .5, -0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, // _u.u_light[6].yz
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // , 0.0, 0.0);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x39, 0x3b, 0x0a, 0x20, 0x20, //  float _3409;.  
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //   do.    {.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, 0x36, 0x38, 0x20, //    float3 _2768 
	0x3d, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // = _1624.xyz / fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x34, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, // oat3(_1624.w);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, //        if (((any
	0x28, 0x5f, 0x32, 0x37, 0x36, 0x38, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (_2768.xy < floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, // t2(0.0)) || any(
	0x5f, 0x32, 0x37, 0x36, 0x38, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _2768.xy > float
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x37, // 2(1.0))) || (_27
	0x36, 0x38, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // 68.z < 0.0)) || 
	0x28, 0x5f, 0x32, 0x37, 0x36, 0x38, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // (_2768.z > 1.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x31, //        _3409 = 1
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0;.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // break;.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x39, 0x20, 0x3d, // .        _3409 =
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x37, 0x36, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x73, //  step(_2768.z, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _shadowmap.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, // e(s_shadowmapSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x37, 0x36, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2e, // pler, _2768.xy).
	0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, // x);.        brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, // k;.    } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alse);.    float
	0x34, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, // 4 _1636 = in.v_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, // hadow + float4(f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // loat2(1.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // [6].yz, 0.0, 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x34, // );.    float _34
	0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // 11;.    do.    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x32, 0x38, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x33, 0x36, 0x2e, 0x78, 0x79, // _2852 = _1636.xy
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x36, 0x33, 0x36, // z / float3(_1636
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // .w);.        if 
	0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x32, 0x2e, 0x78, 0x79, 0x20, // (((any(_2852.xy 
	0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // < float2(0.0)) |
	0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x32, 0x2e, 0x78, 0x79, 0x20, 0x3e, // | any(_2852.xy >
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, //  float2(1.0))) |
	0x7c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x32, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // | (_2852.z < 0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x32, 0x2e, 0x7a, 0x20, 0x3e, // )) || (_2852.z >
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //  1.0)).        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x34, // .            _34
	0x31, 0x31, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 11 = 1.0;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //      }.        _
	0x33, 0x34, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x38, 0x35, // 3411 = step(_285
	0x32, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, // 2.z, s_shadowmap
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x38, 0x35, // mapSampler, _285
	0x32, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2.xy).x);.      
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //   break;.    } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x38, 0x20, 0x3d, 0x20, //  float4 _1648 = 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, // in.v_shadow + fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, // oat4(float2(1.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // t[6].yz, 0.0, 0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, // 0);.    float _3
	0x34, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, // 413;.    do.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // {.        float3
	0x20, 0x5f, 0x32, 0x39, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x34, 0x38, 0x2e, 0x78, //  _2936 = _1648.x
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x36, 0x34, // yz / float3(_164
	0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 8.w);.        if
	0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x39, 0x33, 0x36, 0x2e, 0x78, 0x79, //  (((any(_2936.xy
	0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, //  < float2(0.0)) 
	0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x39, 0x33, 0x36, 0x2e, 0x78, 0x79, 0x20, // || any(_2936.xy 
	0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, // > float2(1.0))) 
	0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x39, 0x33, 0x36, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, // || (_2936.z < 0.
	0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x39, 0x33, 0x36, 0x2e, 0x7a, 0x20, // 0)) || (_2936.z 
	0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // > 1.0)).        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, // {.            _3
	0x34, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 413 = 1.0;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x5f, 0x33, 0x34, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x39, // _3413 = step(_29
	0x33, 0x36, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, // 36.z, s_shadowma
	0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p.sample(s_shado
	0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x39, // wmapSampler, _29
	0x33, 0x36, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 36.xy).x);.     
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //    break;.    } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, // while(false);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x32, 0x20, 0x3d, //   float4 _1172 =
	0x20, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, //  ((((_1111 * (((
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x2e, 0x78, 0x29, 0x20, 0x2d, // 1.0 - _1102.x) -
	0x20, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x2e, 0x79, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x31, 0x30, //  _1102.y) - _110
	0x32, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x30, 0x20, 0x2a, // 2.z)) + (_1120 *
	0x20, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x31, //  _1102.x)) + (_1
	0x31, 0x32, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x2e, 0x79, 0x29, 0x29, 0x20, // 129 * _1102.y)) 
	0x2b, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x33, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x32, // + (_1138 * _1102
	0x2e, 0x7a, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6d, // .z)) * float4(fm
	0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // a(_mtl_u.u_light
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // [1].xyz, _mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // u_material[0].xy
	0x7a, 0x2c, 0x20, 0x5f, 0x33, 0x34, 0x33, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, // z, _3431 * ((_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x78, // l_u.u_light[6].x
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, //  != 0.0) ? (((((
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, 0x33, 0x38, 0x33, // (((((((((((_3383
	0x20, 0x2b, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x33, 0x38, //  + _3385) + _338
	0x37, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x33, 0x38, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, // 7) + _3389) + _3
	0x33, 0x39, 0x31, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x33, 0x29, 0x20, 0x2b, 0x20, // 391) + _3393) + 
	0x5f, 0x33, 0x33, 0x39, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x37, 0x29, 0x20, // _3395) + _3397) 
	0x2b, 0x20, 0x5f, 0x33, 0x33, 0x39, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x31, // + _3399) + _3401
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x33, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x34, // ) + _3403) + _34
	0x30, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x34, 0x30, 0x37, 0x29, 0x20, 0x2b, 0x20, 0x5f, // 05) + _3407) + _
	0x33, 0x34, 0x30, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x34, 0x31, 0x31, 0x29, 0x20, 0x2b, // 3409) + _3411) +
	0x20, 0x5f, 0x33, 0x34, 0x31, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, //  _3413) * 0.0625
	0x29, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // ) : 1.0)), 1.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, // .    out.bgfx_Fr
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, // agData0 = select
	0x28, 0x5f, 0x31, 0x31, 0x37, 0x32, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // (_1172, mix(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x35, 0x5d, 0x2c, 0x20, 0x5f, // _u.u_light[5], _
	0x31, 0x31, 0x37, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x61, 0x73, // 1172, float4(fas
	0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // t::clamp((_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, // .u_light[4].z - 
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // distance(_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // u_light[0].xyz, 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x29, 0x20, // in.v_position)) 
	0x2f, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // / (_mtl_u.u_ligh
	0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // t[4].z - _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x30, // u_light[4].y), 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, // .0, 1.0))), bool
	0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // 4(_mtl_u.u_light
	0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // [4].x != 0.0));.
	0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, //     return out;.
	0x7d, 0x0a, 0x0a, 0x00, 0x00, 0xa0, 0x02,                                                       // }......
};
