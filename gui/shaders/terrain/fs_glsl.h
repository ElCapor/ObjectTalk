static const uint8_t OtTerrainFS_glsl[10468] =
{
	0x46, 0x53, 0x48, 0x0b, 0x5d, 0x29, 0x5e, 0x82, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0a, 0x75, // FSH.])^........u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x02, 0x05, 0x00, 0x00, 0x05, 0x00, 0x00, // _material.......
	0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x00, // ....s_shadowmap.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ..........u_ligh
	0x74, 0x02, 0x09, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x75, 0x5f, 0x74, 0x65, // t...........u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x02, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, // rrain...........
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, // s_texture_region
	0x5f, 0x31, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, // _1...........s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x00, // exture_region_2.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x00, 0x01, 0x00, 0x00, // ure_region_3....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .......s_texture
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // _region_4.......
	0x00, 0x00, 0x00, 0x0c, 0x28, 0x00, 0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // ....(..varying v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, // ec3 v_normal;.va
	0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, // rying vec4 v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // ition;.varying v
	0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x3b, 0x0a, 0x75, 0x6e, // ec4 v_shadow;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, // iform vec4 u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x35, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // erial[5];.unifor
	0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x73, 0x68, // m sampler2D s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // adowmap;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x39, 0x5d, //  vec4 u_light[9]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x37, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // _terrain[7];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, // form sampler2D s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x31, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // 1;.uniform sampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, // er2D s_texture_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // egion_2;.uniform
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, //  sampler2D s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x3b, 0x0a, 0x75, // ture_region_3;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, //  s_texture_regio
	0x6e, 0x5f, 0x34, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, // n_4;.void main (
	0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, // ).{.  vec3 terra
	0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, // inColor_1;.  flo
	0x61, 0x74, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, // at slope_2;.  if
	0x20, 0x28, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, //  ((bool(u_terrai
	0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, // n[0].y) && (v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // sition.y <= 0.0)
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, // )) {.    discard
	0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x62, 0x6f, // ;.  };.  if ((bo
	0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, // ol(u_terrain[0].
	0x7a, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // z) && (v_positio
	0x6e, 0x2e, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, // n.y >= 0.0))) {.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x20, 0x20, 0x7d, //     discard;.  }
	0x3b, 0x0a, 0x20, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, // ;.  slope_2 = ((
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // 1.0 - normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x31, // v_normal).y) * 1
	0x2e, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, // .7);.  if ((v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // sition.y < u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // rain[1].x)) {.  
	0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, //   vec3 tmpvar_3;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, // .    if (bool(u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, // terrain[3].w)) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, // .      tmpvar_3 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, // = texture2D (s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2c, // exture_region_1,
	0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, //  (v_position.xz 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // / u_terrain[0].x
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, // )).xyz;.    } el
	0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // se {.      tmpva
	0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // r_3 = u_terrain[
	0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, // 3].xyz;.    };. 
	0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, //    terrainColor_
	0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, // 1 = tmpvar_3;.  
	0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // } else {.    if 
	0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x3c, // ((v_position.y <
	0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, //  (u_terrain[1].x
	0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, //  + u_terrain[2].
	0x78, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, // x))) {.      vec
	0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3 tmpvar_4;.    
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, //   if (bool(u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // rain[3].w)) {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, //       tmpvar_4 =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, //  texture2D (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x2c, 0x20, // xture_region_1, 
	0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, // (v_position.xz /
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, //  u_terrain[0].x)
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // ).xyz;.      } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, // lse {.        tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // pvar_4 = u_terra
	0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // in[3].xyz;.     
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //  };.      vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // mpvar_5;.      i
	0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // f (bool(u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // n[4].w)) {.     
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x65, //    tmpvar_5 = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // xture2D (s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, // re_region_2, (v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, // position.xz / u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, // terrain[0].x)).x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, // yz;.      } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //  {.        tmpva
	0x72, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // r_5 = u_terrain[
	0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, // 4].xyz;.      };
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, // .      terrainCo
	0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, // lor_1 = mix (tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2c, // var_4, tmpvar_5,
	0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, //  ((v_position.y 
	0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, // - u_terrain[1].x
	0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, // ) / u_terrain[2]
	0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, // .x));.    } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, //  {.      if ((v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, // position.y < u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x7b, 0x0a, // errain[1].y)) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, //         vec3 tmp
	0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // var_6;.        i
	0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // f (bool(u_terrai
	0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // n[4].w)) {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, //      tmpvar_6 = 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, // texture2D (s_tex
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, // ture_region_2, (
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, // v_position.xz / 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[0].x))
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, // .xyz;.        } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // else {.         
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, //  tmpvar_6 = u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // rrain[4].xyz;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       };.       
	0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, //  terrainColor_1 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // = tmpvar_6;.    
	0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //   } else {.     
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //    if ((v_positi
	0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // on.y < (u_terrai
	0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // n[1].y + u_terra
	0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // in[2].y))) {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //        vec3 tmpv
	0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_7;.          
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x3b, 0x0a, 0x20, // vec3 tmpvar_8;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //          tmpvar_
	0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, // 8 = normalize(v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // normal);.       
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, //    if (bool(u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // rrain[4].w)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //            vec3 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // blending_9;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, //         vec3 tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_10;.        
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, //     tmpvar_10 = 
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, // normalize(max (a
	0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x29, 0x2c, 0x20, 0x31, 0x65, // bs(tmpvar_8), 1e
	0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // -05));.         
	0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x39, 0x20, 0x3d, 0x20, //    blending_9 = 
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, // (tmpvar_10 / vec
	0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x78, 0x20, // 3(((tmpvar_10.x 
	0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x79, 0x29, 0x20, 0x2b, // + tmpvar_10.y) +
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, //  tmpvar_10.z)));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, // .            tmp
	0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // var_7 = (((textu
	0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // re2D (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // region_2, .     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, //          (v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // tion.yz / u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ain[0].x).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, //       ).xyz * bl
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x39, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, // ending_9.x) + (t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // exture2D (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, // ure_region_2, . 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, //              (v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, // position.xz / u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, // terrain[0].x).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, //           ).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x39, 0x2e, 0x79, 0x29, 0x29, // * blending_9.y))
	0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, //  + (texture2D (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, // 2, (v_position.x
	0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // y / u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, // .x)).xyz * blend
	0x69, 0x6e, 0x67, 0x5f, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ing_9.z));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, //      } else {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x37, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, // _7 = u_terrain[4
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ].xyz;.         
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, //  };.          ve
	0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, // c3 tmpvar_11;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, //         vec3 tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // var_12;.        
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x6e, 0x6f, //   tmpvar_12 = no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // rmalize(v_normal
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // );.          if 
	0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // (bool(u_terrain[
	0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5].w)) {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, //      vec3 blendi
	0x6e, 0x67, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ng_13;.         
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //    vec3 tmpvar_1
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // 4;.            t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // mpvar_14 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, // lize(max (abs(tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, // pvar_12), 1e-05)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // );.            b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, // lending_13 = (tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, // pvar_14 / vec3((
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, // (tmpvar_14.x + t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, // mpvar_14.y) + tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // pvar_14.z)));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // _11 = (((texture
	0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // 2D (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // gion_3, .       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, //        (v_positi
	0x6f, 0x6e, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // on.yz / u_terrai
	0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n[0].x).        
	0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, //     ).xyz * blen
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x33, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, // ding_13.x) + (te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // xture2D (s_textu
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, // re_region_3, .  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, //             (v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, // osition.xz / u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, // errain[0].x).   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, //          ).xyz *
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x33, 0x2e, 0x79, 0x29, 0x29, //  blending_13.y))
	0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, //  + (texture2D (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, // 3, (v_position.x
	0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // y / u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, // .x)).xyz * blend
	0x69, 0x6e, 0x67, 0x5f, 0x31, 0x33, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ing_13.z));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, //       } else {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //            tmpva
	0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // r_11 = u_terrain
	0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [5].xyz;.       
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    };.          
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x3b, 0x0a, // vec3 tmpvar_15;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, // _15 = mix (tmpva
	0x72, 0x5f, 0x37, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2c, 0x20, // r_7, tmpvar_11, 
	0x73, 0x6c, 0x6f, 0x70, 0x65, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // slope_2);.      
	0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //     vec3 tmpvar_
	0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 16;.          if
	0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, //  (bool(u_terrain
	0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [4].w)) {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x20, //       tmpvar_16 
	0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, // = texture2D (s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, // exture_region_2,
	0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, //  (v_position.xz 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // / u_terrain[0].x
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )).xyz;.        
	0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //   } else {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, //        tmpvar_16
	0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, //  = u_terrain[4].
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // xyz;.          }
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, 0x72, // ;.          terr
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, // ainColor_1 = mix
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x2c, 0x20, 0x74, 0x6d, 0x70, //  (tmpvar_16, tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2c, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, // var_15, ((v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // tion.y - u_terra
	0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // in[1].y) / u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rain[2].y));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, //      } else {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, //         if ((v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, // osition.y < u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // rrain[1].z)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, //            vec3 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_17;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //        vec3 tmpv
	0x61, 0x72, 0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_18;.         
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x6e, //    tmpvar_18 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ormalize(v_norma
	0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // l);.            
	0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // if (bool(u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // in[4].w)) {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, //           vec3 b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // lending_19;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //           vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_20;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //         tmpvar_2
	0x30, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, // 0 = normalize(ma
	0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, // x (abs(tmpvar_18
	0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ), 1e-05));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, //           blendi
	0x6e, 0x67, 0x5f, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ng_19 = (tmpvar_
	0x32, 0x30, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, // 20 / vec3(((tmpv
	0x61, 0x72, 0x5f, 0x32, 0x30, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ar_20.x + tmpvar
	0x5f, 0x32, 0x30, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // _20.y) + tmpvar_
	0x32, 0x30, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 20.z)));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, //        tmpvar_17
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, //  = (((texture2D 
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n_2, .          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, //       (v_positio
	0x6e, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // n.yz / u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [0].x).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, //      ).xyz * ble
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, // nding_19.x) + (t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // exture2D (s_text
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, // ure_region_2, . 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, //                (
	0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, // v_position.xz / 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, // u_terrain[0].x).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, //               ).
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, // xyz * blending_1
	0x39, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // 9.y)) + (texture
	0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // 2D (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // gion_2, (v_posit
	0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // ion.xy / u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, // in[0].x)).xyz * 
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x39, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // blending_19.z));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // .            } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse {.          
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, //     tmpvar_17 = 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // u_terrain[4].xyz
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, // ;.            };
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, // .            vec
	0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 3 tmpvar_21;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, //          vec3 tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // pvar_22;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x32, 0x20, 0x3d, //      tmpvar_22 =
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, //  normalize(v_nor
	0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mal);.          
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, //   if (bool(u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // rain[5].w)) {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x33, 0x3b, 0x0a, 0x20, 0x20, //  blending_23;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_24;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // _24 = normalize(
	0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // max (abs(tmpvar_
	0x32, 0x32, 0x29, 0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 22), 1e-05));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, //             blen
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, // ding_23 = (tmpva
	0x72, 0x5f, 0x32, 0x34, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, // r_24 / vec3(((tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, // pvar_24.x + tmpv
	0x61, 0x72, 0x5f, 0x32, 0x34, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // ar_24.y) + tmpva
	0x72, 0x5f, 0x32, 0x34, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // r_24.z)));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //          tmpvar_
	0x32, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // 21 = (((texture2
	0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, // D (s_texture_reg
	0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ion_3, .        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //         (v_posit
	0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // ion.yz / u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // in[0].x).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, //        ).xyz * b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x33, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, // lending_23.x) + 
	0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // (texture2D (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, // xture_region_3, 
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, //  (v_position.xz 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // / u_terrain[0].x
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).              
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, // ).xyz * blending
	0x5f, 0x32, 0x33, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // _23.y)) + (textu
	0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, // re2D (s_texture_
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, // region_3, (v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, // ition.xy / u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, // rain[0].x)).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x33, 0x2e, 0x7a, 0x29, // * blending_23.z)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // );.            }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, //       tmpvar_21 
	0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, // = u_terrain[5].x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // yz;.            
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, // };.            t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, // errainColor_1 = 
	0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2c, 0x20, // mix (tmpvar_17, 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, // tmpvar_21, slope
	0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // _2);.          }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  else {.        
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //     if ((v_posit
	0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // ion.y < (u_terra
	0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // in[1].z + u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // ain[2].z))) {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_25;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, //           vec3 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // mpvar_26;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //         tmpvar_2
	0x36, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, // 6 = normalize(v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // normal);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, //        if (bool(
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x29, 0x29, // u_terrain[4].w))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, //    vec3 blending
	0x5f, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _27;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //      vec3 tmpvar
	0x5f, 0x32, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _28;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x3d, //      tmpvar_28 =
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, //  normalize(max (
	0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, 0x29, 0x2c, 0x20, // abs(tmpvar_26), 
	0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1e-05));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, //          blendin
	0x67, 0x5f, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // g_27 = (tmpvar_2
	0x38, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, // 8 / vec3(((tmpva
	0x72, 0x5f, 0x32, 0x38, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // r_28.x + tmpvar_
	0x32, 0x38, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // 28.y) + tmpvar_2
	0x38, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 8.z)));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //         tmpvar_2
	0x35, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // 5 = (((texture2D
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // on_2, .         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, //          (v_posi
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // tion.yz / u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ain[0].x).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, //           ).xyz 
	0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x37, 0x2e, 0x78, 0x29, // * blending_27.x)
	0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, //  + (texture2D (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x32, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2, .            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, //       (v_positio
	0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // n.xz / u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [0].x).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, //        ).xyz * b
	0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x32, 0x37, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2b, // lending_27.y)) +
	0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, //  (texture2D (s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2c, // exture_region_2,
	0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x20, //  (v_position.xy 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // / u_terrain[0].x
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, // )).xyz * blendin
	0x67, 0x5f, 0x32, 0x37, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // g_27.z));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, //         } else {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, //  tmpvar_25 = u_t
	0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // errain[4].xyz;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, //              };.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, //               ve
	0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x3b, 0x0a, 0x20, 0x20, // c3 tmpvar_29;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, //             vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_30;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // _30 = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // v_normal);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, //          if (boo
	0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, // l(u_terrain[5].w
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // )) {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, //      vec3 blendi
	0x6e, 0x67, 0x5f, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ng_31;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, //        vec3 tmpv
	0x61, 0x72, 0x5f, 0x33, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_32;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, //        tmpvar_32
	0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6d, 0x61, 0x78, //  = normalize(max
	0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x29, //  (abs(tmpvar_30)
	0x2c, 0x20, 0x31, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1e-05));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, //            blend
	0x69, 0x6e, 0x67, 0x5f, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ing_31 = (tmpvar
	0x5f, 0x33, 0x32, 0x20, 0x2f, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x28, 0x28, 0x74, 0x6d, 0x70, // _32 / vec3(((tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // var_32.x + tmpva
	0x72, 0x5f, 0x33, 0x32, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // r_32.y) + tmpvar
	0x5f, 0x33, 0x32, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _32.z)));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //           tmpvar
	0x5f, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // _29 = (((texture
	0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, // 2D (s_texture_re
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // gion_3, .       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, //            (v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, // sition.yz / u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // rrain[0].x).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, //             ).xy
	0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x33, 0x31, 0x2e, // z * blending_31.
	0x78, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, // x) + (texture2D 
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // (s_texture_regio
	0x6e, 0x5f, 0x33, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // n_3, .          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //         (v_posit
	0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // ion.xz / u_terra
	0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // in[0].x).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, //          ).xyz *
	0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x33, 0x31, 0x2e, 0x79, 0x29, 0x29, //  blending_31.y))
	0x20, 0x2b, 0x20, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, //  + (texture2D (s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, // _texture_region_
	0x33, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, // 3, (v_position.x
	0x79, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, // y / u_terrain[0]
	0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, // .x)).xyz * blend
	0x69, 0x6e, 0x67, 0x5f, 0x33, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ing_31.z));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, //           } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x75, //    tmpvar_29 = u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // _terrain[5].xyz;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // .              }
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x3b, 0x0a, // vec3 tmpvar_33;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, //               tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, // pvar_33 = mix (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // mpvar_25, tmpvar
	0x5f, 0x32, 0x39, 0x2c, 0x20, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x20, // _29, slope_2);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, //              vec
	0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 3 tmpvar_34;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, //            if (b
	0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, // ool(u_terrain[6]
	0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .w)) {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, //        tmpvar_34
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, //  = texture2D (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x34, // texture_region_4
	0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, // , (v_position.xz
	0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, //  / u_terrain[0].
	0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // x)).xyz;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, //        } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, // tmpvar_34 = u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // rrain[6].xyz;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, //             };. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x72, //              ter
	0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, // rainColor_1 = mi
	0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x2c, 0x20, 0x74, 0x6d, // x (tmpvar_33, tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x2c, 0x20, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, // pvar_34, ((v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // ition.y - u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, // ain[1].z) / u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // rrain[2].z));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, //           } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  {.             
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x3b, //  vec3 tmpvar_35;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // .              i
	0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // f (bool(u_terrai
	0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // n[6].w)) {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //            tmpva
	0x72, 0x5f, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // r_35 = texture2D
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, //  (s_texture_regi
	0x6f, 0x6e, 0x5f, 0x34, 0x2c, 0x20, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // on_4, (v_positio
	0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // n.xz / u_terrain
	0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // [0].x)).xyz;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, //            } els
	0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e {.            
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x20, 0x3d, 0x20, //     tmpvar_35 = 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // u_terrain[6].xyz
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // };.             
	0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, //  terrainColor_1 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // = tmpvar_35;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //          };.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       };.       
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  };.      };.   
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, //  };.  };.  vec4 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // tmpvar_36;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x36, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, // var_36.w = 1.0;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x20, //   tmpvar_36.xyz 
	0x3d, 0x20, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, // = terrainColor_1
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, // ;.  vec4 result_
	0x33, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c, // 37;.  vec3 total
	0x5f, 0x33, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x70, 0x65, 0x63, // _38;.  vec3 spec
	0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ular_39;.  vec3 
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x34, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, // diffuse_40;.  ve
	0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, // c3 tmpvar_41;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x6c, // tmpvar_41 = (u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, // ight[1].xyz * u_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // material[1].xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ;.  vec3 tmpvar_
	0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x32, 0x2e, // 42;.  tmpvar_42.
	0x78, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // x = 0.0;.  tmpva
	0x72, 0x5f, 0x34, 0x32, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, // r_42.y = 0.0;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x32, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x30, 0x2e, // tmpvar_42.z = 0.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x34, 0x30, 0x20, // 0;.  diffuse_40 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x76, // = tmpvar_42;.  v
	0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x3b, 0x0a, 0x20, // ec3 tmpvar_43;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x30, //  tmpvar_43.x = 0
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x2e, // .0;.  tmpvar_43.
	0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // y = 0.0;.  tmpva
	0x72, 0x5f, 0x34, 0x33, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, // r_43.z = 0.0;.  
	0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x74, 0x6d, // specular_39 = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, // pvar_43;.  if (b
	0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, // ool(u_light[2].x
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x69, // )) {.    vec3 li
	0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x34, // ght_direction_44
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // ;.    vec3 tmpva
	0x72, 0x5f, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // r_45;.    tmpvar
	0x5f, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // _45 = normalize(
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, // v_normal);.    v
	0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x36, 0x3b, 0x0a, 0x20, // ec3 tmpvar_46;. 
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x6e, //    tmpvar_46 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ormalize((u_ligh
	0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, // t[0].xyz - v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ition.xyz));.   
	0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  if (bool(u_ligh
	0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // t[3].w)) {.     
	0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, //  light_direction
	0x5f, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // _44 = normalize(
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // (u_light[3].xyz 
	0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x7a, // - v_position.xyz
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, // ));.    } else {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, // .      light_dir
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, // ection_44 = norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, // alize(u_light[3]
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // .xyz);.    };.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, //   float tmpvar_4
	0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x37, // 7;.    tmpvar_47
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6c, 0x69, 0x67, //  = max (dot (lig
	0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x34, 0x34, 0x2c, // ht_direction_44,
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  tmpvar_45), 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x34, // );.    diffuse_4
	0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, // 0 = ((u_light[4]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, // .xyz * u_materia
	0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, // l[2].xyz) * tmpv
	0x61, 0x72, 0x5f, 0x34, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // ar_47);.    if (
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x37, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // (tmpvar_47 > 0.0
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, // )) {.      specu
	0x6c, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, // lar_39 = ((u_lig
	0x68, 0x74, 0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6d, 0x61, // ht[5].xyz * u_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, // terial[3].xyz) *
	0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, //  pow (max (.    
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //     dot (normali
	0x7a, 0x65, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x36, 0x20, 0x2b, 0x20, // ze((tmpvar_46 + 
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, // light_direction_
	0x34, 0x34, 0x29, 0x29, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x35, 0x29, // 44)), tmpvar_45)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x75, // .      , 0.0), u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, // _material[4].x))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // ;.    };.  };.  
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // total_38 = tmpva
	0x72, 0x5f, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, // r_41;.  if (bool
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x38, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, // (u_light[8].x)) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // {.    vec3 shado
	0x77, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x34, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // wCoords_48;.    
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x34, 0x38, 0x20, // shadowCoords_48 
	0x3d, 0x20, 0x28, 0x28, 0x28, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x2e, 0x78, 0x79, // = (((v_shadow.xy
	0x7a, 0x20, 0x2f, 0x20, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x2e, 0x77, 0x29, 0x20, // z / v_shadow.w) 
	0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x20, // * 0.5) + 0.5);. 
	0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, //    vec4 tmpvar_4
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x39, // 9;.    tmpvar_49
	0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, //  = texture2D (s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2c, 0x20, 0x73, 0x68, 0x61, 0x64, 0x6f, // shadowmap, shado
	0x77, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x34, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, // wCoords_48.xy);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //     float tmpvar
	0x5f, 0x35, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x73, 0x68, // _50;.    if ((sh
	0x61, 0x64, 0x6f, 0x77, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x34, 0x38, 0x2e, 0x7a, 0x20, // adowCoords_48.z 
	0x3e, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x39, 0x2e, 0x78, 0x29, 0x29, 0x20, // > tmpvar_49.x)) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, // {.      tmpvar_5
	0x30, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // 0 = 1.0;.    } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // lse {.      tmpv
	0x61, 0x72, 0x5f, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ar_50 = 0.0;.   
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x33, 0x38, //  };.    total_38
	0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x31, 0x20, 0x2b, 0x20, //  = (tmpvar_41 + 
	0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, // ((1.0 - tmpvar_5
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x34, 0x30, // 0) * (diffuse_40
	0x20, 0x2b, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x33, 0x39, 0x29, 0x29, //  + specular_39))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, // );.  } else {.  
	0x20, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6f, //   total_38 = (to
	0x74, 0x61, 0x6c, 0x5f, 0x33, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, // tal_38 + (diffus
	0x65, 0x5f, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x70, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, // e_40 + specular_
	0x33, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, // 39));.  };.  vec
	0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, // 4 tmpvar_51;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x31, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, // mpvar_51.w = 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x31, 0x2e, 0x78, 0x79, // ;.  tmpvar_51.xy
	0x7a, 0x20, 0x3d, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x33, 0x38, 0x3b, 0x0a, 0x20, 0x20, // z = total_38;.  
	0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x3b, 0x0a, // vec4 tmpvar_52;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, //   tmpvar_52 = (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x31, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // mpvar_51 * tmpva
	0x72, 0x5f, 0x33, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, // r_36);.  result_
	0x33, 0x37, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x3b, 0x0a, // 37 = tmpvar_52;.
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, //   if (bool(u_lig
	0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ht[6].x)) {.    
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x33, 0x3b, 0x0a, // vec3 tmpvar_53;.
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x33, 0x20, 0x3d, 0x20, //     tmpvar_53 = 
	0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // (u_light[0].xyz 
	0x2d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x7a, // - v_position.xyz
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x37, // );.    result_37
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, //  = mix (u_light[
	0x37, 0x5d, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x32, 0x2c, 0x20, 0x63, // 7], tmpvar_52, c
	0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, // lamp ((.      (u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x73, 0x71, // _light[6].z - sq
	0x72, 0x74, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, // rt(dot (tmpvar_5
	0x33, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x33, 0x29, 0x29, 0x29, 0x0a, // 3, tmpvar_53))).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x75, //      / .      (u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x75, 0x5f, // _light[6].z - u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // light[6].y).    
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // ), 0.0, 1.0));. 
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, //  };.  gl_FragCol
	0x6f, 0x72, 0x20, 0x3d, 0x20, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x33, 0x37, 0x3b, 0x0a, // or = result_37;.
	0x7d, 0x0a, 0x0a, 0x00,                                                                         // }...
};
