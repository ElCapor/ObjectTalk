static const uint8_t OtGridFS_mtl[1933] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0x87, 0x44, 0x57, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0a, 0x75, // FSH.N.DW.......u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // _viewProj.......
	0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x12, 0x01, 0x40, 0x00, 0x01, 0x00, // ....u_grid..@...
	0x00, 0x00, 0x00, 0x00, 0x51, 0x07, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // ....Q...#include
	0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, //  <metal_stdlib>.
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, // #include <simd/s
	0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, // imd.h>..using na
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, // mespace metal;..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, // struct _Global.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // .    float4x4 u_
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // viewProj;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5b, 0x31, 0x5d, 0x3b, 0x0a, // oat4 u_grid[1];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // tlMain_out.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //  float4 bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, // gData0 [[color(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // )]];.    float g
	0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x5b, 0x5b, 0x64, 0x65, // l_FragDepth [[de
	0x70, 0x74, 0x68, 0x28, 0x61, 0x6e, 0x79, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // pth(any)]];.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // in_in.{.    floa
	0x74, 0x33, 0x20, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // t3 v_far [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, // oat3 v_near [[us
	0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // er(locn1)]];.};.
	0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // .fragment xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // lMain_out xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // lMain(xlatMtlMai
	0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, // n_in in [[stage_
	0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, // in]], constant _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, // Global& _mtl_u [
	0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, // [buffer(0)]]).{.
	0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, //     xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // out out = {};.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x28, //   float _249 = (
	0x2d, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, // -in.v_near.y) / 
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x69, 0x6e, // (in.v_far.y - in
	0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // .v_near.y);.    
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x32, 0x34, 0x39, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // if (_249 < 0.0).
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, //     {.        di
	0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, // scard_fragment()
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ;.    }.    floa
	0x74, 0x33, 0x20, 0x5f, 0x32, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, // t3 _260 = in.v_n
	0x65, 0x61, 0x72, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x66, 0x61, 0x72, // ear + ((in.v_far
	0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x29, 0x20, 0x2a, 0x20, //  - in.v_near) * 
	0x5f, 0x32, 0x34, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _249);.    float
	0x34, 0x20, 0x5f, 0x32, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 4 _268 = _mtl_u.
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // u_viewProj * flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x36, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // at4(_260, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, 0x34, 0x20, //     float3 _274 
	0x3d, 0x20, 0x5f, 0x32, 0x36, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // = _268.xyz / flo
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x32, 0x36, 0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // at3(_268.w);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x32, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, //  float2 _282 = _
	0x32, 0x36, 0x30, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 260.xz / float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5b, 0x30, 0x5d, // _mtl_u.u_grid[0]
	0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // .x);.    float2 
	0x5f, 0x32, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x77, 0x69, 0x64, 0x74, 0x68, 0x28, 0x5f, 0x32, // _284 = fwidth(_2
	0x38, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // 82);.    float2 
	0x5f, 0x32, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, // _293 = abs(fract
	0x28, 0x5f, 0x32, 0x38, 0x32, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // (_282 - float2(0
	0x2e, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // .5)) - float2(0.
	0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x32, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 5)) / _284;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // float _301 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x2e, 0x79, 0x2c, 0x20, 0x31, // t::min(_284.y, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .0);.    float _
	0x33, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, // 304 = fast::min(
	0x5f, 0x32, 0x38, 0x34, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _284.x, 1.0);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x30, 0x38, 0x20, 0x3d, 0x20, //   float4 _308 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x30, 0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // float4(0.3000000
	0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, // 1192092895507812
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, // 5, 0.30000001192
	0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, // 0928955078125, 0
	0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, // .300000011920928
	0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // 955078125, 1.0 -
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, //  fast::min(fast:
	0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x39, 0x33, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x32, 0x39, // :min(_293.x, _29
	0x33, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 3.y), 1.0));.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, //  float4 _379;.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x32, 0x36, 0x30, 0x2e, 0x78, 0x20, 0x3e, 0x20, //   if ((_260.x > 
	0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, // ((-0.10000000149
	0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, // 0116119384765625
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x33, 0x30, 0x34, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, 0x5f, // ) * _304)) && (_
	0x32, 0x36, 0x30, 0x2e, 0x78, 0x20, 0x3c, 0x20, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, // 260.x < (0.10000
	0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, // 0001490116119384
	0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x33, 0x30, 0x31, 0x29, 0x29, 0x29, // 765625 * _301)))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .    {.        f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x30, // loat4 _368 = _30
	0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x36, 0x38, 0x2e, // 8;.        _368.
	0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z = 1.0;.       
	0x20, 0x5f, 0x33, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, //  _379 = _368;.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //   }.    else.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x37, 0x39, 0x20, //  {.        _379 
	0x3d, 0x20, 0x5f, 0x33, 0x30, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // = _308;.    }.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x38, 0x30, 0x3b, 0x0a, 0x20, //   float4 _380;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x32, 0x36, 0x30, 0x2e, 0x7a, 0x20, 0x3e, //    if ((_260.z >
	0x20, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, //  ((-0.1000000014
	0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, // 9011611938476562
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x33, 0x30, 0x34, 0x29, 0x29, 0x20, 0x26, 0x26, 0x20, 0x28, // 5) * _304)) && (
	0x5f, 0x32, 0x36, 0x30, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x28, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, // _260.z < (0.1000
	0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, // 0000149011611938
	0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x33, 0x30, 0x31, 0x29, 0x29, // 4765625 * _301))
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).    {.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x33, // float4 _372 = _3
	0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x37, 0x32, // 79;.        _372
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x = 1.0;.      
	0x20, 0x20, 0x5f, 0x33, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x37, 0x32, 0x3b, 0x0a, 0x20, //   _380 = _372;. 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, //    }.    else.  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x38, 0x30, //   {.        _380
	0x20, 0x3d, 0x20, 0x5f, 0x33, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //  = _379;.    }. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x33, 0x37, 0x35, 0x20, 0x3d, //    float4 _375 =
	0x20, 0x5f, 0x33, 0x38, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x37, 0x35, 0x2e, //  _380;.    _375.
	0x77, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x38, 0x30, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, // w = _380.w * fas
	0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x32, // t::min((1.0 - _2
	0x37, 0x34, 0x2e, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, // 74.z) * 1.200000
	0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, // 0476837158203125
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, // , 1.0);.    out.
	0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, // bgfx_FragData0 =
	0x20, 0x5f, 0x33, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, //  _375;.    out.g
	0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x5f, 0x32, // l_FragDepth = _2
	0x37, 0x34, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 74.z;.    return
	0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x50, 0x00,                   //  out;.}....P.
};
