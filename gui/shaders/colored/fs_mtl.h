static const uint8_t OtColoredFS_mtl[10537] =
{
	0x46, 0x53, 0x48, 0x0b, 0x5d, 0x29, 0x5e, 0x82, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x12, 0x73, // FSH.])^........s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _shadowmapSample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x73, 0x68, // r...........s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, // adowmapTexture..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // .........u_light
	0x12, 0x1b, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, // ...........u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x04, 0xb0, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, // erial...........
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, // s_shadowmap.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0x28, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, // ......(..#includ
	0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, // e <metal_stdlib>
	0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, // .#include <simd/
	0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, // simd.h>..using n
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, // amespace metal;.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, // .struct _Global.
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // {.    float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x37, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ight[27];.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // oat4 u_material[
	0x34, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, // 4];.};..struct x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, // latMtlMain_out.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, // .    float4 bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, // _FragData0 [[col
	0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // or(0)]];.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // in.{.    float3 
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // v_normal [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // locn0)]];.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, // oat3 v_position 
	0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, // [[user(locn1)]];
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x73, 0x68, // .    float4 v_sh
	0x61, 0x64, 0x6f, 0x77, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // adow [[user(locn
	0x32, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, // 2)]];.};..fragme
	0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, // nt xlatMtlMain_o
	0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, // ut xlatMtlMain(x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, // latMtlMain_in in
	0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, //  [[stage_in]], c
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, // onstant _Global&
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, //  _mtl_u [[buffer
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, // (0)]], texture2d
	0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // <float> s_shadow
	0x6d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, // map [[texture(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, // ]], sampler s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // adowmapSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, // [sampler(0)]]).{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // .    xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, // _out out = {};. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x33, 0x32, 0x20, 0x3d, //    float3 _932 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, //  fast::normalize
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, // (in.v_normal);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x32, 0x3b, //    float3 _3212;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, // .    _3212 = ((_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, // mtl_u.u_light[3]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // .xyz * _mtl_u.u_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // material[2].xyz)
	0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, //  * fast::max(dot
	0x28, 0x5f, 0x39, 0x33, 0x32, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // (_932, _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x30, // light[2].xyz), 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // .0)) + ((_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // u_light[3].xyz *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, //  _mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, // al[3].xyz) * pow
	0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, // (fast::max(dot(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, // ast::normalize(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x32, 0x5d, // mtl_u.u_light[2]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // .xyz + fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // malize(_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, // light[0].xyz - i
	0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x29, 0x2c, 0x20, // n.v_position)), 
	0x5f, 0x39, 0x33, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, // _932), 0.0), _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, // l_u.u_material[3
	0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ].w));.    float
	0x33, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, // 3 _3217;.    for
	0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x30, 0x3b, //  (int _3163 = 0;
	0x20, 0x5f, 0x33, 0x31, 0x36, 0x33, 0x20, 0x3c, 0x20, 0x34, 0x3b, 0x20, 0x5f, 0x33, 0x32, 0x31, //  _3163 < 4; _321
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x33, // 2 = _3217, _3163
	0x2b, 0x2b, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ++).    {.      
	0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x33, //   int _1100 = _3
	0x31, 0x36, 0x33, 0x20, 0x2a, 0x20, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 163 * 4;.       
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x31, 0x31, 0x20, //  int _1101 = 11 
	0x2b, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // + _1100;.       
	0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x31, //  int _1145 = _11
	0x30, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 00 + 14;.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, //  if (_mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // ght[_1101].w != 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // 0.0).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x33, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 3 _1165 = _mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x31, 0x5d, 0x2e, // .u_light[_1101].
	0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // xyz - in.v_posit
	0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ion;.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x6c, //  float _1167 = l
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ength(_1165);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x31, 0x31, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1169 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x35, 0x29, 0x3b, // ormalize(_1165);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .            flo
	0x61, 0x74, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _3213;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //       if (_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x34, 0x35, 0x5d, 0x2e, // .u_light[_1145].
	0x77, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w > 0.0).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x66, //        _3213 = f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x64, 0x6f, 0x74, 0x28, // ast::clamp((dot(
	0x5f, 0x31, 0x31, 0x36, 0x39, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // _1169, fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // malize(-_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x31, // _light[_1100 + 1
	0x34, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 4].xyz)) - _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x34, 0x35, 0x5d, // u.u_light[_1145]
	0x2e, 0x77, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // .w) / (_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x33, // light[_1100 + 13
	0x5d, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // ].w - _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x34, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x2c, 0x20, // ight[_1145].w), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0, 1.0);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x33, 0x20, 0x3d, 0x20, //         _3213 = 
	0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  }.            _
	0x33, 0x32, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x32, 0x20, 0x2b, 0x20, 0x28, // 3217 = _3212 + (
	0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // (((_mtl_u.u_ligh
	0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x5d, 0x2e, 0x78, 0x79, // t[_1100 + 12].xy
	0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, // z * _mtl_u.u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, // erial[2].xyz) * 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, // fast::max(dot(_9
	0x33, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x39, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 32, _1169), 0.0)
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // ) + ((_mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x5d, // ight[_1100 + 12]
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // .xyz * _mtl_u.u_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // material[3].xyz)
	0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, //  * pow(fast::max
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // (dot(fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x39, 0x20, 0x2b, 0x20, 0x66, 0x61, 0x73, // lize(_1169 + fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, // t::normalize(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // l_u.u_light[0].x
	0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // yz - in.v_positi
	0x6f, 0x6e, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x33, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // on)), _932), 0.0
	0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, // ), _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // rial[3].w))) * (
	0x5f, 0x33, 0x32, 0x31, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x66, // _3213 * (1.0 / f
	0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ma(_mtl_u.u_ligh
	0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x33, 0x5d, 0x2e, 0x7a, 0x20, // t[_1100 + 13].z 
	0x2a, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x37, 0x2c, 0x20, // * _1167, _1167, 
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // fma(_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x2b, 0x20, 0x31, 0x33, 0x5d, 0x2e, 0x79, // ht[_1100 + 13].y
	0x2c, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x37, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , _1167, _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x5f, 0x31, 0x31, 0x30, 0x30, 0x20, 0x2b, 0x20, // u_light[_1100 + 
	0x31, 0x33, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 13].x)))));.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, //     }.        el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // se.        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x37, 0x20, 0x3d, //          _3217 =
	0x20, 0x5f, 0x33, 0x32, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _3212;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // }.    }.    floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // t4 _1275 = in.v_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // shadow + float4(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // float2(-1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, // mtl_u.u_light[6]
	0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // .yz, 0.0, 0.0);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x34, 0x3b, //     float _3164;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // .    do.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, //       float3 _14
	0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, // 82 = _1275.xyz /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x2e, 0x77, 0x29, //  float3(_1275.w)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, // ;.        if (((
	0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x34, 0x38, 0x32, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, // any(_1482.xy < f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, // loat2(0.0)) || a
	0x6e, 0x79, 0x28, 0x5f, 0x31, 0x34, 0x38, 0x32, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, // ny(_1482.xy > fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // oat2(1.0))) || (
	0x5f, 0x31, 0x34, 0x38, 0x32, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // _1482.z < 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x34, 0x38, 0x32, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, // || (_1482.z > 1.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 0)).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x34, 0x20, //           _3164 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 1.0;.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x36, //   }.        _316
	0x34, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x34, 0x38, 0x32, 0x2e, 0x7a, // 4 = step(_1482.z
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, // , s_shadowmap.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, // mple(s_shadowmap
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x38, 0x32, 0x2e, 0x78, // Sampler, _1482.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // y).x);.        b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, // reak;.    } whil
	0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // e(false);.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, // oat4 _1287 = in.
	0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // v_shadow + float
	0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, // 4(float2(-1.5, -
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, // light[6].yz, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // , 0.0);.    floa
	0x74, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // t _3166;.    do.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, // oat3 _1567 = _12
	0x38, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 87.xyz / float3(
	0x5f, 0x31, 0x32, 0x38, 0x37, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1287.w);.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x35, 0x36, //   if (((any(_156
	0x37, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 7.xy < float2(0.
	0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x37, // 0)) || any(_1567
	0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, // .xy > float2(1.0
	0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x37, 0x2e, 0x7a, 0x20, // ))) || (_1567.z 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x35, 0x36, // < 0.0)) || (_156
	0x37, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 7.z > 1.0)).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, //   _3166 = 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, //     _3166 = step
	0x28, 0x5f, 0x31, 0x35, 0x36, 0x37, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // (_1567.z, s_shad
	0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // owmap.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // hadowmapSampler,
	0x20, 0x5f, 0x31, 0x35, 0x36, 0x37, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, //  _1567.xy).x);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, //   } while(false)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x32, // ;.    float4 _12
	0x39, 0x39, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // 99 = in.v_shadow
	0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, //  + float4(float2
	0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // (-1.5, 0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, // tl_u.u_light[6].
	0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // yz, 0.0, 0.0);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x38, 0x3b, 0x0a, //    float _3168;.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //     do.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x35, //      float3 _165
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, // 1 = _1299.xyz / 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x32, 0x39, 0x39, 0x2e, 0x77, 0x29, 0x3b, // float3(_1299.w);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, // .        if (((a
	0x6e, 0x79, 0x28, 0x5f, 0x31, 0x36, 0x35, 0x31, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, // ny(_1651.xy < fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, // oat2(0.0)) || an
	0x79, 0x28, 0x5f, 0x31, 0x36, 0x35, 0x31, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, // y(_1651.xy > flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, // at2(1.0))) || (_
	0x31, 0x36, 0x35, 0x31, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // 1651.z < 0.0)) |
	0x7c, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x35, 0x31, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, // | (_1651.z > 1.0
	0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // )).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x38, 0x20, 0x3d, //          _3168 =
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  1.0;.          
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x38, //  }.        _3168
	0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x36, 0x35, 0x31, 0x2e, 0x7a, 0x2c, //  = step(_1651.z,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, //  s_shadowmap.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, // ple(s_shadowmapS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x31, 0x2e, 0x78, 0x79, // ampler, _1651.xy
	0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, // ).x);.        br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, // eak;.    } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // (false);.    flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, // at4 _1311 = in.v
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // _shadow + float4
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, // (float2(-1.5, 1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // 5) * _mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // ght[6].yz, 0.0, 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 0.0);.    float 
	0x5f, 0x33, 0x31, 0x37, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, // _3170;.    do.  
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   {.        floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x31, // t3 _1735 = _1311
	0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, // .xyz / float3(_1
	0x33, 0x31, 0x31, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 311.w);.        
	0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x2e, // if (((any(_1735.
	0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, // xy < float2(0.0)
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x2e, 0x78, // ) || any(_1735.x
	0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, // y > float2(1.0))
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x2e, 0x7a, 0x20, 0x3c, 0x20, // ) || (_1735.z < 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x33, 0x35, 0x2e, // 0.0)) || (_1735.
	0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z > 1.0)).      
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x5f, 0x33, 0x31, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _3170 = 1.0;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, //   _3170 = step(_
	0x31, 0x37, 0x33, 0x35, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // 1735.z, s_shadow
	0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // map.sample(s_sha
	0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // dowmapSampler, _
	0x31, 0x37, 0x33, 0x35, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 1735.xy).x);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, // } while(false);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x33, //     float4 _1323
	0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, //  = in.v_shadow +
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, //  float4(float2(-
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 0.5, -1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, // l_u.u_light[6].y
	0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // z, 0.0, 0.0);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x32, 0x3b, 0x0a, 0x20, //   float _3172;. 
	0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //    do.    {.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x39, //     float3 _1819
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x32, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, //  = _1323.xyz / f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x33, 0x32, 0x33, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // loat3(_1323.w);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, //         if (((an
	0x79, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, // y(_1819.xy < flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, // at2(0.0)) || any
	0x28, 0x5f, 0x31, 0x38, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (_1819.xy > floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, // t2(1.0))) || (_1
	0x38, 0x31, 0x39, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, // 819.z < 0.0)) ||
	0x20, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x39, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, //  (_1819.z > 1.0)
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x32, 0x20, 0x3d, 0x20, //         _3172 = 
	0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0;.           
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x32, 0x20, // }.        _3172 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x39, 0x2e, 0x7a, 0x2c, 0x20, // = step(_1819.z, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, // s_shadowmap.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, // le(s_shadowmapSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x29, // mpler, _1819.xy)
	0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, // .x);.        bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, // ak;.    } while(
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // false);.    floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // t4 _1335 = in.v_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // shadow + float4(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // float2(-0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, // mtl_u.u_light[6]
	0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // .yz, 0.0, 0.0);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x34, 0x3b, //     float _3174;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // .    do.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x39, //       float3 _19
	0x30, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, // 03 = _1335.xyz /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x33, 0x33, 0x35, 0x2e, 0x77, 0x29, //  float3(_1335.w)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, // ;.        if (((
	0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, // any(_1903.xy < f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, // loat2(0.0)) || a
	0x6e, 0x79, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, // ny(_1903.xy > fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // oat2(1.0))) || (
	0x5f, 0x31, 0x39, 0x30, 0x33, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, // _1903.z < 0.0)) 
	0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, // || (_1903.z > 1.
	0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 0)).        {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x34, 0x20, //           _3174 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 1.0;.         
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, //   }.        _317
	0x34, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x2e, 0x7a, // 4 = step(_1903.z
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, // , s_shadowmap.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, // mple(s_shadowmap
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x33, 0x2e, 0x78, // Sampler, _1903.x
	0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // y).x);.        b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, // reak;.    } whil
	0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // e(false);.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, // oat4 _1347 = in.
	0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // v_shadow + float
	0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, // 4(float2(-0.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .5) * _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // ight[6].yz, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.0);.    float
	0x20, 0x5f, 0x33, 0x31, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, //  _3176;.    do. 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    {.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x39, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x34, // at3 _1987 = _134
	0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, // 7.xyz / float3(_
	0x31, 0x33, 0x34, 0x37, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1347.w);.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x39, 0x38, 0x37, //  if (((any(_1987
	0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, // .xy < float2(0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x31, 0x39, 0x38, 0x37, 0x2e, // )) || any(_1987.
	0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, // xy > float2(1.0)
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x38, 0x37, 0x2e, 0x7a, 0x20, 0x3c, // )) || (_1987.z <
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x38, 0x37, //  0.0)) || (_1987
	0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .z > 1.0)).     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x5f, 0x33, 0x31, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, //  _3176 = 1.0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //    _3176 = step(
	0x5f, 0x31, 0x39, 0x38, 0x37, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // _1987.z, s_shado
	0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // wmap.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // adowmapSampler, 
	0x5f, 0x31, 0x39, 0x38, 0x37, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _1987.xy).x);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, //  } while(false);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x35, // .    float4 _135
	0x39, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, // 9 = in.v_shadow 
	0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // + float4(float2(
	0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // -0.5, 1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, // l_u.u_light[6].y
	0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // z, 0.0, 0.0);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x38, 0x3b, 0x0a, 0x20, //   float _3178;. 
	0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //    do.    {.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x31, //     float3 _2071
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, //  = _1359.xyz / f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x33, 0x35, 0x39, 0x2e, 0x77, 0x29, 0x3b, 0x0a, // loat3(_1359.w);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, //         if (((an
	0x79, 0x28, 0x5f, 0x32, 0x30, 0x37, 0x31, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, // y(_2071.xy < flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, // at2(0.0)) || any
	0x28, 0x5f, 0x32, 0x30, 0x37, 0x31, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (_2071.xy > floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, // t2(1.0))) || (_2
	0x30, 0x37, 0x31, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, // 071.z < 0.0)) ||
	0x20, 0x28, 0x5f, 0x32, 0x30, 0x37, 0x31, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, //  (_2071.z > 1.0)
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ).        {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x38, 0x20, 0x3d, 0x20, //         _3178 = 
	0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0;.           
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x38, 0x20, // }.        _3178 
	0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x30, 0x37, 0x31, 0x2e, 0x7a, 0x2c, 0x20, // = step(_2071.z, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, // s_shadowmap.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, // le(s_shadowmapSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x31, 0x2e, 0x78, 0x79, 0x29, // mpler, _2071.xy)
	0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, // .x);.        bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, // ak;.    } while(
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // false);.    floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // t4 _1371 = in.v_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // shadow + float4(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, // float2(0.5, -1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ) * _mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // ht[6].yz, 0.0, 0
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .0);.    float _
	0x33, 0x31, 0x38, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, // 3180;.    do.   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  {.        float
	0x33, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x31, 0x2e, // 3 _2155 = _1371.
	0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x33, // xyz / float3(_13
	0x37, 0x31, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, // 71.w);.        i
	0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x35, 0x2e, 0x78, // f (((any(_2155.x
	0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, // y < float2(0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x35, 0x2e, 0x78, 0x79, //  || any(_2155.xy
	0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, //  > float2(1.0)))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x35, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, //  || (_2155.z < 0
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x35, 0x2e, 0x7a, // .0)) || (_2155.z
	0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  > 1.0)).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //  {.            _
	0x33, 0x31, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3180 = 1.0;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x5f, 0x33, 0x31, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, //  _3180 = step(_2
	0x31, 0x35, 0x35, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, // 155.z, s_shadowm
	0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ap.sample(s_shad
	0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, // owmapSampler, _2
	0x31, 0x35, 0x35, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 155.xy).x);.    
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, //     break;.    }
	0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, //  while(false);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x33, 0x38, 0x33, 0x20, //    float4 _1383 
	0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, // = in.v_shadow + 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // float4(float2(0.
	0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 5, -0.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, // u.u_light[6].yz,
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  0.0, 0.0);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float _3182;.   
	0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  do.    {.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x32, 0x33, 0x39, 0x20, 0x3d, //   float3 _2239 =
	0x20, 0x5f, 0x31, 0x33, 0x38, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, //  _1383.xyz / flo
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x33, 0x38, 0x33, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // at3(_1383.w);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, //       if (((any(
	0x5f, 0x32, 0x32, 0x33, 0x39, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _2239.xy < float
	0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, // 2(0.0)) || any(_
	0x32, 0x32, 0x33, 0x39, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 2239.xy > float2
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x33, // (1.0))) || (_223
	0x39, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, // 9.z < 0.0)) || (
	0x5f, 0x32, 0x32, 0x33, 0x39, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, // _2239.z > 1.0)).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x31, 0x2e, //       _3182 = 1.
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, // 0;.            b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // reak;.        }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x32, 0x20, 0x3d, 0x20, //         _3182 = 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x33, 0x39, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, // step(_2239.z, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowmap.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, // (s_shadowmapSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x32, 0x33, 0x39, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, // ler, _2239.xy).x
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, // );.        break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, // ;.    } while(fa
	0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // lse);.    float4
	0x20, 0x5f, 0x31, 0x33, 0x39, 0x35, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, //  _1395 = in.v_sh
	0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, // adow + float4(fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // oat2(0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, // _u.u_light[6].yz
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // , 0.0, 0.0);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, //  float _3184;.  
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //   do.    {.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x33, 0x20, //    float3 _2323 
	0x3d, 0x20, 0x5f, 0x31, 0x33, 0x39, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, // = _1395.xyz / fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x33, 0x39, 0x35, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, // oat3(_1395.w);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, //        if (((any
	0x28, 0x5f, 0x32, 0x33, 0x32, 0x33, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // (_2323.xy < floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, // t2(0.0)) || any(
	0x5f, 0x32, 0x33, 0x32, 0x33, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _2323.xy > float
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x33, // 2(1.0))) || (_23
	0x32, 0x33, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // 23.z < 0.0)) || 
	0x28, 0x5f, 0x32, 0x33, 0x32, 0x33, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // (_2323.z > 1.0))
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x31, //        _3184 = 1
	0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0;.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, // break;.        }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x34, 0x20, 0x3d, // .        _3184 =
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x33, 0x32, 0x33, 0x2e, 0x7a, 0x2c, 0x20, 0x73, //  step(_2323.z, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // _shadowmap.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, // e(s_shadowmapSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x32, 0x33, 0x2e, 0x78, 0x79, 0x29, 0x2e, // pler, _2323.xy).
	0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, // x);.        brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, // k;.    } while(f
	0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // alse);.    float
	0x34, 0x20, 0x5f, 0x31, 0x34, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, // 4 _1407 = in.v_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, // hadow + float4(f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, // loat2(0.5, 1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // [6].yz, 0.0, 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, // );.    float _31
	0x38, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // 86;.    do.    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x32, 0x34, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x30, 0x37, 0x2e, 0x78, 0x79, // _2407 = _1407.xy
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x34, 0x30, 0x37, // z / float3(_1407
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // .w);.        if 
	0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x34, 0x30, 0x37, 0x2e, 0x78, 0x79, 0x20, // (((any(_2407.xy 
	0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, // < float2(0.0)) |
	0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x34, 0x30, 0x37, 0x2e, 0x78, 0x79, 0x20, 0x3e, // | any(_2407.xy >
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, //  float2(1.0))) |
	0x7c, 0x20, 0x28, 0x5f, 0x32, 0x34, 0x30, 0x37, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // | (_2407.z < 0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x34, 0x30, 0x37, 0x2e, 0x7a, 0x20, 0x3e, // )) || (_2407.z >
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //  1.0)).        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, // .            _31
	0x38, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 86 = 1.0;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //      }.        _
	0x33, 0x31, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x34, 0x30, // 3186 = step(_240
	0x37, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, // 7.z, s_shadowmap
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x34, 0x30, // mapSampler, _240
	0x37, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7.xy).x);.      
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, //   break;.    } w
	0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hile(false);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x31, 0x39, 0x20, 0x3d, 0x20, //  float4 _1419 = 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, // in.v_shadow + fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, // oat4(float2(1.5,
	0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -1.5) * _mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, // u_light[6].yz, 0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .0, 0.0);.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, // oat _3188;.    d
	0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // o.    {.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x34, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, // float3 _2491 = _
	0x31, 0x34, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1419.xyz / float
	0x33, 0x28, 0x5f, 0x31, 0x34, 0x31, 0x39, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3(_1419.w);.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, //     if (((any(_2
	0x34, 0x39, 0x31, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 491.xy < float2(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x34, // 0.0)) || any(_24
	0x39, 0x31, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 91.xy > float2(1
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x34, 0x39, 0x31, 0x2e, // .0))) || (_2491.
	0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, // z < 0.0)) || (_2
	0x34, 0x39, 0x31, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, // 491.z > 1.0)).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, //     _3188 = 1.0;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, // .            bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ak;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x74, //       _3188 = st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x34, 0x39, 0x31, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // ep(_2491.z, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // adowmap.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _shadowmapSample
	0x72, 0x2c, 0x20, 0x5f, 0x32, 0x34, 0x39, 0x31, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, // r, _2491.xy).x);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, // .        break;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, //     } while(fals
	0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // e);.    float4 _
	0x31, 0x34, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, // 1431 = in.v_shad
	0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, // ow + float4(floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(1.5, -0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, // _mtl_u.u_light[6
	0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, // ].yz, 0.0, 0.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x30, // .    float _3190
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // ;.    do.    {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, //        float3 _2
	0x35, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x33, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, // 575 = _1431.xyz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x34, 0x33, 0x31, 0x2e, 0x77, // / float3(_1431.w
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // );.        if ((
	0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x35, 0x37, 0x35, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, // (any(_2575.xy < 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // float2(0.0)) || 
	0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x35, 0x37, 0x35, 0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, // any(_2575.xy > f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, // loat2(1.0))) || 
	0x28, 0x5f, 0x32, 0x35, 0x37, 0x35, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // (_2575.z < 0.0))
	0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x37, 0x35, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, //  || (_2575.z > 1
	0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, // .0)).        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x30, //            _3190
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = 1.0;.        
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, //    }.        _31
	0x39, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x35, 0x37, 0x35, 0x2e, // 90 = step(_2575.
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, // z, s_shadowmap.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, // ample(s_shadowma
	0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x37, 0x35, 0x2e, // pSampler, _2575.
	0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // xy).x);.        
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, // break;.    } whi
	0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // le(false);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x69, 0x6e, // loat4 _1443 = in
	0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // .v_shadow + floa
	0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, // t4(float2(1.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // .5) * _mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, // ight[6].yz, 0.0,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  0.0);.    float
	0x20, 0x5f, 0x33, 0x31, 0x39, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, //  _3192;.    do. 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //    {.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x36, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, 0x34, // at3 _2659 = _144
	0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, // 3.xyz / float3(_
	0x31, 0x34, 0x34, 0x33, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1443.w);.       
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x36, 0x35, 0x39, //  if (((any(_2659
	0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, // .xy < float2(0.0
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x36, 0x35, 0x39, 0x2e, // )) || any(_2659.
	0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, // xy > float2(1.0)
	0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x36, 0x35, 0x39, 0x2e, 0x7a, 0x20, 0x3c, // )) || (_2659.z <
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x36, 0x35, 0x39, //  0.0)) || (_2659
	0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .z > 1.0)).     
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x5f, 0x33, 0x31, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, //  _3192 = 1.0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //    _3192 = step(
	0x5f, 0x32, 0x36, 0x35, 0x39, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // _2659.z, s_shado
	0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // wmap.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // adowmapSampler, 
	0x5f, 0x32, 0x36, 0x35, 0x39, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, // _2659.xy).x);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, //  } while(false);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x34, 0x35, // .    float4 _145
	0x35, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x20, // 5 = in.v_shadow 
	0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // + float4(float2(
	0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1.5) * _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x36, 0x5d, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, // light[6].yz, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // , 0.0);.    floa
	0x74, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, // t _3194;.    do.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x34, // oat3 _2743 = _14
	0x35, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 55.xyz / float3(
	0x5f, 0x31, 0x34, 0x35, 0x35, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1455.w);.      
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x37, 0x34, //   if (((any(_274
	0x33, 0x2e, 0x78, 0x79, 0x20, 0x3c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 3.xy < float2(0.
	0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x61, 0x6e, 0x79, 0x28, 0x5f, 0x32, 0x37, 0x34, 0x33, // 0)) || any(_2743
	0x2e, 0x78, 0x79, 0x20, 0x3e, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, // .xy > float2(1.0
	0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x37, 0x34, 0x33, 0x2e, 0x7a, 0x20, // ))) || (_2743.z 
	0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x32, 0x37, 0x34, // < 0.0)) || (_274
	0x33, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // 3.z > 1.0)).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, //   _3194 = 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;.        }.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, //     _3194 = step
	0x28, 0x5f, 0x32, 0x37, 0x34, 0x33, 0x2e, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // (_2743.z, s_shad
	0x6f, 0x77, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // owmap.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // hadowmapSampler,
	0x20, 0x5f, 0x32, 0x37, 0x34, 0x33, 0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, //  _2743.xy).x);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, //   } while(false)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x37, // ;.    float4 _97
	0x39, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, // 9 = _mtl_u.u_mat
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // erial[0] * float
	0x34, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // 4(fma(_mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, // ight[1].xyz, _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, // l_u.u_material[1
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x33, 0x32, 0x31, 0x32, 0x20, 0x2a, 0x20, 0x28, // ].xyz, _3212 * (
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, // (_mtl_u.u_light[
	0x36, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, // 6].x != 0.0) ? (
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, // (((((((((((((((_
	0x33, 0x31, 0x36, 0x34, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x36, 0x36, 0x29, 0x20, 0x2b, 0x20, // 3164 + _3166) + 
	0x5f, 0x33, 0x31, 0x36, 0x38, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x30, 0x29, 0x20, // _3168) + _3170) 
	0x2b, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x32, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x34, // + _3172) + _3174
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x36, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, // ) + _3176) + _31
	0x37, 0x38, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x5f, // 78) + _3180) + _
	0x33, 0x31, 0x38, 0x32, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x34, 0x29, 0x20, 0x2b, // 3182) + _3184) +
	0x20, 0x5f, 0x33, 0x31, 0x38, 0x36, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x38, 0x38, 0x29, //  _3186) + _3188)
	0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x39, //  + _3190) + _319
	0x32, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x33, 0x31, 0x39, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, // 2) + _3194) * 0.
	0x30, 0x36, 0x32, 0x35, 0x29, 0x20, 0x3a, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x31, // 0625) : 1.0)), 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, // .0);.    out.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x65, // x_FragData0 = se
	0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x39, 0x37, 0x39, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, // lect(_979, mix(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x35, 0x5d, // mtl_u.u_light[5]
	0x2c, 0x20, 0x5f, 0x39, 0x37, 0x39, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x66, // , _979, float4(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // ast::clamp((_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x7a, 0x20, // _u.u_light[4].z 
	0x2d, 0x20, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // - distance(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // u.u_light[0].xyz
	0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, // , in.v_position)
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, // ) / (_mtl_u.u_li
	0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // ght[4].z - _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x2c, // u.u_light[4].y),
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x62, 0x6f, //  0.0, 1.0))), bo
	0x6f, 0x6c, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // ol4(_mtl_u.u_lig
	0x68, 0x74, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ht[4].x != 0.0))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, // ;.    return out
	0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x10, 0x02,                                           // ;.}......
};
