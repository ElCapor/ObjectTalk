#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 2020-2021 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

var cameraRadius = 120.0;

// define our view
class MyView : gui.View {
	function __init__(this) {
		this.camera = gui.Camera();
		this.setCamera(this.camera);

		this.cameraY = 0.0;
		this.cameraRotation = 0.0;
		this.camera.setPosition(0.0, 0.0, cameraRadius);
	}

	function onKey(this, key, mods) {
		if (key == gui.keyDown) {
			this.updateCameraDirection(-2);

		} elif (key == gui.keyUp) {
			this.updateCameraDirection(2);

		} elif (key == gui.keyLeft) {
			this.updateCameraPosition(0.02);

		} elif (key == gui.keyRight) {
			this.updateCameraPosition(-0.02);

		}  elif (key == gui.keyHome) {
			this.cameraY = 0.0;
			this.cameraRotation = 0.0;
			this.camera.setPosition(0.0, 0.0, cameraRadius);
			this.camera.setDirection(0.0, 0.0, 0.0);
		}
	}

	function onMouseDrag(this, button, dx, dy) {
		this.updateCameraPosition(dx / 400.0);
		this.updateCameraDirection(dy / 2.0);
	}

	function updateCameraDirection(this, amount) {
		this.cameraY += amount;
		this.cameraY = this.cameraY.clamp(-120, 120);
		this.camera.setDirection(0.0, this.cameraY, 0.0);
	}

	function updateCameraPosition(this, amount) {
		this.cameraRotation += amount;
		var x = this.cameraRotation.sin() * cameraRadius;
		var z = this.cameraRotation.cos() * cameraRadius;
		this.camera.setPosition(x, 0.0, z);
	}
}

// define our application
class MyApp : gui.Application {
	function __init__(this) {
		this.sphereRotation = 0.0;
	}

	function setup(this, screen) {
		// create all components
		var skybox = gui.Skybox().setCubemap(__DIR__ + "/assets/yokohama.ktx");

		var light = gui.Light()
			.setPosition(25, 25, 40)
			.setDiffuseRGB(0.8, 0.8, 0.8)
			.setSpecularRGB(0.8, 0.8, 0.8);

		this.sphere = gui.Wireframe()
			.setGeometry(gui.Sphere(20, 40, 40))
			.setMaterial(gui.Material().setMaterial("gold"));

		var scene = gui.Scene()
			.add(skybox)
			.add(this.sphere)
			.add(light);

		// create our view and scene
		screen.add(MyView()
			.setScreenArea(0, 0, 100, 100)
			.setScene(scene));
	}

	function update(this) {
		this.sphereRotation -= 0.005;
		this.sphere.rotateY(this.sphereRotation);
	}
}

// instantiate application and run it
var app = MyApp();
app.run("Skybox Demonstration");
