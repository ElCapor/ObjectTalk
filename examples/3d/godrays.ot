#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 2020-2022 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

class App : gui.App {
	function setup(this) {
		var ambient = gui.AmbientLight();

		var light = gui.DirectionalLight()
			.setDirection(-50, -70, -30)
			.castShadow(200, 1, 200);

		var fog = gui.Fog()
			.setColor("#cce0ff")
			.setDistances(150, 250);

		var terrain = gui.Mesh()
			.setGeometry(gui.PlaneGeometry()
				.setWidth(400)
				.setHeight(400)
				.setWidthSegments(200)
				.setHeightSegments(200))
			.setMaterial(gui.BlendMappedMaterial()
				.setTextures(
					Path(__DIR__, "assets", "blendmap.png"),
					Path(__DIR__, "assets", "forest.jpg"),
					Path(__DIR__, "assets", "forestfloor.jpg"),
					Path(__DIR__, "assets", "moss.jpg"),
					Path(__DIR__, "assets", "woodchips.jpg"))
				.setScale(0.05))
			.receiveShadow(true)
			.rotateX(-pi / 2.0);

		var model = gui.loadObj(Path(__DIR__, "assets", "maple.obj"))
			.castShadow(true)
			.receiveShadow(true);

		var scene = gui.Scene()
			.add(ambient)
			.add(light)
			.add(fog)
			.add(background)
			.add(terrain)
			.add(model);

		var camera = gui.Camera()
			.setPerspective(45, 0.1, 1000)
			.setCircleTargetMode()
			.setPitchLimits(0.1, pi / 2.0 - 0.1)
			.setPitch(0.2)
			.setDistanceLimits(20.0, 400.0)
			.setDistance(150.0);

		var view = gui.View()
			.setCamera(camera)
			.setScene(scene);

		this.add(view);
	}
}

var app = App();
os.runGUI();
