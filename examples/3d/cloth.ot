#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 2020-2023 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.


var gui = import("gui");

// define our application
class App : gui.App {
	function setup(this) {
		// create all components
		var ambient = gui.AmbientLight();

		var light = gui.DirectionalLight()
			.setDirection(-100, -70, -100)
			.castShadow(true);

		var fog = gui.Fog()
			.setColor("#cce0ff")
			.setDistances(50, 150);

		var sky = gui.Sky()
			.setRadius(100)
			.setColor("#cce0ff");

		var grass = gui.Mesh()
			.receiveShadow(true)
			.setGeometry(gui.PlaneGeometry(400, 400, 10, 10))
			.setMaterial(gui.TexturedMaterial()
				.setTexture(Path(__DIR__, "assets", "grass.jpg"))
				.setScale(0.1))
			.rotateX(-pi / 2.0);

		var poleGeometry = gui.CylinderGeometry(0.5, 0.5, 26);
		var poleMaterial = gui.ColoredMaterial("bronze");

		var pole1 = gui.Mesh()
			.castShadow(true)
			.receiveShadow(true)
			.setGeometry(poleGeometry)
			.setMaterial(poleMaterial)
			.translate(-16, 13, 0);

		var pole2 = gui.Mesh()
			.castShadow(true)
			.receiveShadow(true)
			.setGeometry(poleGeometry)
			.setMaterial(poleMaterial)
			.translate(16, 13, 0);

		var wire = gui.Mesh()
			.castShadow(true)
			.setGeometry(gui.CylinderGeometry(0.1, 0.1, 34))
			.setMaterial(gui.ColoredMaterial("black plastic"))
			.rotateZ(pi / 2.0)
			.translate(0, 25, 0);

		var plane = gui.PlaneGeometry(20, 20, 20, 20);

		this.addSimulation(gui.Cloth()
			.setPlane(plane)
			.setPins(4)
			.start());

		var cloth = gui.Mesh()
			.castShadow(true)
			.setGeometry(plane)
			.setMaterial(gui.TexturedMaterial()
				.setTexture(Path(__DIR__, "assets", "cloth.png"))
				.setDoubleSided()
				.setTransparent(true))
			.translate(0, 15, 0);

		// create scene
		var scene = gui.Scene()
			.add(ambient)
			.add(light)
			.add(fog)
			.add(sky)
			.add(grass)
			.add(pole1)
			.add(pole2)
			.add(wire)
			.add(cloth);

		// create camera
		var camera = gui.Camera()
			.setPerspective(45, 1.0, 200.0)
			.setCircleTargetMode()
			.setTarget(0, 10, 0)
			.setPitchLimits(0.0, pi / 2.0 - 0.1)
			.setPitch(0.3)
			.setYaw(-pi / 8.0)
			.setDistanceLimits(20.0, 100.0)
			.setDistance(50.0);


		// create view
		this.add(gui.View()
			.setCamera(camera)
			.setScene(scene));
	}
}

// instantiate application and run it
var app = App();
app.run();
