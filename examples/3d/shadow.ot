#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 2020-2022 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

class App : gui.App {
	function setup(this) {
		var ambient = gui.AmbientLight();

		var light = gui.DirectionalLight()
			.setDirection(0, -8, -5)
			.castShadow(true);

		var floor = gui.Mesh()
			.receiveShadow(true)
			.setGeometry(gui.PlaneGeometry(10, 10))
			.setMaterial(gui.ColoredMaterial("white"))
			.translate(0.0, -3.0, 0.0)
			.rotateX(-pi / 2.0);

		var object = gui.Mesh()
			.castShadow(true)
			.setGeometry(gui.TorusGeometry())
			.setMaterial(gui.ColoredMaterial("gold"))
			.translate(0, 0, 1);

		this.addAnimation(gui.Animation()
			.from(0.0)
			.to(pi * 2.0)
			.during(15000)
			.continuous()
			.onStep(function(angle) {
				object.rotateAroundVector(angle, 1, 1, 0);
			}));

		var scene = gui.Scene()
			.add(ambient)
			.add(light)
			.add(floor)
			.add(object);

		var camera = gui.Camera()
			.setPerspective(30, 5.0, 45.0)
			.setTarget(0.0, -2.0, 0.0)
			.setCircleTargetMode()
			.setPitchLimits(0.0, pi / 2.0 - 0.1)
			.setPitch(0.3)
			.setYaw(0.5)
			.setDistanceLimits(10.0, 35.0)
			.setDistance(20.0)
			.setNearFarLimits(1.0, 20, 20.0, 100.0);

		var view = gui.View()
			.setScreenArea(25, 0, 75, 100)
			.setCamera(camera)
			.setScene(scene);

		var panel = gui.Panel(0, 0, 25, 100);

		var node = gui.TreeNode("Camera:");
		node.add(gui.CameraController(camera));
		panel.add(node);

		node = gui.TreeNode("Ambient light:");
		node.add(gui.AmbientLightController(ambient));
		panel.add(node);

		node = gui.TreeNode("Directional light:");
		node.add(gui.DirectionalLightController(light));
		panel.add(node);

		this.add(view).add(panel);
	}
}

var app = App();
os.runGUI();
