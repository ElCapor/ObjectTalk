#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 2020-2023 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

class App : gui.App {
	function setup(this) {
		var ambient = gui.AmbientLight();
		var light = gui.DirectionalLight(-1, -2, -4);

		var geometry = gui.TorusGeometry();
		var gold = gui.ColoredMaterial("gold");
		var object = gui.Mesh(geometry, gold).setWireframe(true);

		this.addAnimation(gui.Animation()
			.from(0.0)
			.to(pi * 2.0)
			.during(15000)
			.continuous()
			.onStep(function(angle) {
				object.rotateAroundVector(angle, 1, 1, 0);
			}));

		var scene = gui.Scene()
			.add(ambient)
			.add(light)
			.add(object);

		var camera = gui.Camera()
			.setPerspective(45, 0.1, 100)
			.setPosition(0, 0, 4);

		var view = gui.View()
			.setScreenArea(25, 0, 75, 100)
			.setCamera(camera)
			.setScene(scene);

		var panel = gui.Panel(0, 0, 25, 100);

		var node = gui.TreeNode("Camera:");
		node.add(gui.CameraController(camera));
		panel.add(node);

		node = gui.TreeNode("Ambient Light:");
		node.add(gui.AmbientLightController(ambient));
		panel.add(node);

		node = gui.TreeNode("Directional Light:");
		node.add(gui.DirectionalLightController(light));
		panel.add(node);

		node = gui.TreeNode("Torus:");

		node.add(gui.RealSlider("Radius", 0, 4, 1, function(value) {
			geometry.setRadius(value);
		}));

		node.add(gui.RealSlider("Tube Radius", 0, 4, 0.4, function(value) {
			geometry.setTubeRadius(value);
		}));

		node.add(gui.IntegerSlider("Radial Segments", 4, 64, 32, function(value) {
			geometry.setRadialSegments(value);
		}));

		node.add(gui.IntegerSlider("Tubular Segments", 4, 128, 16, function(value) {
			geometry.setTubularSegments(value);
		}));

		node.add(gui.RealSlider("Radial Start", 0, pi * 2, 0, function(value) {
			geometry.setRadialStart(value);
		}));

		node.add(gui.RealSlider("Radial Length", 0, pi * 2, pi * 2, function(value) {
			geometry.setRadialLength(value);
		}));

		node.add(gui.RealSlider("Tubular Start", 0, pi * 2, 0, function(value) {
			geometry.setTubularStart(value);
		}));

		node.add(gui.RealSlider("Tubular Length", 0, pi * 2, pi * 2, function(value) {
			geometry.setTubularLength(value);
		}));

		panel.add(node);
		this.add(view).add(panel);
	}
}

var app = App();
app.run();
