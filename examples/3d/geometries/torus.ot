#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 2020-2021 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

class MyApp : gui.Application {
	function setup(this, screen) {
		var geometry = gui.Torus();
		var gold = gui.Material("material", "gold");
		var object = gui.Mesh(geometry, gold).setWireframe(true);

		this.animation()
			.from(0.0)
			.to(pi * 2.0)
			.during(15000)
			.continuous()
			.onStep(function(angle) {
				object.rotateAroundVector(angle, 1, 1, 0);
			});

		var ambient = gui.Ambient();
		var light = gui.Light().setPosition(1, 2, 4);

		var scene = gui.Scene()
			.add(object)
			.add(ambient)
			.add(light);

		var camera = gui.Camera()
			.setPosition(0, 0, 4)
			.setFOV(45);

		var view = gui.View()
			.setScreenArea(35, 0, 65, 100)
			.setCamera(camera)
			.setScene(scene);

		var panel = gui.Panel(0, 0, 35, 100);

		var node = gui.TreeNode("Ambient Light:");
		node.add(gui.AmbientController(ambient));
		panel.add(node);

		node = gui.TreeNode("Point Light:");
		node.add(gui.LightController(light));
		panel.add(node);

		node = gui.TreeNode("Torus:");

		node.add(gui.RealSlider("Radius", 0, 4, 1, function(value) {
			geometry.setRadius(value);
		}));

		node.add(gui.RealSlider("Tube Radius", 0, 4, 0.4, function(value) {
			geometry.setTubeRadius(value);
		}));

		node.add(gui.IntegerSlider("Radial Segments", 4, 64, 32, function(value) {
			geometry.setRadialSegments(value);
		}));

		node.add(gui.IntegerSlider("Tubular Segments", 4, 128, 16, function(value) {
			geometry.setTubularSegments(value);
		}));

		node.add(gui.RealSlider("Radial Start", 0, pi * 2, 0, function(value) {
			geometry.setRadialStart(value);
		}));

		node.add(gui.RealSlider("Radial Length", 0, pi * 2, pi * 2, function(value) {
			geometry.setRadialLength(value);
		}));

		node.add(gui.RealSlider("Tubular Start", 0, pi * 2, 0, function(value) {
			geometry.setTubularStart(value);
		}));

		node.add(gui.RealSlider("Tubular Length", 0, pi * 2, pi * 2, function(value) {
			geometry.setTubularLength(value);
		}));

		panel.add(node);
		screen.add(view).add(panel);
	}
}

var app = MyApp();
app.run("3D Geometry");
