#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 2020-2022 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

class App : gui.App {
	function setup(this) {
		var font = gui.Font(__DIR__ + "/../assets/roboto.ttf", 0.8);
		var text = "ObjectTalk";
		var width = font.getWidth(text);
		var letters = gui.Shape().text(font, text);

		var geometry = gui.ExtrudedGeometry(letters, 0.2, 100);
		var gold = gui.ColoredMaterial("gold");

		var object = gui.Mesh(geometry, gold)
			.transformationOrder("STR")
			.translate(-width / 2.0, 0, 0);

		this.addAnimation(gui.Animation()
			.from(0.0)
			.to(pi * 2.0)
			.during(15000)
			.continuous()
			.onStep(function(angle) {
				object.rotateAroundVector(angle, 0, 1, 0);
			}));

		var ambient = gui.AmbientLight();

		var light = gui.DirectionalLight()
			.setDirection(-1, -2, -4)
			.castShadow(5, 3, 100);

		var scene = gui.Scene()
			.add(ambient)
			.add(light)
			.add(object);

		var camera = gui.Camera()
			.setPerspective(45, 0.1, 100)
			.setPosition(0, 0, 4);

		var view = gui.View()
			.setScreenArea(25, 0, 75, 100)
			.setCamera(camera)
			.setScene(scene);

		var panel = gui.Panel(0, 0, 25, 100);

		var node = gui.TreeNode("Camera:");
		node.add(gui.CameraController(camera));
		panel.add(node);

		node = gui.TreeNode("Ambient Light:");
		node.add(gui.AmbientLightController(ambient));
		panel.add(node);

		node = gui.TreeNode("Point Light:");
		node.add(gui.DirectionalLightController(light));
		panel.add(node);

		node = gui.TreeNode("Text:");

		node.add(gui.Checkbox("Wireframe", false, function(value) {
			object.setWireframe(value);
		}));

		node.add(gui.Checkbox("Cast shadow", false, function(value) {
			object.castShadow(value);
		}));

		node.add(gui.Checkbox("Receive shadow", false, function(value) {
			object.receiveShadow(value);
		}));

		node.add(gui.RealSlider("Depth", 0.05, 2, 0.2, function(value) {
			geometry.setDepth(value);
		}));

		node.add(gui.IntegerSlider("Segments", 10, 200, 100, function(value) {
			geometry.setSegments(value);
		}));

		panel.add(node);
		this.add(view).add(panel);
	}
}

var app = App();
os.runGUI();
